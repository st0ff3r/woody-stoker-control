gplink-0.13.7 beta
Copyright (c) 1998-2005 gputils project
Listing File Generated: 12-15-2012  23:24:12
 
 
Address  Value    Disassembly              Source
-------  -----    -----------              ------
                                           ;--------------------------------------------------------
                                           ; File Created by SDCC : free open source ANSI-C Compiler
                                           ; Version 3.0.0 #6037 (Jul 16 2012) (Mac OS X x86_64)
                                           ; This file was generated Sat Dec 15 23:24:12 2012
                                           ;--------------------------------------------------------
                                           ; PIC16 port for the Microchip 16-bit core micros
                                           ;--------------------------------------------------------
                                           	list	p=18f4620
                                           	__config 0x300001, 0x01
                                           	__config 0x300002, 0x1e
                                           	__config 0x300003, 0x00
                                           	__config 0x300005, 0x01
                                           	__config 0x300006, 0x81
                                           	__config 0x300008, 0x0f
                                           	__config 0x300009, 0xc0
                                           	__config 0x30000a, 0x0f
                                           	__config 0x30000b, 0xe0
                                           	__config 0x30000c, 0x0f
                                           	__config 0x30000d, 0x40
                                           
                                           	radix dec
                                           
                                           ;--------------------------------------------------------
                                           ; public variables in this module
                                           ;--------------------------------------------------------
                                           	global _i
                                           	global _sleep_ms
                                           	global _my_usart_open
                                           	global _read_EEPROM
                                           	global _write_EEPROM
                                           	global _timer_2
                                           	global _boiler_temp
                                           	global _smoke_temp
                                           	global _chimney_temp
                                           	global _lcd_buf
                                           	global _main
                                           
                                           ;--------------------------------------------------------
                                           ; extern variables in this module
                                           ;--------------------------------------------------------
                                           	extern _PORTAbits
                                           	extern _PORTBbits
                                           	extern _PORTCbits
                                           	extern _PORTDbits
                                           	extern _PORTEbits
                                           	extern _LATAbits
                                           	extern _LATBbits
                                           	extern _LATCbits
                                           	extern _LATDbits
                                           	extern _LATEbits
                                           	extern _TRISAbits
                                           	extern _TRISBbits
                                           	extern _TRISCbits
                                           	extern _TRISDbits
                                           	extern _TRISEbits
                                           	extern _OSCTUNEbits
                                           	extern _PIE1bits
                                           	extern _PIR1bits
                                           	extern _IPR1bits
                                           	extern _PIE2bits
                                           	extern _PIR2bits
                                           	extern _IPR2bits
                                           	extern _EECON1bits
                                           	extern _RCSTAbits
                                           	extern _TXSTAbits
                                           	extern _T3CONbits
                                           	extern _CMCONbits
                                           	extern _CVRCONbits
                                           	extern _ECCP1ASbits
                                           	extern _PWM1CONbits
                                           	extern _BAUDCONbits
                                           	extern _CCP2CONbits
                                           	extern _CCP1CONbits
                                           	extern _ADCON2bits
                                           	extern _ADCON1bits
                                           	extern _ADCON0bits
                                           	extern _SSPCON2bits
                                           	extern _SSPCON1bits
                                           	extern _SSPSTATbits
                                           	extern _T2CONbits
                                           	extern _T1CONbits
                                           	extern _RCONbits
                                           	extern _WDTCONbits
                                           	extern _HLVDCONbits
                                           	extern _OSCCONbits
                                           	extern _T0CONbits
                                           	extern _STATUSbits
                                           	extern _FSR2Hbits
                                           	extern _BSRbits
                                           	extern _FSR1Hbits
                                           	extern _FSR0Hbits
                                           	extern _INTCON3bits
                                           	extern _INTCON2bits
                                           	extern _INTCONbits
                                           	extern _TBLPTRUbits
                                           	extern _PCLATHbits
                                           	extern _PCLATUbits
                                           	extern _STKPTRbits
                                           	extern _TOSUbits
                                           	extern _stdin
                                           	extern _stdout
                                           	extern _PORTA
                                           	extern _PORTB
                                           	extern _PORTC
                                           	extern _PORTD
                                           	extern _PORTE
                                           	extern _LATA
                                           	extern _LATB
                                           	extern _LATC
                                           	extern _LATD
                                           	extern _LATE
                                           	extern _TRISA
                                           	extern _TRISB
                                           	extern _TRISC
                                           	extern _TRISD
                                           	extern _TRISE
                                           	extern _OSCTUNE
                                           	extern _PIE1
                                           	extern _PIR1
                                           	extern _IPR1
                                           	extern _PIE2
                                           	extern _PIR2
                                           	extern _IPR2
                                           	extern _EECON1
                                           	extern _EECON2
                                           	extern _EEDATA
                                           	extern _EEADR
                                           	extern _EEADRH
                                           	extern _RCSTA
                                           	extern _TXSTA
                                           	extern _TXREG
                                           	extern _RCREG
                                           	extern _SPBRG
                                           	extern _SPBRGH
                                           	extern _T3CON
                                           	extern _TMR3L
                                           	extern _TMR3H
                                           	extern _CMCON
                                           	extern _CVRCON
                                           	extern _ECCP1AS
                                           	extern _PWM1CON
                                           	extern _BAUDCON
                                           	extern _CCP2CON
                                           	extern _CCPR2L
                                           	extern _CCPR2H
                                           	extern _CCP1CON
                                           	extern _CCPR1L
                                           	extern _CCPR1H
                                           	extern _ADCON2
                                           	extern _ADCON1
                                           	extern _ADCON0
                                           	extern _ADRESL
                                           	extern _ADRESH
                                           	extern _SSPCON2
                                           	extern _SSPCON1
                                           	extern _SSPSTAT
                                           	extern _SSPADD
                                           	extern _SSPBUF
                                           	extern _T2CON
                                           	extern _PR2
                                           	extern _TMR2
                                           	extern _T1CON
                                           	extern _TMR1L
                                           	extern _TMR1H
                                           	extern _RCON
                                           	extern _WDTCON
                                           	extern _HLVDCON
                                           	extern _OSCCON
                                           	extern _T0CON
                                           	extern _TMR0L
                                           	extern _TMR0H
                                           	extern _STATUS
                                           	extern _FSR2L
                                           	extern _FSR2H
                                           	extern _PLUSW2
                                           	extern _PREINC2
                                           	extern _POSTDEC2
                                           	extern _POSTINC2
                                           	extern _INDF2
                                           	extern _BSR
                                           	extern _FSR1L
                                           	extern _FSR1H
                                           	extern _PLUSW1
                                           	extern _PREINC1
                                           	extern _POSTDEC1
                                           	extern _POSTINC1
                                           	extern _INDF1
                                           	extern _WREG
                                           	extern _FSR0L
                                           	extern _FSR0H
                                           	extern _PLUSW0
                                           	extern _PREINC0
                                           	extern _POSTDEC0
                                           	extern _POSTINC0
                                           	extern _INDF0
                                           	extern _INTCON3
                                           	extern _INTCON2
                                           	extern _INTCON
                                           	extern _PRODL
                                           	extern _PRODH
                                           	extern _TABLAT
                                           	extern _TBLPTRL
                                           	extern _TBLPTRH
                                           	extern _TBLPTRU
                                           	extern _PCL
                                           	extern _PCLATH
                                           	extern _PCLATU
                                           	extern _STKPTR
                                           	extern _TOSL
                                           	extern _TOSH
                                           	extern _TOSU
                                           	extern _sprintf
                                           	extern _adc_open
                                           	extern _adc_conv
                                           	extern _adc_busy
                                           	extern _adc_read
                                           	extern _adc_setchannel
                                           	extern _usart_open
                                           	extern _usart_drdy
                                           	extern _usart_getc
                                           	extern _usart_putc
                                           	extern _lcd_init
                                           	extern _lcd_cls
                                           	extern _lcd_debug
                                           	extern __mullong
                                           ;--------------------------------------------------------
                                           ;	Equates to used internal registers
                                           ;--------------------------------------------------------
                                           STATUS	equ	0xfd8
                                           PCLATH	equ	0xffa
                                           PCLATU	equ	0xffb
                                           WREG	equ	0xfe8
                                           BSR	equ	0xfe0
                                           FSR0L	equ	0xfe9
                                           FSR0H	equ	0xfea
                                           FSR1L	equ	0xfe1
                                           FSR2L	equ	0xfd9
                                           POSTDEC1	equ	0xfe5
                                           PREINC1	equ	0xfe4
                                           PLUSW2	equ	0xfdb
                                           PRODL	equ	0xff3
                                           PRODH	equ	0xff4
                                           
                                           
                                           ; Internal registers
                                           .registers	udata_ovr	0x0000
                                           r0x00	res	1
                                           r0x01	res	1
                                           r0x02	res	1
                                           r0x03	res	1
                                           r0x04	res	1
                                           r0x05	res	1
                                           r0x06	res	1
                                           r0x07	res	1
                                           r0x08	res	1
                                           r0x09	res	1
                                           r0x0a	res	1
                                           r0x0b	res	1
                                           r0x0c	res	1
                                           r0x0d	res	1
                                           r0x0e	res	1
                                           r0x0f	res	1
                                           
                                           udata_pillefyrsstyring_0	udata
                                           _i	res	2
                                           
                                           udata_pillefyrsstyring_1	udata
                                           _timer_2	res	4
                                           
                                           udata_pillefyrsstyring_2	udata
                                           _boiler_temp	res	2
                                           
                                           udata_pillefyrsstyring_3	udata
                                           _smoke_temp	res	2
                                           
                                           udata_pillefyrsstyring_4	udata
                                           _chimney_temp	res	2
                                           
                                           udata_pillefyrsstyring_5	udata
                                           _lcd_buf	res	22
                                           
                                           ;--------------------------------------------------------
                                           ; interrupt vector 
                                           ;--------------------------------------------------------
                                           
                                           ;--------------------------------------------------------
                                           ; global & static initialisations
                                           ;--------------------------------------------------------
                                           ; ; Starting pCode block for absolute section
                                           ; ;-----------------------------------------
                                           S_pillefyrsstyring_ivec_0x1_timer_control	code	0X000008
                                           ivec_0x1_timer_control:
000008   ef3a     goto	0x1a74              	GOTO	_timer_control
00000a   f00d
                                           
                                           ; I code from now on!
                                           ; ; Starting pCode block
                                           S_pillefyrsstyring__main	code
                                           _main:
                                           ;	.line	22; pillefyrsstyring.c	OSCCONbits.SCS = 0x10;
001224   50d3     movf	0xd3, 0, 0          	MOVF	_OSCCONbits, W
001226   0bfc     andlw	0xfc               	ANDLW	0xfc
001228   6ed3     movwf	0xd3, 0            	MOVWF	_OSCCONbits
                                           ;	.line	23; pillefyrsstyring.c	OSCCONbits.IRCF = 0x6;	// 4 MHz
00122a   50d3     movf	0xd3, 0, 0          	MOVF	_OSCCONbits, W
00122c   0b8f     andlw	0x8f               	ANDLW	0x8f
00122e   0960     iorlw	0x60               	IORLW	0x60
001230   6ed3     movwf	0xd3, 0            	MOVWF	_OSCCONbits
001232   0100     movlb	0                  	BANKSEL	_timer_2
                                           ;	.line	25; pillefyrsstyring.c	timer_2 = 0;
001234   6bc3     clrf	0xc3, 0x1           	CLRF	_timer_2, B
001236   0100     movlb	0                  	BANKSEL	(_timer_2 + 1)
001238   6bc4     clrf	0xc4, 0x1           	CLRF	(_timer_2 + 1), B
00123a   0100     movlb	0                  	BANKSEL	(_timer_2 + 2)
00123c   6bc5     clrf	0xc5, 0x1           	CLRF	(_timer_2 + 2), B
00123e   0100     movlb	0                  	BANKSEL	(_timer_2 + 3)
001240   6bc6     clrf	0xc6, 0x1           	CLRF	(_timer_2 + 3), B
001242   0100     movlb	0                  	BANKSEL	_boiler_temp
                                           ;	.line	26; pillefyrsstyring.c	boiler_temp = 0;
001244   6be0     clrf	0xe0, 0x1           	CLRF	_boiler_temp, B
001246   0100     movlb	0                  	BANKSEL	(_boiler_temp + 1)
001248   6be1     clrf	0xe1, 0x1           	CLRF	(_boiler_temp + 1), B
00124a   0100     movlb	0                  	BANKSEL	_smoke_temp
                                           ;	.line	27; pillefyrsstyring.c	smoke_temp = 0;
00124c   6be2     clrf	0xe2, 0x1           	CLRF	_smoke_temp, B
00124e   0100     movlb	0                  	BANKSEL	(_smoke_temp + 1)
001250   6be3     clrf	0xe3, 0x1           	CLRF	(_smoke_temp + 1), B
001252   0100     movlb	0                  	BANKSEL	_chimney_temp
                                           ;	.line	28; pillefyrsstyring.c	chimney_temp = 0;
001254   6be4     clrf	0xe4, 0x1           	CLRF	_chimney_temp, B
001256   0100     movlb	0                  	BANKSEL	(_chimney_temp + 1)
001258   6be5     clrf	0xe5, 0x1           	CLRF	(_chimney_temp + 1), B
                                           ;	.line	31; pillefyrsstyring.c	MOTOR_TRIS = 0;		// output
00125a   9093     bcf	0x93, 0, 0           	BCF	_TRISBbits, 0
                                           ;	.line	32; pillefyrsstyring.c	MOTOR = 0;			// off
00125c   9081     bcf	0x81, 0, 0           	BCF	_PORTBbits, 0
                                           ;	.line	34; pillefyrsstyring.c	FAN_TRIS = 0;		// output
00125e   9293     bcf	0x93, 0x1, 0         	BCF	_TRISBbits, 1
                                           ;	.line	35; pillefyrsstyring.c	FAN = 0;			// off
001260   9281     bcf	0x81, 0x1, 0         	BCF	_PORTBbits, 1
                                           ;	.line	37; pillefyrsstyring.c	HEATER_TRIS = 0;	// output
001262   9693     bcf	0x93, 0x3, 0         	BCF	_TRISBbits, 3
                                           ;	.line	38; pillefyrsstyring.c	HEATER = 0;			// off
001264   9681     bcf	0x81, 0x3, 0         	BCF	_PORTBbits, 3
                                           ;	.line	40; pillefyrsstyring.c	B_UP_TRIS = 1;		// input
001266   8a93     bsf	0x93, 0x5, 0         	BSF	_TRISBbits, 5
                                           ;	.line	41; pillefyrsstyring.c	B_DOWN_TRIS = 1;	// input
001268   8e93     bsf	0x93, 0x7, 0         	BSF	_TRISBbits, 7
                                           ;	.line	42; pillefyrsstyring.c	B_MENU_TRIS = 1;	// input
00126a   8c93     bsf	0x93, 0x6, 0         	BSF	_TRISBbits, 6
                                           ;	.line	44; pillefyrsstyring.c	BOILER_TEMP_TRIS = 1;	// input
00126c   8680     bsf	0x80, 0x3, 0         	BSF	_PORTAbits, 3
                                           ;	.line	45; pillefyrsstyring.c	SMOKE_TEMP_TRIS	= 1;	// input
00126e   8880     bsf	0x80, 0x4, 0         	BSF	_PORTAbits, 4
                                           ;	.line	46; pillefyrsstyring.c	CHIMNEY_TEMP_TRIS = 1; 	// input
001270   8280     bsf	0x80, 0x1, 0         	BSF	_PORTAbits, 1
                                           ;	.line	49; pillefyrsstyring.c	adc_open(4, ADC_FOSC_64, ADC_CFG_5A, ADC_FRM_RJUST | ADC_INT_OFF);
001272   0e80     movlw	0x80               	MOVLW	0x80
001274   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
001276   0e0a     movlw	0xa                	MOVLW	0x0a
001278   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
00127a   0e06     movlw	0x6                	MOVLW	0x06
00127c   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
00127e   0e04     movlw	0x4                	MOVLW	0x04
001280   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
001282   ec00     call	0x2400, 0           	CALL	_adc_open
001284   f012
001286   0e04     movlw	0x4                	MOVLW	0x04
001288   26e1     addwf	0xe1, 0x1, 0       	ADDWF	FSR1L, F
                                           ;	.line	52; pillefyrsstyring.c	T2CONbits.T2CKPS0 = 1;
00128a   80ca     bsf	0xca, 0, 0           	BSF	_T2CONbits, 0
                                           ;	.line	53; pillefyrsstyring.c	T2CONbits.T2CKPS1 = 0;
00128c   92ca     bcf	0xca, 0x1, 0         	BCF	_T2CONbits, 1
                                           ;	.line	54; pillefyrsstyring.c	T2CONbits.TOUTPS0 = 1;
00128e   86ca     bsf	0xca, 0x3, 0         	BSF	_T2CONbits, 3
                                           ;	.line	55; pillefyrsstyring.c	T2CONbits.TOUTPS1 = 0;
001290   98ca     bcf	0xca, 0x4, 0         	BCF	_T2CONbits, 4
                                           ;	.line	56; pillefyrsstyring.c	T2CONbits.TOUTPS2 = 0;
001292   9aca     bcf	0xca, 0x5, 0         	BCF	_T2CONbits, 5
                                           ;	.line	57; pillefyrsstyring.c	T2CONbits.TOUTPS3 = 1;
001294   8cca     bsf	0xca, 0x6, 0         	BSF	_T2CONbits, 6
                                           ;	.line	58; pillefyrsstyring.c	IPR1bits.TMR2IP = 1;		// high priority
001296   829f     bsf	0x9f, 0x1, 0         	BSF	_IPR1bits, 1
                                           ;	.line	59; pillefyrsstyring.c	PIR1bits.TMR2IF = 1;
001298   829e     bsf	0x9e, 0x1, 0         	BSF	_PIR1bits, 1
                                           ;	.line	60; pillefyrsstyring.c	T2CONbits.TMR2ON = 1;
00129a   84ca     bsf	0xca, 0x2, 0         	BSF	_T2CONbits, 2
                                           ;	.line	61; pillefyrsstyring.c	PIE1bits.TMR2IE = 1;
00129c   829d     bsf	0x9d, 0x1, 0         	BSF	_PIE1bits, 1
                                           ;	.line	64; pillefyrsstyring.c	T3CONbits.RD16 = 1;
00129e   8eb1     bsf	0xb1, 0x7, 0         	BSF	_T3CONbits, 7
                                           ;	.line	65; pillefyrsstyring.c	T3CONbits.TMR3CS = 0;	// internal clock source
0012a0   92b1     bcf	0xb1, 0x1, 0         	BCF	_T3CONbits, 1
                                           ;	.line	66; pillefyrsstyring.c	T3CONbits.T3CKPS0 = 1;
0012a2   88b1     bsf	0xb1, 0x4, 0         	BSF	_T3CONbits, 4
                                           ;	.line	67; pillefyrsstyring.c	T3CONbits.T3CKPS0 = 1;
0012a4   88b1     bsf	0xb1, 0x4, 0         	BSF	_T3CONbits, 4
                                           ;	.line	68; pillefyrsstyring.c	IPR2bits.TMR3IP = 0;		// low priority
0012a6   92a2     bcf	0xa2, 0x1, 0         	BCF	_IPR2bits, 1
                                           ;	.line	69; pillefyrsstyring.c	T3CONbits.TMR3ON = 1;
0012a8   80b1     bsf	0xb1, 0, 0           	BSF	_T3CONbits, 0
                                           ;	.line	70; pillefyrsstyring.c	PIE2bits.TMR3IE = 1;
0012aa   82a0     bsf	0xa0, 0x1, 0         	BSF	_PIE2bits, 1
                                           ;	.line	71; pillefyrsstyring.c	PIR2bits.TMR3IF = 1;
0012ac   82a1     bsf	0xa1, 0x1, 0         	BSF	_PIR2bits, 1
                                           ;	.line	73; pillefyrsstyring.c	INTCONbits.PEIE = 1;
0012ae   8cf2     bsf	0xf2, 0x6, 0         	BSF	_INTCONbits, 6
                                           ;	.line	74; pillefyrsstyring.c	INTCONbits.GIE = 1;	/* Enable Global interrupts   */	
0012b0   8ef2     bsf	0xf2, 0x7, 0         	BSF	_INTCONbits, 7
                                           ;	.line	82; pillefyrsstyring.c	12     // 19200 kbps @ 4 MHz
0012b2   0e00     movlw	0                  	MOVLW	0x00
0012b4   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
0012b6   0e0c     movlw	0xc                	MOVLW	0x0c
0012b8   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
0012ba   0e7c     movlw	0x7c               	MOVLW	0x7c
0012bc   ecbd     call	0x237a, 0           	CALL	_usart_open
0012be   f011
0012c0   0e02     movlw	0x2                	MOVLW	0x02
0012c2   26e1     addwf	0xe1, 0x1, 0       	ADDWF	FSR1L, F
                                           ;	.line	95; pillefyrsstyring.c	lcd_init();
0012c4   ec6d     call	0x26da, 0           	CALL	_lcd_init
0012c6   f013
                                           ;	.line	96; pillefyrsstyring.c	lcd_debug("OpenStoker starting...", 0); // starting...");
0012c8   0e00     movlw	0                  	MOVLW	0x00
0012ca   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
0012cc   0e00     movlw	0                  	MOVLW	UPPER(__str_0)
0012ce   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
0012d0   0e1b     movlw	0x1b               	MOVLW	HIGH(__str_0)
0012d2   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
0012d4   0e80     movlw	0x80               	MOVLW	LOW(__str_0)
0012d6   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
0012d8   ec7b     call	0x16f6, 0           	CALL	_lcd_debug
0012da   f00b
0012dc   0e04     movlw	0x4                	MOVLW	0x04
0012de   26e1     addwf	0xe1, 0x1, 0       	ADDWF	FSR1L, F
                                           ;	.line	97; pillefyrsstyring.c	sleep_ms(3000);
0012e0   0e00     movlw	0                  	MOVLW	0x00
0012e2   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
0012e4   0e00     movlw	0                  	MOVLW	0x00
0012e6   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
0012e8   0e0b     movlw	0xb                	MOVLW	0x0b
0012ea   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
0012ec   0eb8     movlw	0xb8               	MOVLW	0xb8
0012ee   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
0012f0   ecf7     call	0x1bee, 0           	CALL	_sleep_ms
0012f2   f00d
0012f4   0e04     movlw	0x4                	MOVLW	0x04
0012f6   26e1     addwf	0xe1, 0x1, 0       	ADDWF	FSR1L, F
                                           _00113_DS_:
                                           ;	.line	114; pillefyrsstyring.c	if (!B_UP) {
0012f8   ba81     btfsc	0x81, 0x5, 0       	BTFSC	_PORTBbits, 5
0012fa   d01b     bra	0x1332               	BRA	_00106_DS_
                                           ;	.line	115; pillefyrsstyring.c	lcd_cls();
0012fc   ec16     call	0x222c, 0           	CALL	_lcd_cls
0012fe   f011
                                           ;	.line	116; pillefyrsstyring.c	lcd_debug("Up (motor)", 0);
001300   0e00     movlw	0                  	MOVLW	0x00
001302   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
001304   0e00     movlw	0                  	MOVLW	UPPER(__str_1)
001306   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
001308   0e1b     movlw	0x1b               	MOVLW	HIGH(__str_1)
00130a   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
00130c   0e98     movlw	0x98               	MOVLW	LOW(__str_1)
00130e   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
001310   ec7b     call	0x16f6, 0           	CALL	_lcd_debug
001312   f00b
001314   0e04     movlw	0x4                	MOVLW	0x04
001316   26e1     addwf	0xe1, 0x1, 0       	ADDWF	FSR1L, F
                                           ;	.line	117; pillefyrsstyring.c	MOTOR = 1;
001318   8081     bsf	0x81, 0, 0           	BSF	_PORTBbits, 0
                                           ;	.line	118; pillefyrsstyring.c	sleep_ms(1000);
00131a   0e00     movlw	0                  	MOVLW	0x00
00131c   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
00131e   0e00     movlw	0                  	MOVLW	0x00
001320   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
001322   0e03     movlw	0x3                	MOVLW	0x03
001324   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
001326   0ee8     movlw	0xe8               	MOVLW	0xe8
001328   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
00132a   ecf7     call	0x1bee, 0           	CALL	_sleep_ms
00132c   f00d
00132e   0e04     movlw	0x4                	MOVLW	0x04
001330   26e1     addwf	0xe1, 0x1, 0       	ADDWF	FSR1L, F
                                           _00106_DS_:
                                           ;	.line	120; pillefyrsstyring.c	if (!B_MENU) {
001332   bc81     btfsc	0x81, 0x6, 0       	BTFSC	_PORTBbits, 6
001334   d01b     bra	0x136c               	BRA	_00108_DS_
                                           ;	.line	121; pillefyrsstyring.c	lcd_cls();
001336   ec16     call	0x222c, 0           	CALL	_lcd_cls
001338   f011
                                           ;	.line	122; pillefyrsstyring.c	lcd_debug("Menu (fan)", 0);
00133a   0e00     movlw	0                  	MOVLW	0x00
00133c   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
00133e   0e00     movlw	0                  	MOVLW	UPPER(__str_2)
001340   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
001342   0e1b     movlw	0x1b               	MOVLW	HIGH(__str_2)
001344   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
001346   0ea4     movlw	0xa4               	MOVLW	LOW(__str_2)
001348   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
00134a   ec7b     call	0x16f6, 0           	CALL	_lcd_debug
00134c   f00b
00134e   0e04     movlw	0x4                	MOVLW	0x04
001350   26e1     addwf	0xe1, 0x1, 0       	ADDWF	FSR1L, F
                                           ;	.line	123; pillefyrsstyring.c	FAN = 1;
001352   8281     bsf	0x81, 0x1, 0         	BSF	_PORTBbits, 1
                                           ;	.line	124; pillefyrsstyring.c	sleep_ms(1000);
001354   0e00     movlw	0                  	MOVLW	0x00
001356   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
001358   0e00     movlw	0                  	MOVLW	0x00
00135a   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
00135c   0e03     movlw	0x3                	MOVLW	0x03
00135e   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
001360   0ee8     movlw	0xe8               	MOVLW	0xe8
001362   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
001364   ecf7     call	0x1bee, 0           	CALL	_sleep_ms
001366   f00d
001368   0e04     movlw	0x4                	MOVLW	0x04
00136a   26e1     addwf	0xe1, 0x1, 0       	ADDWF	FSR1L, F
                                           _00108_DS_:
                                           ;	.line	126; pillefyrsstyring.c	if (!B_DOWN) {
00136c   be81     btfsc	0x81, 0x7, 0       	BTFSC	_PORTBbits, 7
00136e   d01c     bra	0x13a8               	BRA	_00110_DS_
                                           ;	.line	127; pillefyrsstyring.c	lcd_cls();
001370   ec16     call	0x222c, 0           	CALL	_lcd_cls
001372   f011
                                           ;	.line	128; pillefyrsstyring.c	lcd_debug("Down (el-start)", 0);
001374   0e00     movlw	0                  	MOVLW	0x00
001376   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
001378   0e00     movlw	0                  	MOVLW	UPPER(__str_3)
00137a   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
00137c   0e1b     movlw	0x1b               	MOVLW	HIGH(__str_3)
00137e   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
001380   0eb0     movlw	0xb0               	MOVLW	LOW(__str_3)
001382   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
001384   ec7b     call	0x16f6, 0           	CALL	_lcd_debug
001386   f00b
001388   0e04     movlw	0x4                	MOVLW	0x04
00138a   26e1     addwf	0xe1, 0x1, 0       	ADDWF	FSR1L, F
                                           ;	.line	129; pillefyrsstyring.c	HEATER = 1;
00138c   8681     bsf	0x81, 0x3, 0         	BSF	_PORTBbits, 3
                                           ;	.line	130; pillefyrsstyring.c	sleep_ms(1000);
00138e   0e00     movlw	0                  	MOVLW	0x00
001390   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
001392   0e00     movlw	0                  	MOVLW	0x00
001394   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
001396   0e03     movlw	0x3                	MOVLW	0x03
001398   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
00139a   0ee8     movlw	0xe8               	MOVLW	0xe8
00139c   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
00139e   ecf7     call	0x1bee, 0           	CALL	_sleep_ms
0013a0   f00d
0013a2   0e04     movlw	0x4                	MOVLW	0x04
0013a4   26e1     addwf	0xe1, 0x1, 0       	ADDWF	FSR1L, F
0013a6   d7a8     bra	0x12f8               	BRA	_00113_DS_
                                           _00110_DS_:
                                           ;	.line	133; pillefyrsstyring.c	lcd_cls();
0013a8   ec16     call	0x222c, 0           	CALL	_lcd_cls
0013aa   f011
                                           ;	.line	134; pillefyrsstyring.c	sprintf(lcd_buf, "boiler temp %i", boiler_temp);
0013ac   0e00     movlw	0                  	MOVLW	HIGH(_lcd_buf)
0013ae   6e01     movwf	0x1, 0             	MOVWF	r0x01
0013b0   0ea0     movlw	0xa0               	MOVLW	LOW(_lcd_buf)
0013b2   6e00     movwf	0, 0               	MOVWF	r0x00
0013b4   0e80     movlw	0x80               	MOVLW	0x80
0013b6   6e02     movwf	0x2, 0             	MOVWF	r0x02
0013b8   0100     movlb	0                  	BANKSEL	(_boiler_temp + 1)
0013ba   51e1     movf	0xe1, 0, 0x1        	MOVF	(_boiler_temp + 1), W, B
0013bc   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
0013be   0100     movlb	0                  	BANKSEL	_boiler_temp
0013c0   51e0     movf	0xe0, 0, 0x1        	MOVF	_boiler_temp, W, B
0013c2   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
0013c4   0e00     movlw	0                  	MOVLW	UPPER(__str_4)
0013c6   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
0013c8   0e1b     movlw	0x1b               	MOVLW	HIGH(__str_4)
0013ca   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
0013cc   0ec0     movlw	0xc0               	MOVLW	LOW(__str_4)
0013ce   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
0013d0   5002     movf	0x2, 0, 0           	MOVF	r0x02, W
0013d2   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
0013d4   5001     movf	0x1, 0, 0           	MOVF	r0x01, W
0013d6   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
0013d8   5000     movf	0, 0, 0             	MOVF	r0x00, W
0013da   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
0013dc   ec3d     call	0x207a, 0           	CALL	_sprintf
0013de   f010
0013e0   0e08     movlw	0x8                	MOVLW	0x08
0013e2   26e1     addwf	0xe1, 0x1, 0       	ADDWF	FSR1L, F
                                           ;	.line	135; pillefyrsstyring.c	lcd_debug(lcd_buf, 0);			
0013e4   0e00     movlw	0                  	MOVLW	HIGH(_lcd_buf)
0013e6   6e01     movwf	0x1, 0             	MOVWF	r0x01
0013e8   0ea0     movlw	0xa0               	MOVLW	LOW(_lcd_buf)
0013ea   6e00     movwf	0, 0               	MOVWF	r0x00
0013ec   0e80     movlw	0x80               	MOVLW	0x80
0013ee   6e02     movwf	0x2, 0             	MOVWF	r0x02
0013f0   0e00     movlw	0                  	MOVLW	0x00
0013f2   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
0013f4   5002     movf	0x2, 0, 0           	MOVF	r0x02, W
0013f6   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
0013f8   5001     movf	0x1, 0, 0           	MOVF	r0x01, W
0013fa   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
0013fc   5000     movf	0, 0, 0             	MOVF	r0x00, W
0013fe   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
001400   ec7b     call	0x16f6, 0           	CALL	_lcd_debug
001402   f00b
001404   0e04     movlw	0x4                	MOVLW	0x04
001406   26e1     addwf	0xe1, 0x1, 0       	ADDWF	FSR1L, F
                                           ;	.line	136; pillefyrsstyring.c	sprintf(lcd_buf, "smoke temp %i", smoke_temp);
001408   0e00     movlw	0                  	MOVLW	HIGH(_lcd_buf)
00140a   6e01     movwf	0x1, 0             	MOVWF	r0x01
00140c   0ea0     movlw	0xa0               	MOVLW	LOW(_lcd_buf)
00140e   6e00     movwf	0, 0               	MOVWF	r0x00
001410   0e80     movlw	0x80               	MOVLW	0x80
001412   6e02     movwf	0x2, 0             	MOVWF	r0x02
001414   0100     movlb	0                  	BANKSEL	(_smoke_temp + 1)
001416   51e3     movf	0xe3, 0, 0x1        	MOVF	(_smoke_temp + 1), W, B
001418   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
00141a   0100     movlb	0                  	BANKSEL	_smoke_temp
00141c   51e2     movf	0xe2, 0, 0x1        	MOVF	_smoke_temp, W, B
00141e   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
001420   0e00     movlw	0                  	MOVLW	UPPER(__str_5)
001422   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
001424   0e1b     movlw	0x1b               	MOVLW	HIGH(__str_5)
001426   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
001428   0ed0     movlw	0xd0               	MOVLW	LOW(__str_5)
00142a   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
00142c   5002     movf	0x2, 0, 0           	MOVF	r0x02, W
00142e   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
001430   5001     movf	0x1, 0, 0           	MOVF	r0x01, W
001432   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
001434   5000     movf	0, 0, 0             	MOVF	r0x00, W
001436   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
001438   ec3d     call	0x207a, 0           	CALL	_sprintf
00143a   f010
00143c   0e08     movlw	0x8                	MOVLW	0x08
00143e   26e1     addwf	0xe1, 0x1, 0       	ADDWF	FSR1L, F
                                           ;	.line	137; pillefyrsstyring.c	lcd_debug(lcd_buf, 1);			
001440   0e00     movlw	0                  	MOVLW	HIGH(_lcd_buf)
001442   6e01     movwf	0x1, 0             	MOVWF	r0x01
001444   0ea0     movlw	0xa0               	MOVLW	LOW(_lcd_buf)
001446   6e00     movwf	0, 0               	MOVWF	r0x00
001448   0e80     movlw	0x80               	MOVLW	0x80
00144a   6e02     movwf	0x2, 0             	MOVWF	r0x02
00144c   0e01     movlw	0x1                	MOVLW	0x01
00144e   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
001450   5002     movf	0x2, 0, 0           	MOVF	r0x02, W
001452   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
001454   5001     movf	0x1, 0, 0           	MOVF	r0x01, W
001456   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
001458   5000     movf	0, 0, 0             	MOVF	r0x00, W
00145a   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
00145c   ec7b     call	0x16f6, 0           	CALL	_lcd_debug
00145e   f00b
001460   0e04     movlw	0x4                	MOVLW	0x04
001462   26e1     addwf	0xe1, 0x1, 0       	ADDWF	FSR1L, F
                                           ;	.line	138; pillefyrsstyring.c	sprintf(lcd_buf, "chimney temp %i", chimney_temp);
001464   0e00     movlw	0                  	MOVLW	HIGH(_lcd_buf)
001466   6e01     movwf	0x1, 0             	MOVWF	r0x01
001468   0ea0     movlw	0xa0               	MOVLW	LOW(_lcd_buf)
00146a   6e00     movwf	0, 0               	MOVWF	r0x00
00146c   0e80     movlw	0x80               	MOVLW	0x80
00146e   6e02     movwf	0x2, 0             	MOVWF	r0x02
001470   0100     movlb	0                  	BANKSEL	(_chimney_temp + 1)
001472   51e5     movf	0xe5, 0, 0x1        	MOVF	(_chimney_temp + 1), W, B
001474   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
001476   0100     movlb	0                  	BANKSEL	_chimney_temp
001478   51e4     movf	0xe4, 0, 0x1        	MOVF	_chimney_temp, W, B
00147a   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
00147c   0e00     movlw	0                  	MOVLW	UPPER(__str_6)
00147e   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
001480   0e1b     movlw	0x1b               	MOVLW	HIGH(__str_6)
001482   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
001484   0ede     movlw	0xde               	MOVLW	LOW(__str_6)
001486   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
001488   5002     movf	0x2, 0, 0           	MOVF	r0x02, W
00148a   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
00148c   5001     movf	0x1, 0, 0           	MOVF	r0x01, W
00148e   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
001490   5000     movf	0, 0, 0             	MOVF	r0x00, W
001492   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
001494   ec3d     call	0x207a, 0           	CALL	_sprintf
001496   f010
001498   0e08     movlw	0x8                	MOVLW	0x08
00149a   26e1     addwf	0xe1, 0x1, 0       	ADDWF	FSR1L, F
                                           ;	.line	139; pillefyrsstyring.c	lcd_debug(lcd_buf, 2);			
00149c   0e00     movlw	0                  	MOVLW	HIGH(_lcd_buf)
00149e   6e01     movwf	0x1, 0             	MOVWF	r0x01
0014a0   0ea0     movlw	0xa0               	MOVLW	LOW(_lcd_buf)
0014a2   6e00     movwf	0, 0               	MOVWF	r0x00
0014a4   0e80     movlw	0x80               	MOVLW	0x80
0014a6   6e02     movwf	0x2, 0             	MOVWF	r0x02
0014a8   0e02     movlw	0x2                	MOVLW	0x02
0014aa   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
0014ac   5002     movf	0x2, 0, 0           	MOVF	r0x02, W
0014ae   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
0014b0   5001     movf	0x1, 0, 0           	MOVF	r0x01, W
0014b2   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
0014b4   5000     movf	0, 0, 0             	MOVF	r0x00, W
0014b6   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
0014b8   ec7b     call	0x16f6, 0           	CALL	_lcd_debug
0014ba   f00b
0014bc   0e04     movlw	0x4                	MOVLW	0x04
0014be   26e1     addwf	0xe1, 0x1, 0       	ADDWF	FSR1L, F
                                           ;	.line	140; pillefyrsstyring.c	MOTOR = 0;
0014c0   9081     bcf	0x81, 0, 0           	BCF	_PORTBbits, 0
                                           ;	.line	141; pillefyrsstyring.c	FAN = 0;
0014c2   9281     bcf	0x81, 0x1, 0         	BCF	_PORTBbits, 1
                                           ;	.line	142; pillefyrsstyring.c	HEATER = 0;
0014c4   9681     bcf	0x81, 0x3, 0         	BCF	_PORTBbits, 3
                                           ;	.line	143; pillefyrsstyring.c	sleep_ms(1000);
0014c6   0e00     movlw	0                  	MOVLW	0x00
0014c8   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
0014ca   0e00     movlw	0                  	MOVLW	0x00
0014cc   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
0014ce   0e03     movlw	0x3                	MOVLW	0x03
0014d0   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
0014d2   0ee8     movlw	0xe8               	MOVLW	0xe8
0014d4   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
0014d6   ecf7     call	0x1bee, 0           	CALL	_sleep_ms
0014d8   f00d
0014da   0e04     movlw	0x4                	MOVLW	0x04
0014dc   26e1     addwf	0xe1, 0x1, 0       	ADDWF	FSR1L, F
0014de   d70c     bra	0x12f8               	BRA	_00113_DS_
0014e0   0012     return	0                 	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_pillefyrsstyring__write_EEPROM	code
                                           _write_EEPROM:
                                           ;	.line	235; pillefyrsstyring.c	void write_EEPROM(unsigned char address, unsigned char d) {
002502   cfd9     movff	0xfd9, 0xfe5       	MOVFF	FSR2L, POSTDEC1
002504   ffe5
002506   cfe1     movff	0xfe1, 0xfd9       	MOVFF	FSR1L, FSR2L
002508   ffd9
00250a   c000     movff	0, 0xfe5           	MOVFF	r0x00, POSTDEC1
00250c   ffe5
00250e   c001     movff	0x1, 0xfe5         	MOVFF	r0x01, POSTDEC1
002510   ffe5
002512   c002     movff	0x2, 0xfe5         	MOVFF	r0x02, POSTDEC1
002514   ffe5
002516   0e02     movlw	0x2                	MOVLW	0x02
002518   cfdb     movff	0xfdb, 0           	MOVFF	PLUSW2, r0x00
00251a   f000
00251c   0e03     movlw	0x3                	MOVLW	0x03
00251e   cfdb     movff	0xfdb, 0x1         	MOVFF	PLUSW2, r0x01
002520   f001
                                           ;	.line	237; pillefyrsstyring.c	save_int = INTCON;					//save interrupt status
002522   cff2     movff	0xff2, 0x2         	MOVFF	_INTCON, r0x02
002524   f002
                                           ;	.line	238; pillefyrsstyring.c	EECON1 = 0;									//ensure CFGS=0 and EEPGD=0
002526   6aa6     clrf	0xa6, 0             	CLRF	_EECON1
                                           ;	.line	239; pillefyrsstyring.c	EECON1bits.WREN = 1;				//enable write to EEPROM
002528   84a6     bsf	0xa6, 0x2, 0         	BSF	_EECON1bits, 2
                                           ;	.line	240; pillefyrsstyring.c	EEADR = address;						//setup Address
00252a   c000     movff	0, 0xfa9           	MOVFF	r0x00, _EEADR
00252c   ffa9
                                           ;	.line	241; pillefyrsstyring.c	EEDATA = d;									//and data
00252e   c001     movff	0x1, 0xfa8         	MOVFF	r0x01, _EEDATA
002530   ffa8
                                           ;	.line	242; pillefyrsstyring.c	INTCONbits.GIE=0;						//No interrupts
002532   9ef2     bcf	0xf2, 0x7, 0         	BCF	_INTCONbits, 7
                                           ;	.line	243; pillefyrsstyring.c	EECON2 = 0x55;							//required sequence #1
002534   0e55     movlw	0x55               	MOVLW	0x55
002536   6ea7     movwf	0xa7, 0            	MOVWF	_EECON2
                                           ;	.line	244; pillefyrsstyring.c	EECON2 = 0xaa;							//#2
002538   0eaa     movlw	0xaa               	MOVLW	0xaa
00253a   6ea7     movwf	0xa7, 0            	MOVWF	_EECON2
                                           ;	.line	245; pillefyrsstyring.c	EECON1bits.WR = 1;					//#3 = actual write
00253c   82a6     bsf	0xa6, 0x1, 0         	BSF	_EECON1bits, 1
                                           ;	.line	246; pillefyrsstyring.c	INTCON = save_int;					//restore interrupts
00253e   c002     movff	0x2, 0xff2         	MOVFF	r0x02, _INTCON
002540   fff2
                                           _00164_DS_:
                                           ;	.line	247; pillefyrsstyring.c	while(!PIR2bits.EEIF) {
002542   a8a1     btfss	0xa1, 0x4, 0       	BTFSS	_PIR2bits, 4
002544   d7fe     bra	0x2542               	BRA	_00164_DS_
                                           ;	.line	250; pillefyrsstyring.c	EECON1bits.WREN = 0;				//disable write to EEPROM
002546   94a6     bcf	0xa6, 0x2, 0         	BCF	_EECON1bits, 2
002548   cfe4     movff	0xfe4, 0x2         	MOVFF	PREINC1, r0x02
00254a   f002
00254c   cfe4     movff	0xfe4, 0x1         	MOVFF	PREINC1, r0x01
00254e   f001
002550   cfe4     movff	0xfe4, 0           	MOVFF	PREINC1, r0x00
002552   f000
002554   cfe4     movff	0xfe4, 0xfd9       	MOVFF	PREINC1, FSR2L
002556   ffd9
002558   0012     return	0                 	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_pillefyrsstyring__read_EEPROM	code
                                           _read_EEPROM:
                                           ;	.line	228; pillefyrsstyring.c	unsigned char read_EEPROM(unsigned char address) {
002844   cfd9     movff	0xfd9, 0xfe5       	MOVFF	FSR2L, POSTDEC1
002846   ffe5
002848   cfe1     movff	0xfe1, 0xfd9       	MOVFF	FSR1L, FSR2L
00284a   ffd9
00284c   c000     movff	0, 0xfe5           	MOVFF	r0x00, POSTDEC1
00284e   ffe5
002850   0e02     movlw	0x2                	MOVLW	0x02
002852   cfdb     movff	0xfdb, 0           	MOVFF	PLUSW2, r0x00
002854   f000
                                           ;	.line	229; pillefyrsstyring.c	EECON1 = 0;									//ensure CFGS = 0 and EEPGD = 0 
002856   6aa6     clrf	0xa6, 0             	CLRF	_EECON1
                                           ;	.line	230; pillefyrsstyring.c	EEADR = address;
002858   c000     movff	0, 0xfa9           	MOVFF	r0x00, _EEADR
00285a   ffa9
                                           ;	.line	231; pillefyrsstyring.c	EECON1bits.RD = 1;
00285c   80a6     bsf	0xa6, 0, 0           	BSF	_EECON1bits, 0
                                           ;	.line	232; pillefyrsstyring.c	return(EEDATA);
00285e   50a8     movf	0xa8, 0, 0          	MOVF	_EEDATA, W
002860   cfe4     movff	0xfe4, 0           	MOVFF	PREINC1, r0x00
002862   f000
002864   cfe4     movff	0xfe4, 0xfd9       	MOVFF	PREINC1, FSR2L
002866   ffd9
002868   0012     return	0                 	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_pillefyrsstyring__my_usart_open	code
                                           _my_usart_open:
                                           ;	.line	201; pillefyrsstyring.c	void my_usart_open() {
002890   cfd9     movff	0xfd9, 0xfe5       	MOVFF	FSR2L, POSTDEC1
002892   ffe5
002894   cfe1     movff	0xfe1, 0xfd9       	MOVFF	FSR1L, FSR2L
002896   ffd9
                                           ;	.line	202; pillefyrsstyring.c	SPBRG = 32; // 20MHz => 9600 baud (BRGH = 0)
002898   0e20     movlw	0x20               	MOVLW	0x20
00289a   6eaf     movwf	0xaf, 0            	MOVWF	_SPBRG
                                           ;	.line	203; pillefyrsstyring.c	TXSTAbits.BRGH = 0; // (0 = low speed)
00289c   94ac     bcf	0xac, 0x2, 0         	BCF	_TXSTAbits, 2
                                           ;	.line	204; pillefyrsstyring.c	TXSTAbits.SYNC = 0; // (0 = asynchronous)
00289e   98ac     bcf	0xac, 0x4, 0         	BCF	_TXSTAbits, 4
                                           ;	.line	207; pillefyrsstyring.c	RCSTAbits.SPEN = 1; // (1 = serial port enabled)
0028a0   8eab     bsf	0xab, 0x7, 0         	BSF	_RCSTAbits, 7
                                           ;	.line	210; pillefyrsstyring.c	PIE1bits.TXIE = 0; // (1 = enabled)
0028a2   989d     bcf	0x9d, 0x4, 0         	BCF	_PIE1bits, 4
                                           ;	.line	213; pillefyrsstyring.c	PIE1bits.RCIE = 1; // (1 = enabled)
0028a4   8a9d     bsf	0x9d, 0x5, 0         	BSF	_PIE1bits, 5
                                           ;	.line	216; pillefyrsstyring.c	TXSTAbits.TX9 = 0; // (0 = 8-bit transmit)
0028a6   9cac     bcf	0xac, 0x6, 0         	BCF	_TXSTAbits, 6
                                           ;	.line	219; pillefyrsstyring.c	RCSTAbits.RX9 = 0; // (0 = 8-bit reception)
0028a8   9cab     bcf	0xab, 0x6, 0         	BCF	_RCSTAbits, 6
                                           ;	.line	222; pillefyrsstyring.c	RCSTAbits.CREN = 1; // (1 = Enables receiver)
0028aa   88ab     bsf	0xab, 0x4, 0         	BSF	_RCSTAbits, 4
                                           ;	.line	225; pillefyrsstyring.c	TXSTAbits.TXEN = 1; // (1 = transmit enabled)
0028ac   8aac     bsf	0xac, 0x5, 0         	BSF	_TXSTAbits, 5
0028ae   cfe4     movff	0xfe4, 0xfd9       	MOVFF	PREINC1, FSR2L
0028b0   ffd9
0028b2   0012     return	0                 	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_pillefyrsstyring__sleep_ms	code
                                           _sleep_ms:
                                           ;	.line	191; pillefyrsstyring.c	void sleep_ms(unsigned long ms) {
001bee   cfd9     movff	0xfd9, 0xfe5       	MOVFF	FSR2L, POSTDEC1
001bf0   ffe5
001bf2   cfe1     movff	0xfe1, 0xfd9       	MOVFF	FSR1L, FSR2L
001bf4   ffd9
001bf6   c000     movff	0, 0xfe5           	MOVFF	r0x00, POSTDEC1
001bf8   ffe5
001bfa   c001     movff	0x1, 0xfe5         	MOVFF	r0x01, POSTDEC1
001bfc   ffe5
001bfe   c002     movff	0x2, 0xfe5         	MOVFF	r0x02, POSTDEC1
001c00   ffe5
001c02   c003     movff	0x3, 0xfe5         	MOVFF	r0x03, POSTDEC1
001c04   ffe5
001c06   c004     movff	0x4, 0xfe5         	MOVFF	r0x04, POSTDEC1
001c08   ffe5
001c0a   c005     movff	0x5, 0xfe5         	MOVFF	r0x05, POSTDEC1
001c0c   ffe5
001c0e   c006     movff	0x6, 0xfe5         	MOVFF	r0x06, POSTDEC1
001c10   ffe5
001c12   c007     movff	0x7, 0xfe5         	MOVFF	r0x07, POSTDEC1
001c14   ffe5
001c16   c008     movff	0x8, 0xfe5         	MOVFF	r0x08, POSTDEC1
001c18   ffe5
001c1a   c009     movff	0x9, 0xfe5         	MOVFF	r0x09, POSTDEC1
001c1c   ffe5
001c1e   c00a     movff	0xa, 0xfe5         	MOVFF	r0x0a, POSTDEC1
001c20   ffe5
001c22   c00b     movff	0xb, 0xfe5         	MOVFF	r0x0b, POSTDEC1
001c24   ffe5
001c26   c00c     movff	0xc, 0xfe5         	MOVFF	r0x0c, POSTDEC1
001c28   ffe5
001c2a   c00d     movff	0xd, 0xfe5         	MOVFF	r0x0d, POSTDEC1
001c2c   ffe5
001c2e   c00e     movff	0xe, 0xfe5         	MOVFF	r0x0e, POSTDEC1
001c30   ffe5
001c32   c00f     movff	0xf, 0xfe5         	MOVFF	r0x0f, POSTDEC1
001c34   ffe5
001c36   0e02     movlw	0x2                	MOVLW	0x02
001c38   cfdb     movff	0xfdb, 0           	MOVFF	PLUSW2, r0x00
001c3a   f000
001c3c   0e03     movlw	0x3                	MOVLW	0x03
001c3e   cfdb     movff	0xfdb, 0x1         	MOVFF	PLUSW2, r0x01
001c40   f001
001c42   0e04     movlw	0x4                	MOVLW	0x04
001c44   cfdb     movff	0xfdb, 0x2         	MOVFF	PLUSW2, r0x02
001c46   f002
001c48   0e05     movlw	0x5                	MOVLW	0x05
001c4a   cfdb     movff	0xfdb, 0x3         	MOVFF	PLUSW2, r0x03
001c4c   f003
                                           ;	.line	193; pillefyrsstyring.c	start_timer_2 = timer_2;	
001c4e   c0c3     movff	0xc3, 0x4          	MOVFF	_timer_2, r0x04
001c50   f004
001c52   c0c4     movff	0xc4, 0x5          	MOVFF	(_timer_2 + 1), r0x05
001c54   f005
001c56   c0c5     movff	0xc5, 0x6          	MOVFF	(_timer_2 + 2), r0x06
001c58   f006
001c5a   c0c6     movff	0xc6, 0x7          	MOVFF	(_timer_2 + 3), r0x07
001c5c   f007
                                           _00140_DS_:
                                           ;	.line	196; pillefyrsstyring.c	while ( (((signed long)(timer_2 - start_timer_2) < 0) ? (-1 * (timer_2 - start_timer_2)) : (timer_2 - start_timer_2)) < ms) {
001c5e   5004     movf	0x4, 0, 0           	MOVF	r0x04, W
001c60   0100     movlb	0                  	BANKSEL	_timer_2
001c62   5dc3     subwf	0xc3, 0, 0x1       	SUBWF	_timer_2, W, B
001c64   6e08     movwf	0x8, 0             	MOVWF	r0x08
001c66   5005     movf	0x5, 0, 0           	MOVF	r0x05, W
001c68   0100     movlb	0                  	BANKSEL	(_timer_2 + 1)
001c6a   59c4     subwfb	0xc4, 0, 0x1      	SUBWFB	(_timer_2 + 1), W, B
001c6c   6e09     movwf	0x9, 0             	MOVWF	r0x09
001c6e   5006     movf	0x6, 0, 0           	MOVF	r0x06, W
001c70   0100     movlb	0                  	BANKSEL	(_timer_2 + 2)
001c72   59c5     subwfb	0xc5, 0, 0x1      	SUBWFB	(_timer_2 + 2), W, B
001c74   6e0a     movwf	0xa, 0             	MOVWF	r0x0a
001c76   5007     movf	0x7, 0, 0           	MOVF	r0x07, W
001c78   0100     movlb	0                  	BANKSEL	(_timer_2 + 3)
001c7a   59c6     subwfb	0xc6, 0, 0x1      	SUBWFB	(_timer_2 + 3), W, B
001c7c   6e0b     movwf	0xb, 0             	MOVWF	r0x0b
001c7e   c008     movff	0x8, 0xc           	MOVFF	r0x08, r0x0c
001c80   f00c
001c82   c009     movff	0x9, 0xd           	MOVFF	r0x09, r0x0d
001c84   f00d
001c86   c00a     movff	0xa, 0xe           	MOVFF	r0x0a, r0x0e
001c88   f00e
001c8a   c00b     movff	0xb, 0xf           	MOVFF	r0x0b, r0x0f
001c8c   f00f
001c8e   80d8     bsf	0xd8, 0, 0           	BSF	STATUS, 0
001c90   ae0f     btfss	0xf, 0x7, 0        	BTFSS	r0x0f, 7
001c92   90d8     bcf	0xd8, 0, 0           	BCF	STATUS, 0
001c94   e31c     bnc	0x1cce               	BNC	_00145_DS_
001c96   500b     movf	0xb, 0, 0           	MOVF	r0x0b, W
001c98   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
001c9a   500a     movf	0xa, 0, 0           	MOVF	r0x0a, W
001c9c   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
001c9e   5009     movf	0x9, 0, 0           	MOVF	r0x09, W
001ca0   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
001ca2   5008     movf	0x8, 0, 0           	MOVF	r0x08, W
001ca4   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
001ca6   0eff     movlw	0xff               	MOVLW	0xff
001ca8   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
001caa   0eff     movlw	0xff               	MOVLW	0xff
001cac   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
001cae   0eff     movlw	0xff               	MOVLW	0xff
001cb0   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
001cb2   0eff     movlw	0xff               	MOVLW	0xff
001cb4   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
001cb6   ec71     call	0x14e2, 0           	CALL	__mullong
001cb8   f00a
001cba   6e0c     movwf	0xc, 0             	MOVWF	r0x0c
001cbc   cff3     movff	0xff3, 0xd         	MOVFF	PRODL, r0x0d
001cbe   f00d
001cc0   cff4     movff	0xff4, 0xe         	MOVFF	PRODH, r0x0e
001cc2   f00e
001cc4   cfe9     movff	0xfe9, 0xf         	MOVFF	FSR0L, r0x0f
001cc6   f00f
001cc8   0e08     movlw	0x8                	MOVLW	0x08
001cca   26e1     addwf	0xe1, 0x1, 0       	ADDWF	FSR1L, F
001ccc   d008     bra	0x1cde               	BRA	_00146_DS_
                                           _00145_DS_:
001cce   c008     movff	0x8, 0xc           	MOVFF	r0x08, r0x0c
001cd0   f00c
001cd2   c009     movff	0x9, 0xd           	MOVFF	r0x09, r0x0d
001cd4   f00d
001cd6   c00a     movff	0xa, 0xe           	MOVFF	r0x0a, r0x0e
001cd8   f00e
001cda   c00b     movff	0xb, 0xf           	MOVFF	r0x0b, r0x0f
001cdc   f00f
                                           _00146_DS_:
001cde   5003     movf	0x3, 0, 0           	MOVF	r0x03, W
001ce0   5c0f     subwf	0xf, 0, 0          	SUBWF	r0x0f, W
001ce2   e108     bnz	0x1cf4               	BNZ	_00149_DS_
001ce4   5002     movf	0x2, 0, 0           	MOVF	r0x02, W
001ce6   5c0e     subwf	0xe, 0, 0          	SUBWF	r0x0e, W
001ce8   e105     bnz	0x1cf4               	BNZ	_00149_DS_
001cea   5001     movf	0x1, 0, 0           	MOVF	r0x01, W
001cec   5c0d     subwf	0xd, 0, 0          	SUBWF	r0x0d, W
001cee   e102     bnz	0x1cf4               	BNZ	_00149_DS_
001cf0   5000     movf	0, 0, 0             	MOVF	r0x00, W
001cf2   5c0c     subwf	0xc, 0, 0          	SUBWF	r0x0c, W
                                           _00149_DS_:
001cf4   a0d8     btfss	0xd8, 0, 0         	BTFSS	STATUS, 0
001cf6   d7b3     bra	0x1c5e               	BRA	_00140_DS_
001cf8   cfe4     movff	0xfe4, 0xf         	MOVFF	PREINC1, r0x0f
001cfa   f00f
001cfc   cfe4     movff	0xfe4, 0xe         	MOVFF	PREINC1, r0x0e
001cfe   f00e
001d00   cfe4     movff	0xfe4, 0xd         	MOVFF	PREINC1, r0x0d
001d02   f00d
001d04   cfe4     movff	0xfe4, 0xc         	MOVFF	PREINC1, r0x0c
001d06   f00c
001d08   cfe4     movff	0xfe4, 0xb         	MOVFF	PREINC1, r0x0b
001d0a   f00b
001d0c   cfe4     movff	0xfe4, 0xa         	MOVFF	PREINC1, r0x0a
001d0e   f00a
001d10   cfe4     movff	0xfe4, 0x9         	MOVFF	PREINC1, r0x09
001d12   f009
001d14   cfe4     movff	0xfe4, 0x8         	MOVFF	PREINC1, r0x08
001d16   f008
001d18   cfe4     movff	0xfe4, 0x7         	MOVFF	PREINC1, r0x07
001d1a   f007
001d1c   cfe4     movff	0xfe4, 0x6         	MOVFF	PREINC1, r0x06
001d1e   f006
001d20   cfe4     movff	0xfe4, 0x5         	MOVFF	PREINC1, r0x05
001d22   f005
001d24   cfe4     movff	0xfe4, 0x4         	MOVFF	PREINC1, r0x04
001d26   f004
001d28   cfe4     movff	0xfe4, 0x3         	MOVFF	PREINC1, r0x03
001d2a   f003
001d2c   cfe4     movff	0xfe4, 0x2         	MOVFF	PREINC1, r0x02
001d2e   f002
001d30   cfe4     movff	0xfe4, 0x1         	MOVFF	PREINC1, r0x01
001d32   f001
001d34   cfe4     movff	0xfe4, 0           	MOVFF	PREINC1, r0x00
001d36   f000
001d38   cfe4     movff	0xfe4, 0xfd9       	MOVFF	PREINC1, FSR2L
001d3a   ffd9
001d3c   0012     return	0                 	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_pillefyrsstyring__timer_control	code
                                           _timer_control:
                                           ;	.line	148; pillefyrsstyring.c	static void timer_control(void) __interrupt 1 {
001a74   cfe8     movff	0xfe8, 0xfe5       	MOVFF	WREG, POSTDEC1
001a76   ffe5
001a78   cfd8     movff	0xfd8, 0xfe5       	MOVFF	STATUS, POSTDEC1
001a7a   ffe5
001a7c   cfe0     movff	0xfe0, 0xfe5       	MOVFF	BSR, POSTDEC1
001a7e   ffe5
001a80   cff3     movff	0xff3, 0xfe5       	MOVFF	PRODL, POSTDEC1
001a82   ffe5
001a84   cff4     movff	0xff4, 0xfe5       	MOVFF	PRODH, POSTDEC1
001a86   ffe5
001a88   cfe9     movff	0xfe9, 0xfe5       	MOVFF	FSR0L, POSTDEC1
001a8a   ffe5
001a8c   cfea     movff	0xfea, 0xfe5       	MOVFF	FSR0H, POSTDEC1
001a8e   ffe5
001a90   cffa     movff	0xffa, 0xfe5       	MOVFF	PCLATH, POSTDEC1
001a92   ffe5
001a94   cffb     movff	0xffb, 0xfe5       	MOVFF	PCLATU, POSTDEC1
001a96   ffe5
001a98   cfd9     movff	0xfd9, 0xfe5       	MOVFF	FSR2L, POSTDEC1
001a9a   ffe5
001a9c   cfe1     movff	0xfe1, 0xfd9       	MOVFF	FSR1L, FSR2L
001a9e   ffd9
001aa0   c000     movff	0, 0xfe5           	MOVFF	r0x00, POSTDEC1
001aa2   ffe5
                                           ;	.line	149; pillefyrsstyring.c	if (PIR1bits.TMR2IF) {
001aa4   a29e     btfss	0x9e, 0x1, 0       	BTFSS	_PIR1bits, 1
001aa6   d00f     bra	0x1ac6               	BRA	_00121_DS_
                                           ;	.line	150; pillefyrsstyring.c	PR2 = TIMER2_RELOAD;		// 1 ms delay at 4 MHz
001aa8   0e18     movlw	0x18               	MOVLW	0x18
001aaa   6ecb     movwf	0xcb, 0            	MOVWF	_PR2
                                           ;	.line	151; pillefyrsstyring.c	PIR1bits.TMR2IF = 0;
001aac   929e     bcf	0x9e, 0x1, 0         	BCF	_PIR1bits, 1
001aae   0100     movlb	0                  	BANKSEL	_timer_2
                                           ;	.line	152; pillefyrsstyring.c	timer_2++;
001ab0   2bc3     incf	0xc3, 0x1, 0x1      	INCF	_timer_2, F, B
001ab2   e302     bnc	0x1ab8               	BNC	_10164_DS_
001ab4   0100     movlb	0                  	BANKSEL	(_timer_2 + 1)
001ab6   2bc4     incf	0xc4, 0x1, 0x1      	INCF	(_timer_2 + 1), F, B
                                           _10164_DS_:
001ab8   e302     bnc	0x1abe               	BNC	_20165_DS_
001aba   0100     movlb	0                  	BANKSEL	(_timer_2 + 2)
001abc   2bc5     incf	0xc5, 0x1, 0x1      	INCF	(_timer_2 + 2), F, B
                                           _20165_DS_:
001abe   e302     bnc	0x1ac4               	BNC	_30166_DS_
001ac0   0100     movlb	0                  	BANKSEL	(_timer_2 + 3)
001ac2   2bc6     incf	0xc6, 0x1, 0x1      	INCF	(_timer_2 + 3), F, B
                                           _30166_DS_:
001ac4   0004     clrwdt                   	clrwdt 
                                           _00121_DS_:
                                           ;	.line	155; pillefyrsstyring.c	if (PIR2bits.TMR3IF) {
001ac6   a2a1     btfss	0xa1, 0x1, 0       	BTFSS	_PIR2bits, 1
001ac8   d039     bra	0x1b3c               	BRA	_00132_DS_
                                           ;	.line	156; pillefyrsstyring.c	TMR3H = (unsigned char)(TIMER3_RELOAD >> 8);	// 8 ms delay at 8 MHz
001aca   6ab3     clrf	0xb3, 0             	CLRF	_TMR3H
                                           ;	.line	157; pillefyrsstyring.c	TMR3L = (unsigned char)TIMER3_RELOAD;
001acc   6ab2     clrf	0xb2, 0             	CLRF	_TMR3L
                                           ;	.line	158; pillefyrsstyring.c	PIR2bits.TMR3IF = 0;	/* Clear the Timer Flag  */
001ace   92a1     bcf	0xa1, 0x1, 0         	BCF	_PIR2bits, 1
                                           ;	.line	161; pillefyrsstyring.c	adc_setchannel(3);
001ad0   0e03     movlw	0x3                	MOVLW	0x03
001ad2   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
001ad4   eccd     call	0x259a, 0           	CALL	_adc_setchannel
001ad6   f012
001ad8   2ae1     incf	0xe1, 0x1, 0        	INCF	FSR1L, F
                                           ;	.line	162; pillefyrsstyring.c	adc_conv();
001ada   ecc6     call	0x298c, 0           	CALL	_adc_conv
001adc   f014
                                           _00122_DS_:
                                           ;	.line	163; pillefyrsstyring.c	while(adc_busy()) {
001ade   ecbf     call	0x297e, 0           	CALL	_adc_busy
001ae0   f014
001ae2   6e00     movwf	0, 0               	MOVWF	r0x00
001ae4   5000     movf	0, 0, 0             	MOVF	r0x00, W
001ae6   e1fb     bnz	0x1ade               	BNZ	_00122_DS_
                                           ;	.line	166; pillefyrsstyring.c	boiler_temp = adc_read();
001ae8   ecb7     call	0x296e, 0           	CALL	_adc_read
001aea   f014
001aec   0100     movlb	0                  	BANKSEL	_boiler_temp
001aee   6fe0     movwf	0xe0, 0x1          	MOVWF	_boiler_temp, B
001af0   cff3     movff	0xff3, 0xe1        	MOVFF	PRODL, (_boiler_temp + 1)
001af2   f0e1
                                           ;	.line	169; pillefyrsstyring.c	adc_setchannel(4);
001af4   0e04     movlw	0x4                	MOVLW	0x04
001af6   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
001af8   eccd     call	0x259a, 0           	CALL	_adc_setchannel
001afa   f012
001afc   2ae1     incf	0xe1, 0x1, 0        	INCF	FSR1L, F
                                           ;	.line	170; pillefyrsstyring.c	adc_conv();
001afe   ecc6     call	0x298c, 0           	CALL	_adc_conv
001b00   f014
                                           _00125_DS_:
                                           ;	.line	171; pillefyrsstyring.c	while(adc_busy()) {
001b02   ecbf     call	0x297e, 0           	CALL	_adc_busy
001b04   f014
001b06   6e00     movwf	0, 0               	MOVWF	r0x00
001b08   5000     movf	0, 0, 0             	MOVF	r0x00, W
001b0a   e1fb     bnz	0x1b02               	BNZ	_00125_DS_
                                           ;	.line	174; pillefyrsstyring.c	smoke_temp = adc_read();
001b0c   ecb7     call	0x296e, 0           	CALL	_adc_read
001b0e   f014
001b10   0100     movlb	0                  	BANKSEL	_smoke_temp
001b12   6fe2     movwf	0xe2, 0x1          	MOVWF	_smoke_temp, B
001b14   cff3     movff	0xff3, 0xe3        	MOVFF	PRODL, (_smoke_temp + 1)
001b16   f0e3
                                           ;	.line	177; pillefyrsstyring.c	adc_setchannel(1);
001b18   0e01     movlw	0x1                	MOVLW	0x01
001b1a   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
001b1c   eccd     call	0x259a, 0           	CALL	_adc_setchannel
001b1e   f012
001b20   2ae1     incf	0xe1, 0x1, 0        	INCF	FSR1L, F
                                           ;	.line	178; pillefyrsstyring.c	adc_conv();
001b22   ecc6     call	0x298c, 0           	CALL	_adc_conv
001b24   f014
                                           _00128_DS_:
                                           ;	.line	179; pillefyrsstyring.c	while(adc_busy()) {
001b26   ecbf     call	0x297e, 0           	CALL	_adc_busy
001b28   f014
001b2a   6e00     movwf	0, 0               	MOVWF	r0x00
001b2c   5000     movf	0, 0, 0             	MOVF	r0x00, W
001b2e   e1fb     bnz	0x1b26               	BNZ	_00128_DS_
                                           ;	.line	182; pillefyrsstyring.c	chimney_temp = adc_read();
001b30   ecb7     call	0x296e, 0           	CALL	_adc_read
001b32   f014
001b34   0100     movlb	0                  	BANKSEL	_chimney_temp
001b36   6fe4     movwf	0xe4, 0x1          	MOVWF	_chimney_temp, B
001b38   cff3     movff	0xff3, 0xe5        	MOVFF	PRODL, (_chimney_temp + 1)
001b3a   f0e5
                                           _00132_DS_:
                                           ;	.line	185; pillefyrsstyring.c	if (usart_drdy()) {
001b3c   ecbb     call	0x2976, 0           	CALL	_usart_drdy
001b3e   f014
001b40   6e00     movwf	0, 0               	MOVWF	r0x00
001b42   5000     movf	0, 0, 0             	MOVF	r0x00, W
001b44   e006     bz	0x1b52                	BZ	_00135_DS_
                                           ;	.line	187; pillefyrsstyring.c	usart_putc(usart_getc());
001b46   ec0e     call	0x281c, 0           	CALL	_usart_getc
001b48   f014
001b4a   6e00     movwf	0, 0               	MOVWF	r0x00
001b4c   5000     movf	0, 0, 0             	MOVF	r0x00, W
001b4e   ecab     call	0x2956, 0           	CALL	_usart_putc
001b50   f014
                                           _00135_DS_:
001b52   cfe4     movff	0xfe4, 0           	MOVFF	PREINC1, r0x00
001b54   f000
001b56   cfe4     movff	0xfe4, 0xfd9       	MOVFF	PREINC1, FSR2L
001b58   ffd9
001b5a   cfe4     movff	0xfe4, 0xffb       	MOVFF	PREINC1, PCLATU
001b5c   fffb
001b5e   cfe4     movff	0xfe4, 0xffa       	MOVFF	PREINC1, PCLATH
001b60   fffa
001b62   cfe4     movff	0xfe4, 0xfea       	MOVFF	PREINC1, FSR0H
001b64   ffea
001b66   cfe4     movff	0xfe4, 0xfe9       	MOVFF	PREINC1, FSR0L
001b68   ffe9
001b6a   cfe4     movff	0xfe4, 0xff4       	MOVFF	PREINC1, PRODH
001b6c   fff4
001b6e   cfe4     movff	0xfe4, 0xff3       	MOVFF	PREINC1, PRODL
001b70   fff3
001b72   cfe4     movff	0xfe4, 0xfe0       	MOVFF	PREINC1, BSR
001b74   ffe0
001b76   cfe4     movff	0xfe4, 0xfd8       	MOVFF	PREINC1, STATUS
001b78   ffd8
001b7a   cfe4     movff	0xfe4, 0xfe8       	MOVFF	PREINC1, WREG
001b7c   ffe8
001b7e   0010     retfie	0                 	RETFIE	
                                           
                                           ; ; Starting pCode block
                                           __str_0:
001b80   704f     btg	0x4f, 0, 0           	DB	0x4f, 0x70, 0x65, 0x6e, 0x53, 0x74, 0x6f, 0x6b, 0x65, 0x72, 0x20, 0x73
001b82   6e65     movwf	0x65, 0            
001b84   7453     btg	0x53, 0x2, 0         
001b86   6b6f     clrf	0x6f, 0x1           
001b88   7265     btg	0x65, 0x1, 0         
001b8a   7320     btg	0x20, 0x1, 0x1       
001b8c   6174     cpfslt	0x74, 0x1         	DB	0x74, 0x61, 0x72, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x2e, 0x2e, 0x00
001b8e   7472     btg	0x72, 0x2, 0         
001b90   6e69     movwf	0x69, 0            
001b92   2e67     decfsz	0x67, 0x1, 0      
001b94   2e2e     decfsz	0x2e, 0x1, 0      
001b96   0000     nop                      
                                           ; ; Starting pCode block
                                           __str_1:
001b98   7055     btg	0x55, 0, 0           	DB	0x55, 0x70, 0x20, 0x28, 0x6d, 0x6f, 0x74, 0x6f, 0x72, 0x29, 0x00
001b9a   2820     incf	0x20, 0, 0          
001b9c   6f6d     movwf	0x6d, 0x1          
001b9e   6f74     movwf	0x74, 0x1          
001ba0   2972     incf	0x72, 0, 0x1        
001ba2   0000     nop                      
                                           ; ; Starting pCode block
                                           __str_2:
001ba4   654d     cpfsgt	0x4d, 0x1         	DB	0x4d, 0x65, 0x6e, 0x75, 0x20, 0x28, 0x66, 0x61, 0x6e, 0x29, 0x00
001ba6   756e     btg	0x6e, 0x2, 0x1       
001ba8   2820     incf	0x20, 0, 0          
001baa   6166     cpfslt	0x66, 0x1         
001bac   296e     incf	0x6e, 0, 0x1        
001bae   0000     nop                      
                                           ; ; Starting pCode block
                                           __str_3:
001bb0   6f44     movwf	0x44, 0x1          	DB	0x44, 0x6f, 0x77, 0x6e, 0x20, 0x28, 0x65, 0x6c, 0x2d, 0x73, 0x74, 0x61
001bb2   6e77     movwf	0x77, 0            
001bb4   2820     incf	0x20, 0, 0          
001bb6   6c65     negf	0x65, 0             
001bb8   732d     btg	0x2d, 0x1, 0x1       
001bba   6174     cpfslt	0x74, 0x1         
001bbc   7472     btg	0x72, 0x2, 0         	DB	0x72, 0x74, 0x29, 0x00
001bbe   0029     dw	0x29  ;unknown opcode 
                                           ; ; Starting pCode block
                                           __str_4:
001bc0   6f62     movwf	0x62, 0x1          	DB	0x62, 0x6f, 0x69, 0x6c, 0x65, 0x72, 0x20, 0x74, 0x65, 0x6d, 0x70, 0x20
001bc2   6c69     negf	0x69, 0             
001bc4   7265     btg	0x65, 0x1, 0         
001bc6   7420     btg	0x20, 0x2, 0         
001bc8   6d65     negf	0x65, 0x1           
001bca   2070     addwfc	0x70, 0, 0        
001bcc   6925     setf	0x25, 0x1           	DB	0x25, 0x69, 0x00
001bce   0000     nop                      
                                           ; ; Starting pCode block
                                           __str_5:
001bd0   6d73     negf	0x73, 0x1           	DB	0x73, 0x6d, 0x6f, 0x6b, 0x65, 0x20, 0x74, 0x65, 0x6d, 0x70, 0x20, 0x25
001bd2   6b6f     clrf	0x6f, 0x1           
001bd4   2065     addwfc	0x65, 0, 0        
001bd6   6574     cpfsgt	0x74, 0x1         
001bd8   706d     btg	0x6d, 0, 0           
001bda   2520     addwf	0x20, 0, 0x1       
001bdc   0069     dw	0x69  ;unknown opcode 	DB	0x69, 0x00
                                           ; ; Starting pCode block
                                           __str_6:
001bde   6863     setf	0x63, 0             	DB	0x63, 0x68, 0x69, 0x6d, 0x6e, 0x65, 0x79, 0x20, 0x74, 0x65, 0x6d, 0x70
001be0   6d69     negf	0x69, 0x1           
001be2   656e     cpfsgt	0x6e, 0x1         
001be4   2079     addwfc	0x79, 0, 0        
001be6   6574     cpfsgt	0x74, 0x1         
001be8   706d     btg	0x6d, 0, 0           
001bea   2520     addwf	0x20, 0, 0x1       	DB	0x20, 0x25, 0x69, 0x00
001bec   0069     dw	0x69  ;unknown opcode 
                                           
                                           
                                           ; Statistics:
                                           ; code size:	 1494 (0x05d6) bytes ( 1.14%)
                                           ;           	  747 (0x02eb) words
                                           ; udata size:	   34 (0x0022) bytes ( 0.89%)
                                           ; access size:	   16 (0x0010) bytes
                                           
                                           
                                           	end
                                           ;--------------------------------------------------------
                                           ; File Created by SDCC : free open source ANSI-C Compiler
                                           ; Version 3.0.0 #6037 (Jul 16 2012) (Mac OS X x86_64)
                                           ; This file was generated Sat Dec 15 23:24:12 2012
                                           ;--------------------------------------------------------
                                           ; PIC16 port for the Microchip 16-bit core micros
                                           ;--------------------------------------------------------
                                           	list	p=18f4620
                                           
                                           	radix dec
                                           
                                           ;--------------------------------------------------------
                                           ; public variables in this module
                                           ;--------------------------------------------------------
                                           	global _lcd_init
                                           	global _lcd_enable
                                           	global _lcd_status
                                           	global _lcd_reset
                                           	global _lcd_screenon
                                           	global _lcd_cls
                                           	global _lcd_setpage
                                           	global _lcd_setyaddr
                                           	global _lcd_waitbusy
                                           	global _lcd_write
                                           	global _lcd_selectside
                                           	global _lcd_read
                                           	global _lcd_plotpixel
                                           	global _lcd_debug
                                           	global _delay_20us
                                           	global _delay_500us
                                           	global _font8x5
                                           
                                           ;--------------------------------------------------------
                                           ; extern variables in this module
                                           ;--------------------------------------------------------
                                           	extern __gptrget1
                                           	extern _PORTAbits
                                           	extern _PORTBbits
                                           	extern _PORTCbits
                                           	extern _PORTDbits
                                           	extern _PORTEbits
                                           	extern _LATAbits
                                           	extern _LATBbits
                                           	extern _LATCbits
                                           	extern _LATDbits
                                           	extern _LATEbits
                                           	extern _TRISAbits
                                           	extern _TRISBbits
                                           	extern _TRISCbits
                                           	extern _TRISDbits
                                           	extern _TRISEbits
                                           	extern _OSCTUNEbits
                                           	extern _PIE1bits
                                           	extern _PIR1bits
                                           	extern _IPR1bits
                                           	extern _PIE2bits
                                           	extern _PIR2bits
                                           	extern _IPR2bits
                                           	extern _EECON1bits
                                           	extern _RCSTAbits
                                           	extern _TXSTAbits
                                           	extern _T3CONbits
                                           	extern _CMCONbits
                                           	extern _CVRCONbits
                                           	extern _ECCP1ASbits
                                           	extern _PWM1CONbits
                                           	extern _BAUDCONbits
                                           	extern _CCP2CONbits
                                           	extern _CCP1CONbits
                                           	extern _ADCON2bits
                                           	extern _ADCON1bits
                                           	extern _ADCON0bits
                                           	extern _SSPCON2bits
                                           	extern _SSPCON1bits
                                           	extern _SSPSTATbits
                                           	extern _T2CONbits
                                           	extern _T1CONbits
                                           	extern _RCONbits
                                           	extern _WDTCONbits
                                           	extern _HLVDCONbits
                                           	extern _OSCCONbits
                                           	extern _T0CONbits
                                           	extern _STATUSbits
                                           	extern _FSR2Hbits
                                           	extern _BSRbits
                                           	extern _FSR1Hbits
                                           	extern _FSR0Hbits
                                           	extern _INTCON3bits
                                           	extern _INTCON2bits
                                           	extern _INTCONbits
                                           	extern _TBLPTRUbits
                                           	extern _PCLATHbits
                                           	extern _PCLATUbits
                                           	extern _STKPTRbits
                                           	extern _TOSUbits
                                           	extern _PORTA
                                           	extern _PORTB
                                           	extern _PORTC
                                           	extern _PORTD
                                           	extern _PORTE
                                           	extern _LATA
                                           	extern _LATB
                                           	extern _LATC
                                           	extern _LATD
                                           	extern _LATE
                                           	extern _TRISA
                                           	extern _TRISB
                                           	extern _TRISC
                                           	extern _TRISD
                                           	extern _TRISE
                                           	extern _OSCTUNE
                                           	extern _PIE1
                                           	extern _PIR1
                                           	extern _IPR1
                                           	extern _PIE2
                                           	extern _PIR2
                                           	extern _IPR2
                                           	extern _EECON1
                                           	extern _EECON2
                                           	extern _EEDATA
                                           	extern _EEADR
                                           	extern _EEADRH
                                           	extern _RCSTA
                                           	extern _TXSTA
                                           	extern _TXREG
                                           	extern _RCREG
                                           	extern _SPBRG
                                           	extern _SPBRGH
                                           	extern _T3CON
                                           	extern _TMR3L
                                           	extern _TMR3H
                                           	extern _CMCON
                                           	extern _CVRCON
                                           	extern _ECCP1AS
                                           	extern _PWM1CON
                                           	extern _BAUDCON
                                           	extern _CCP2CON
                                           	extern _CCPR2L
                                           	extern _CCPR2H
                                           	extern _CCP1CON
                                           	extern _CCPR1L
                                           	extern _CCPR1H
                                           	extern _ADCON2
                                           	extern _ADCON1
                                           	extern _ADCON0
                                           	extern _ADRESL
                                           	extern _ADRESH
                                           	extern _SSPCON2
                                           	extern _SSPCON1
                                           	extern _SSPSTAT
                                           	extern _SSPADD
                                           	extern _SSPBUF
                                           	extern _T2CON
                                           	extern _PR2
                                           	extern _TMR2
                                           	extern _T1CON
                                           	extern _TMR1L
                                           	extern _TMR1H
                                           	extern _RCON
                                           	extern _WDTCON
                                           	extern _HLVDCON
                                           	extern _OSCCON
                                           	extern _T0CON
                                           	extern _TMR0L
                                           	extern _TMR0H
                                           	extern _STATUS
                                           	extern _FSR2L
                                           	extern _FSR2H
                                           	extern _PLUSW2
                                           	extern _PREINC2
                                           	extern _POSTDEC2
                                           	extern _POSTINC2
                                           	extern _INDF2
                                           	extern _BSR
                                           	extern _FSR1L
                                           	extern _FSR1H
                                           	extern _PLUSW1
                                           	extern _PREINC1
                                           	extern _POSTDEC1
                                           	extern _POSTINC1
                                           	extern _INDF1
                                           	extern _WREG
                                           	extern _FSR0L
                                           	extern _FSR0H
                                           	extern _PLUSW0
                                           	extern _PREINC0
                                           	extern _POSTDEC0
                                           	extern _POSTINC0
                                           	extern _INDF0
                                           	extern _INTCON3
                                           	extern _INTCON2
                                           	extern _INTCON
                                           	extern _PRODL
                                           	extern _PRODH
                                           	extern _TABLAT
                                           	extern _TBLPTRL
                                           	extern _TBLPTRH
                                           	extern _TBLPTRU
                                           	extern _PCL
                                           	extern _PCLATH
                                           	extern _PCLATU
                                           	extern _STKPTR
                                           	extern _TOSL
                                           	extern _TOSH
                                           	extern _TOSU
                                           	extern _strlen
                                           ;--------------------------------------------------------
                                           ;	Equates to used internal registers
                                           ;--------------------------------------------------------
                                           STATUS	equ	0xfd8
                                           WREG	equ	0xfe8
                                           TBLPTRL	equ	0xff6
                                           TBLPTRH	equ	0xff7
                                           TBLPTRU	equ	0xff8
                                           TABLAT	equ	0xff5
                                           FSR0L	equ	0xfe9
                                           FSR1L	equ	0xfe1
                                           FSR2L	equ	0xfd9
                                           POSTDEC1	equ	0xfe5
                                           PREINC1	equ	0xfe4
                                           PLUSW2	equ	0xfdb
                                           PRODL	equ	0xff3
                                           PRODH	equ	0xff4
                                           
                                           
                                           ; Internal registers
                                           .registers	udata_ovr	0x0000
                                           r0x00	res	1
                                           r0x01	res	1
                                           r0x02	res	1
                                           r0x03	res	1
                                           r0x04	res	1
                                           r0x05	res	1
                                           r0x06	res	1
                                           r0x07	res	1
                                           r0x08	res	1
                                           r0x09	res	1
                                           r0x0a	res	1
                                           r0x0b	res	1
                                           r0x0c	res	1
                                           r0x0d	res	1
                                           r0x0e	res	1
                                           r0x0f	res	1
                                           r0x10	res	1
                                           
                                           ;--------------------------------------------------------
                                           ; global & static initialisations
                                           ;--------------------------------------------------------
                                           ; I code from now on!
                                           ; ; Starting pCode block
                                           S_glcd__delay_500us	code
                                           _delay_500us:
                                           ;	.line	263; glcd.c	void delay_500us() {
000e42   cfd9     movff	0xfd9, 0xfe5       	MOVFF	FSR2L, POSTDEC1
000e44   ffe5
000e46   cfe1     movff	0xfe1, 0xfd9       	MOVFF	FSR1L, FSR2L
000e48   ffd9
000e4a   0000     nop                      	nop
000e4c   0000     nop                      	nop
000e4e   0000     nop                      	nop
000e50   0000     nop                      	nop
000e52   0000     nop                      	nop
000e54   0000     nop                      	nop
000e56   0000     nop                      	nop
000e58   0000     nop                      	nop
000e5a   0000     nop                      	nop
000e5c   0000     nop                      	nop
000e5e   0000     nop                      	nop
000e60   0000     nop                      	nop
000e62   0000     nop                      	nop
000e64   0000     nop                      	nop
000e66   0000     nop                      	nop
000e68   0000     nop                      	nop
000e6a   0000     nop                      	nop
000e6c   0000     nop                      	nop
000e6e   0000     nop                      	nop
000e70   0000     nop                      	nop
000e72   0000     nop                      	nop
000e74   0000     nop                      	nop
000e76   0000     nop                      	nop
000e78   0000     nop                      	nop
000e7a   0000     nop                      	nop
000e7c   0000     nop                      	nop
000e7e   0000     nop                      	nop
000e80   0000     nop                      	nop
000e82   0000     nop                      	nop
000e84   0000     nop                      	nop
000e86   0000     nop                      	nop
000e88   0000     nop                      	nop
000e8a   0000     nop                      	nop
000e8c   0000     nop                      	nop
000e8e   0000     nop                      	nop
000e90   0000     nop                      	nop
000e92   0000     nop                      	nop
000e94   0000     nop                      	nop
000e96   0000     nop                      	nop
000e98   0000     nop                      	nop
000e9a   0000     nop                      	nop
000e9c   0000     nop                      	nop
000e9e   0000     nop                      	nop
000ea0   0000     nop                      	nop
000ea2   0000     nop                      	nop
000ea4   0000     nop                      	nop
000ea6   0000     nop                      	nop
000ea8   0000     nop                      	nop
000eaa   0000     nop                      	nop
000eac   0000     nop                      	nop
000eae   0000     nop                      	nop
000eb0   0000     nop                      	nop
000eb2   0000     nop                      	nop
000eb4   0000     nop                      	nop
000eb6   0000     nop                      	nop
000eb8   0000     nop                      	nop
000eba   0000     nop                      	nop
000ebc   0000     nop                      	nop
000ebe   0000     nop                      	nop
000ec0   0000     nop                      	nop
000ec2   0000     nop                      	nop
000ec4   0000     nop                      	nop
000ec6   0000     nop                      	nop
000ec8   0000     nop                      	nop
000eca   0000     nop                      	nop
000ecc   0000     nop                      	nop
000ece   0000     nop                      	nop
000ed0   0000     nop                      	nop
000ed2   0000     nop                      	nop
000ed4   0000     nop                      	nop
000ed6   0000     nop                      	nop
000ed8   0000     nop                      	nop
000eda   0000     nop                      	nop
000edc   0000     nop                      	nop
000ede   0000     nop                      	nop
000ee0   0000     nop                      	nop
000ee2   0000     nop                      	nop
000ee4   0000     nop                      	nop
000ee6   0000     nop                      	nop
000ee8   0000     nop                      	nop
000eea   0000     nop                      	nop
000eec   0000     nop                      	nop
000eee   0000     nop                      	nop
000ef0   0000     nop                      	nop
000ef2   0000     nop                      	nop
000ef4   0000     nop                      	nop
000ef6   0000     nop                      	nop
000ef8   0000     nop                      	nop
000efa   0000     nop                      	nop
000efc   0000     nop                      	nop
000efe   0000     nop                      	nop
000f00   0000     nop                      	nop
000f02   0000     nop                      	nop
000f04   0000     nop                      	nop
000f06   0000     nop                      	nop
000f08   0000     nop                      	nop
000f0a   0000     nop                      	nop
000f0c   0000     nop                      	nop
000f0e   0000     nop                      	nop
000f10   0000     nop                      	nop
000f12   0000     nop                      	nop
000f14   0000     nop                      	nop
000f16   0000     nop                      	nop
000f18   0000     nop                      	nop
000f1a   0000     nop                      	nop
000f1c   0000     nop                      	nop
000f1e   0000     nop                      	nop
000f20   0000     nop                      	nop
000f22   0000     nop                      	nop
000f24   0000     nop                      	nop
000f26   0000     nop                      	nop
000f28   0000     nop                      	nop
000f2a   0000     nop                      	nop
000f2c   0000     nop                      	nop
000f2e   0000     nop                      	nop
000f30   0000     nop                      	nop
000f32   0000     nop                      	nop
000f34   0000     nop                      	nop
000f36   0000     nop                      	nop
000f38   0000     nop                      	nop
000f3a   0000     nop                      	nop
000f3c   0000     nop                      	nop
000f3e   0000     nop                      	nop
000f40   0000     nop                      	nop
000f42   0000     nop                      	nop
000f44   0000     nop                      	nop
000f46   0000     nop                      	nop
000f48   0000     nop                      	nop
000f4a   0000     nop                      	nop
000f4c   0000     nop                      	nop
000f4e   0000     nop                      	nop
000f50   0000     nop                      	nop
000f52   0000     nop                      	nop
000f54   0000     nop                      	nop
000f56   0000     nop                      	nop
000f58   0000     nop                      	nop
000f5a   0000     nop                      	nop
000f5c   0000     nop                      	nop
000f5e   0000     nop                      	nop
000f60   0000     nop                      	nop
000f62   0000     nop                      	nop
000f64   0000     nop                      	nop
000f66   0000     nop                      	nop
000f68   0000     nop                      	nop
000f6a   0000     nop                      	nop
000f6c   0000     nop                      	nop
000f6e   0000     nop                      	nop
000f70   0000     nop                      	nop
000f72   0000     nop                      	nop
000f74   0000     nop                      	nop
000f76   0000     nop                      	nop
000f78   0000     nop                      	nop
000f7a   0000     nop                      	nop
000f7c   0000     nop                      	nop
000f7e   0000     nop                      	nop
000f80   0000     nop                      	nop
000f82   0000     nop                      	nop
000f84   0000     nop                      	nop
000f86   0000     nop                      	nop
000f88   0000     nop                      	nop
000f8a   0000     nop                      	nop
000f8c   0000     nop                      	nop
000f8e   0000     nop                      	nop
000f90   0000     nop                      	nop
000f92   0000     nop                      	nop
000f94   0000     nop                      	nop
000f96   0000     nop                      	nop
000f98   0000     nop                      	nop
000f9a   0000     nop                      	nop
000f9c   0000     nop                      	nop
000f9e   0000     nop                      	nop
000fa0   0000     nop                      	nop
000fa2   0000     nop                      	nop
000fa4   0000     nop                      	nop
000fa6   0000     nop                      	nop
000fa8   0000     nop                      	nop
000faa   0000     nop                      	nop
000fac   0000     nop                      	nop
000fae   0000     nop                      	nop
000fb0   0000     nop                      	nop
000fb2   0000     nop                      	nop
000fb4   0000     nop                      	nop
000fb6   0000     nop                      	nop
000fb8   0000     nop                      	nop
000fba   0000     nop                      	nop
000fbc   0000     nop                      	nop
000fbe   0000     nop                      	nop
000fc0   0000     nop                      	nop
000fc2   0000     nop                      	nop
000fc4   0000     nop                      	nop
000fc6   0000     nop                      	nop
000fc8   0000     nop                      	nop
000fca   0000     nop                      	nop
000fcc   0000     nop                      	nop
000fce   0000     nop                      	nop
000fd0   0000     nop                      	nop
000fd2   0000     nop                      	nop
000fd4   0000     nop                      	nop
000fd6   0000     nop                      	nop
000fd8   0000     nop                      	nop
000fda   0000     nop                      	nop
000fdc   0000     nop                      	nop
000fde   0000     nop                      	nop
000fe0   0000     nop                      	nop
000fe2   0000     nop                      	nop
000fe4   0000     nop                      	nop
000fe6   0000     nop                      	nop
000fe8   0000     nop                      	nop
000fea   0000     nop                      	nop
000fec   0000     nop                      	nop
000fee   0000     nop                      	nop
000ff0   0000     nop                      	nop
000ff2   0000     nop                      	nop
000ff4   0000     nop                      	nop
000ff6   0000     nop                      	nop
000ff8   0000     nop                      	nop
000ffa   0000     nop                      	nop
000ffc   0000     nop                      	nop
000ffe   0000     nop                      	nop
001000   0000     nop                      	nop
001002   0000     nop                      	nop
001004   0000     nop                      	nop
001006   0000     nop                      	nop
001008   0000     nop                      	nop
00100a   0000     nop                      	nop
00100c   0000     nop                      	nop
00100e   0000     nop                      	nop
001010   0000     nop                      	nop
001012   0000     nop                      	nop
001014   0000     nop                      	nop
001016   0000     nop                      	nop
001018   0000     nop                      	nop
00101a   0000     nop                      	nop
00101c   0000     nop                      	nop
00101e   0000     nop                      	nop
001020   0000     nop                      	nop
001022   0000     nop                      	nop
001024   0000     nop                      	nop
001026   0000     nop                      	nop
001028   0000     nop                      	nop
00102a   0000     nop                      	nop
00102c   0000     nop                      	nop
00102e   0000     nop                      	nop
001030   0000     nop                      	nop
001032   0000     nop                      	nop
001034   0000     nop                      	nop
001036   0000     nop                      	nop
001038   0000     nop                      	nop
00103a   0000     nop                      	nop
00103c   0000     nop                      	nop
00103e   0000     nop                      	nop
001040   0000     nop                      	nop
001042   0000     nop                      	nop
001044   0000     nop                      	nop
001046   0000     nop                      	nop
001048   0000     nop                      	nop
00104a   0000     nop                      	nop
00104c   0000     nop                      	nop
00104e   0000     nop                      	nop
001050   0000     nop                      	nop
001052   0000     nop                      	nop
001054   0000     nop                      	nop
001056   0000     nop                      	nop
001058   0000     nop                      	nop
00105a   0000     nop                      	nop
00105c   0000     nop                      	nop
00105e   0000     nop                      	nop
001060   0000     nop                      	nop
001062   0000     nop                      	nop
001064   0000     nop                      	nop
001066   0000     nop                      	nop
001068   0000     nop                      	nop
00106a   0000     nop                      	nop
00106c   0000     nop                      	nop
00106e   0000     nop                      	nop
001070   0000     nop                      	nop
001072   0000     nop                      	nop
001074   0000     nop                      	nop
001076   0000     nop                      	nop
001078   0000     nop                      	nop
00107a   0000     nop                      	nop
00107c   0000     nop                      	nop
00107e   0000     nop                      	nop
001080   0000     nop                      	nop
001082   0000     nop                      	nop
001084   0000     nop                      	nop
001086   0000     nop                      	nop
001088   0000     nop                      	nop
00108a   0000     nop                      	nop
00108c   0000     nop                      	nop
00108e   0000     nop                      	nop
001090   0000     nop                      	nop
001092   0000     nop                      	nop
001094   0000     nop                      	nop
001096   0000     nop                      	nop
001098   0000     nop                      	nop
00109a   0000     nop                      	nop
00109c   0000     nop                      	nop
00109e   0000     nop                      	nop
0010a0   0000     nop                      	nop
0010a2   0000     nop                      	nop
0010a4   0000     nop                      	nop
0010a6   0000     nop                      	nop
0010a8   0000     nop                      	nop
0010aa   0000     nop                      	nop
0010ac   0000     nop                      	nop
0010ae   0000     nop                      	nop
0010b0   0000     nop                      	nop
0010b2   0000     nop                      	nop
0010b4   0000     nop                      	nop
0010b6   0000     nop                      	nop
0010b8   0000     nop                      	nop
0010ba   0000     nop                      	nop
0010bc   0000     nop                      	nop
0010be   0000     nop                      	nop
0010c0   0000     nop                      	nop
0010c2   0000     nop                      	nop
0010c4   0000     nop                      	nop
0010c6   0000     nop                      	nop
0010c8   0000     nop                      	nop
0010ca   0000     nop                      	nop
0010cc   0000     nop                      	nop
0010ce   0000     nop                      	nop
0010d0   0000     nop                      	nop
0010d2   0000     nop                      	nop
0010d4   0000     nop                      	nop
0010d6   0000     nop                      	nop
0010d8   0000     nop                      	nop
0010da   0000     nop                      	nop
0010dc   0000     nop                      	nop
0010de   0000     nop                      	nop
0010e0   0000     nop                      	nop
0010e2   0000     nop                      	nop
0010e4   0000     nop                      	nop
0010e6   0000     nop                      	nop
0010e8   0000     nop                      	nop
0010ea   0000     nop                      	nop
0010ec   0000     nop                      	nop
0010ee   0000     nop                      	nop
0010f0   0000     nop                      	nop
0010f2   0000     nop                      	nop
0010f4   0000     nop                      	nop
0010f6   0000     nop                      	nop
0010f8   0000     nop                      	nop
0010fa   0000     nop                      	nop
0010fc   0000     nop                      	nop
0010fe   0000     nop                      	nop
001100   0000     nop                      	nop
001102   0000     nop                      	nop
001104   0000     nop                      	nop
001106   0000     nop                      	nop
001108   0000     nop                      	nop
00110a   0000     nop                      	nop
00110c   0000     nop                      	nop
00110e   0000     nop                      	nop
001110   0000     nop                      	nop
001112   0000     nop                      	nop
001114   0000     nop                      	nop
001116   0000     nop                      	nop
001118   0000     nop                      	nop
00111a   0000     nop                      	nop
00111c   0000     nop                      	nop
00111e   0000     nop                      	nop
001120   0000     nop                      	nop
001122   0000     nop                      	nop
001124   0000     nop                      	nop
001126   0000     nop                      	nop
001128   0000     nop                      	nop
00112a   0000     nop                      	nop
00112c   0000     nop                      	nop
00112e   0000     nop                      	nop
001130   0000     nop                      	nop
001132   0000     nop                      	nop
001134   0000     nop                      	nop
001136   0000     nop                      	nop
001138   0000     nop                      	nop
00113a   0000     nop                      	nop
00113c   0000     nop                      	nop
00113e   0000     nop                      	nop
001140   0000     nop                      	nop
001142   0000     nop                      	nop
001144   0000     nop                      	nop
001146   0000     nop                      	nop
001148   0000     nop                      	nop
00114a   0000     nop                      	nop
00114c   0000     nop                      	nop
00114e   0000     nop                      	nop
001150   0000     nop                      	nop
001152   0000     nop                      	nop
001154   0000     nop                      	nop
001156   0000     nop                      	nop
001158   0000     nop                      	nop
00115a   0000     nop                      	nop
00115c   0000     nop                      	nop
00115e   0000     nop                      	nop
001160   0000     nop                      	nop
001162   0000     nop                      	nop
001164   0000     nop                      	nop
001166   0000     nop                      	nop
001168   0000     nop                      	nop
00116a   0000     nop                      	nop
00116c   0000     nop                      	nop
00116e   0000     nop                      	nop
001170   0000     nop                      	nop
001172   0000     nop                      	nop
001174   0000     nop                      	nop
001176   0000     nop                      	nop
001178   0000     nop                      	nop
00117a   0000     nop                      	nop
00117c   0000     nop                      	nop
00117e   0000     nop                      	nop
001180   0000     nop                      	nop
001182   0000     nop                      	nop
001184   0000     nop                      	nop
001186   0000     nop                      	nop
001188   0000     nop                      	nop
00118a   0000     nop                      	nop
00118c   0000     nop                      	nop
00118e   0000     nop                      	nop
001190   0000     nop                      	nop
001192   0000     nop                      	nop
001194   0000     nop                      	nop
001196   0000     nop                      	nop
001198   0000     nop                      	nop
00119a   0000     nop                      	nop
00119c   0000     nop                      	nop
00119e   0000     nop                      	nop
0011a0   0000     nop                      	nop
0011a2   0000     nop                      	nop
0011a4   0000     nop                      	nop
0011a6   0000     nop                      	nop
0011a8   0000     nop                      	nop
0011aa   0000     nop                      	nop
0011ac   0000     nop                      	nop
0011ae   0000     nop                      	nop
0011b0   0000     nop                      	nop
0011b2   0000     nop                      	nop
0011b4   0000     nop                      	nop
0011b6   0000     nop                      	nop
0011b8   0000     nop                      	nop
0011ba   0000     nop                      	nop
0011bc   0000     nop                      	nop
0011be   0000     nop                      	nop
0011c0   0000     nop                      	nop
0011c2   0000     nop                      	nop
0011c4   0000     nop                      	nop
0011c6   0000     nop                      	nop
0011c8   0000     nop                      	nop
0011ca   0000     nop                      	nop
0011cc   0000     nop                      	nop
0011ce   0000     nop                      	nop
0011d0   0000     nop                      	nop
0011d2   0000     nop                      	nop
0011d4   0000     nop                      	nop
0011d6   0000     nop                      	nop
0011d8   0000     nop                      	nop
0011da   0000     nop                      	nop
0011dc   0000     nop                      	nop
0011de   0000     nop                      	nop
0011e0   0000     nop                      	nop
0011e2   0000     nop                      	nop
0011e4   0000     nop                      	nop
0011e6   0000     nop                      	nop
0011e8   0000     nop                      	nop
0011ea   0000     nop                      	nop
0011ec   0000     nop                      	nop
0011ee   0000     nop                      	nop
0011f0   0000     nop                      	nop
0011f2   0000     nop                      	nop
0011f4   0000     nop                      	nop
0011f6   0000     nop                      	nop
0011f8   0000     nop                      	nop
0011fa   0000     nop                      	nop
0011fc   0000     nop                      	nop
0011fe   0000     nop                      	nop
001200   0000     nop                      	nop
001202   0000     nop                      	nop
001204   0000     nop                      	nop
001206   0000     nop                      	nop
001208   0000     nop                      	nop
00120a   0000     nop                      	nop
00120c   0000     nop                      	nop
00120e   0000     nop                      	nop
001210   0000     nop                      	nop
001212   0000     nop                      	nop
001214   0000     nop                      	nop
001216   0000     nop                      	nop
001218   0000     nop                      	nop
00121a   0000     nop                      	nop
00121c   0000     nop                      	nop
                                           	
00121e   cfe4     movff	0xfe4, 0xfd9       	MOVFF	PREINC1, FSR2L
001220   ffd9
001222   0012     return	0                 	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_glcd__delay_20us	code
                                           _delay_20us:
                                           ;	.line	248; glcd.c	void delay_20us() {
0028b4   cfd9     movff	0xfd9, 0xfe5       	MOVFF	FSR2L, POSTDEC1
0028b6   ffe5
0028b8   cfe1     movff	0xfe1, 0xfd9       	MOVFF	FSR1L, FSR2L
0028ba   ffd9
0028bc   0000     nop                      	nop
0028be   0000     nop                      	nop
0028c0   0000     nop                      	nop
0028c2   0000     nop                      	nop
0028c4   0000     nop                      	nop
0028c6   0000     nop                      	nop
0028c8   0000     nop                      	nop
0028ca   0000     nop                      	nop
0028cc   0000     nop                      	nop
0028ce   0000     nop                      	nop
                                           	
0028d0   cfe4     movff	0xfe4, 0xfd9       	MOVFF	PREINC1, FSR2L
0028d2   ffd9
0028d4   0012     return	0                 	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_glcd__lcd_debug	code
                                           _lcd_debug:
                                           ;	.line	230; glcd.c	void lcd_debug(unsigned char *s, unsigned char line) {
0016f6   cfd9     movff	0xfd9, 0xfe5       	MOVFF	FSR2L, POSTDEC1
0016f8   ffe5
0016fa   cfe1     movff	0xfe1, 0xfd9       	MOVFF	FSR1L, FSR2L
0016fc   ffd9
0016fe   c000     movff	0, 0xfe5           	MOVFF	r0x00, POSTDEC1
001700   ffe5
001702   c001     movff	0x1, 0xfe5         	MOVFF	r0x01, POSTDEC1
001704   ffe5
001706   c002     movff	0x2, 0xfe5         	MOVFF	r0x02, POSTDEC1
001708   ffe5
00170a   c003     movff	0x3, 0xfe5         	MOVFF	r0x03, POSTDEC1
00170c   ffe5
00170e   c004     movff	0x4, 0xfe5         	MOVFF	r0x04, POSTDEC1
001710   ffe5
001712   c005     movff	0x5, 0xfe5         	MOVFF	r0x05, POSTDEC1
001714   ffe5
001716   c006     movff	0x6, 0xfe5         	MOVFF	r0x06, POSTDEC1
001718   ffe5
00171a   c007     movff	0x7, 0xfe5         	MOVFF	r0x07, POSTDEC1
00171c   ffe5
00171e   c008     movff	0x8, 0xfe5         	MOVFF	r0x08, POSTDEC1
001720   ffe5
001722   c009     movff	0x9, 0xfe5         	MOVFF	r0x09, POSTDEC1
001724   ffe5
001726   c00a     movff	0xa, 0xfe5         	MOVFF	r0x0a, POSTDEC1
001728   ffe5
00172a   c00b     movff	0xb, 0xfe5         	MOVFF	r0x0b, POSTDEC1
00172c   ffe5
00172e   c00c     movff	0xc, 0xfe5         	MOVFF	r0x0c, POSTDEC1
001730   ffe5
001732   c00d     movff	0xd, 0xfe5         	MOVFF	r0x0d, POSTDEC1
001734   ffe5
001736   c00e     movff	0xe, 0xfe5         	MOVFF	r0x0e, POSTDEC1
001738   ffe5
00173a   c00f     movff	0xf, 0xfe5         	MOVFF	r0x0f, POSTDEC1
00173c   ffe5
00173e   c010     movff	0x10, 0xfe5        	MOVFF	r0x10, POSTDEC1
001740   ffe5
001742   0e02     movlw	0x2                	MOVLW	0x02
001744   cfdb     movff	0xfdb, 0           	MOVFF	PLUSW2, r0x00
001746   f000
001748   0e03     movlw	0x3                	MOVLW	0x03
00174a   cfdb     movff	0xfdb, 0x1         	MOVFF	PLUSW2, r0x01
00174c   f001
00174e   0e04     movlw	0x4                	MOVLW	0x04
001750   cfdb     movff	0xfdb, 0x2         	MOVFF	PLUSW2, r0x02
001752   f002
001754   0e05     movlw	0x5                	MOVLW	0x05
001756   cfdb     movff	0xfdb, 0x3         	MOVFF	PLUSW2, r0x03
001758   f003
                                           ; ;multiply lit val:0x08 by variable r0x03 and store in r0x03
                                           ; ;Unrolled 8 X 8 multiplication
                                           ; ;FIXME: the function does not support result==WREG
                                           ;	.line	236; glcd.c	for (n = 0; n < strlen(s); n++) {
00175a   5003     movf	0x3, 0, 0           	MOVF	r0x03, W
00175c   0d08     mullw	0x8                	MULLW	0x08
00175e   cff3     movff	0xff3, 0x3         	MOVFF	PRODL, r0x03
001760   f003
001762   6a04     clrf	0x4, 0              	CLRF	r0x04
001764   6a05     clrf	0x5, 0              	CLRF	r0x05
                                           _00242_DS_:
001766   5002     movf	0x2, 0, 0           	MOVF	r0x02, W
001768   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
00176a   5001     movf	0x1, 0, 0           	MOVF	r0x01, W
00176c   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
00176e   5000     movf	0, 0, 0             	MOVF	r0x00, W
001770   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
001772   ec41     call	0x2482, 0           	CALL	_strlen
001774   f012
001776   6e06     movwf	0x6, 0             	MOVWF	r0x06
001778   cff3     movff	0xff3, 0x7         	MOVFF	PRODL, r0x07
00177a   f007
00177c   0e03     movlw	0x3                	MOVLW	0x03
00177e   26e1     addwf	0xe1, 0x1, 0       	ADDWF	FSR1L, F
001780   c004     movff	0x4, 0x8           	MOVFF	r0x04, r0x08
001782   f008
001784   6a09     clrf	0x9, 0              	CLRF	r0x09
001786   5009     movf	0x9, 0, 0           	MOVF	r0x09, W
001788   0f80     addlw	0x80               	ADDLW	0x80
00178a   6ef3     movwf	0xf3, 0            	MOVWF	PRODL
00178c   5007     movf	0x7, 0, 0           	MOVF	r0x07, W
00178e   0f80     addlw	0x80               	ADDLW	0x80
001790   5cf3     subwf	0xf3, 0, 0         	SUBWF	PRODL, W
001792   e102     bnz	0x1798               	BNZ	_00258_DS_
001794   5006     movf	0x6, 0, 0           	MOVF	r0x06, W
001796   5c08     subwf	0x8, 0, 0          	SUBWF	r0x08, W
                                           _00258_DS_:
001798   b0d8     btfsc	0xd8, 0, 0         	BTFSC	STATUS, 0
00179a   d06b     bra	0x1872               	BRA	_00246_DS_
                                           ;	.line	237; glcd.c	for (x = 0; x < FONT_WIDTH; x++) {
00179c   5004     movf	0x4, 0, 0           	MOVF	r0x04, W
00179e   2400     addwf	0, 0, 0            	ADDWF	r0x00, W
0017a0   6e06     movwf	0x6, 0             	MOVWF	r0x06
0017a2   6ae8     clrf	0xe8, 0             	CLRF	WREG
0017a4   2001     addwfc	0x1, 0, 0         	ADDWFC	r0x01, W
0017a6   6e07     movwf	0x7, 0             	MOVWF	r0x07
0017a8   6ae8     clrf	0xe8, 0             	CLRF	WREG
0017aa   2002     addwfc	0x2, 0, 0         	ADDWFC	r0x02, W
0017ac   6e08     movwf	0x8, 0             	MOVWF	r0x08
0017ae   6a09     clrf	0x9, 0              	CLRF	r0x09
                                           _00238_DS_:
0017b0   0e06     movlw	0x6                	MOVLW	0x06
0017b2   5c09     subwf	0x9, 0, 0          	SUBWF	r0x09, W
0017b4   b0d8     btfsc	0xd8, 0, 0         	BTFSC	STATUS, 0
0017b6   d059     bra	0x186a               	BRA	_00244_DS_
                                           ;	.line	238; glcd.c	for (y = 0; y < FONT_HEIGHT; y++) {
0017b8   5005     movf	0x5, 0, 0           	MOVF	r0x05, W
0017ba   2409     addwf	0x9, 0, 0          	ADDWF	r0x09, W
0017bc   6e0a     movwf	0xa, 0             	MOVWF	r0x0a
0017be   6a0b     clrf	0xb, 0              	CLRF	r0x0b
                                           _00234_DS_:
0017c0   0e08     movlw	0x8                	MOVLW	0x08
0017c2   5c0b     subwf	0xb, 0, 0          	SUBWF	r0x0b, W
0017c4   b0d8     btfsc	0xd8, 0, 0         	BTFSC	STATUS, 0
0017c6   d04f     bra	0x1866               	BRA	_00240_DS_
                                           ;	.line	239; glcd.c	if ((font8x5[ s[n] ][x] & (1 << y)) >> y) {
0017c8   c006     movff	0x6, 0xfe9         	MOVFF	r0x06, FSR0L
0017ca   ffe9
0017cc   c007     movff	0x7, 0xff3         	MOVFF	r0x07, PRODL
0017ce   fff3
0017d0   5008     movf	0x8, 0, 0           	MOVF	r0x08, W
0017d2   ec6b     call	0x28d6, 0           	CALL	__gptrget1
0017d4   f014
0017d6   6e0c     movwf	0xc, 0             	MOVWF	r0x0c
                                           ; ;multiply lit val:0x06 by variable r0x0c and store in r0x0c
                                           ; ;Unrolled 8 X 8 multiplication
                                           ; ;FIXME: the function does not support result==WREG
0017d8   500c     movf	0xc, 0, 0           	MOVF	r0x0c, W
0017da   0d06     mullw	0x6                	MULLW	0x06
0017dc   cff3     movff	0xff3, 0xc         	MOVFF	PRODL, r0x0c
0017de   f00c
0017e0   cff4     movff	0xff4, 0xd         	MOVFF	PRODH, r0x0d
0017e2   f00d
0017e4   6a0e     clrf	0xe, 0              	CLRF	r0x0e
0017e6   0e42     movlw	0x42               	MOVLW	LOW(_font8x5)
0017e8   260c     addwf	0xc, 0x1, 0        	ADDWF	r0x0c, F
0017ea   0e08     movlw	0x8                	MOVLW	HIGH(_font8x5)
0017ec   220d     addwfc	0xd, 0x1, 0       	ADDWFC	r0x0d, F
0017ee   0e00     movlw	0                  	MOVLW	UPPER(_font8x5)
0017f0   220e     addwfc	0xe, 0x1, 0       	ADDWFC	r0x0e, F
0017f2   5009     movf	0x9, 0, 0           	MOVF	r0x09, W
0017f4   260c     addwf	0xc, 0x1, 0        	ADDWF	r0x0c, F
0017f6   6ae8     clrf	0xe8, 0             	CLRF	WREG
0017f8   220d     addwfc	0xd, 0x1, 0       	ADDWFC	r0x0d, F
0017fa   6ae8     clrf	0xe8, 0             	CLRF	WREG
0017fc   220e     addwfc	0xe, 0x1, 0       	ADDWFC	r0x0e, F
0017fe   0e01     movlw	0x1                	MOVLW	0x01
001800   6e0f     movwf	0xf, 0             	MOVWF	r0x0f
001802   0e00     movlw	0                  	MOVLW	0x00
001804   6e10     movwf	0x10, 0            	MOVWF	r0x10
001806   500b     movf	0xb, 0, 0           	MOVF	r0x0b, W
001808   e006     bz	0x1816                	BZ	_00261_DS_
00180a   6ce8     negf	0xe8, 0             	NEGF	WREG
00180c   90d8     bcf	0xd8, 0, 0           	BCF	STATUS, 0
                                           _00262_DS_:
00180e   360f     rlcf	0xf, 0x1, 0         	RLCF	r0x0f, F
001810   3610     rlcf	0x10, 0x1, 0        	RLCF	r0x10, F
001812   0f01     addlw	0x1                	ADDLW	0x01
001814   e3fc     bnc	0x180e               	BNC	_00262_DS_
                                           _00261_DS_:
001816   c00c     movff	0xc, 0xff6         	MOVFF	r0x0c, TBLPTRL
001818   fff6
00181a   c00d     movff	0xd, 0xff7         	MOVFF	r0x0d, TBLPTRH
00181c   fff7
00181e   c00e     movff	0xe, 0xff8         	MOVFF	r0x0e, TBLPTRU
001820   fff8
001822   0009     tblrd	*+                 	TBLRD*+	
001824   cff5     movff	0xff5, 0xc         	MOVFF	TABLAT, r0x0c
001826   f00c
001828   6a0d     clrf	0xd, 0              	CLRF	r0x0d
00182a   500c     movf	0xc, 0, 0           	MOVF	r0x0c, W
00182c   160f     andwf	0xf, 0x1, 0        	ANDWF	r0x0f, F
00182e   500d     movf	0xd, 0, 0           	MOVF	r0x0d, W
001830   1610     andwf	0x10, 0x1, 0       	ANDWF	r0x10, F
001832   500b     movf	0xb, 0, 0           	MOVF	r0x0b, W
001834   e008     bz	0x1846                	BZ	_00264_DS_
001836   6ce8     negf	0xe8, 0             	NEGF	WREG
001838   90d8     bcf	0xd8, 0, 0           	BCF	STATUS, 0
                                           _00265_DS_:
00183a   be10     btfsc	0x10, 0x7, 0       	BTFSC	r0x10, 7
00183c   80d8     bsf	0xd8, 0, 0           	BSF	STATUS, 0
00183e   3210     rrcf	0x10, 0x1, 0        	RRCF	r0x10, F
001840   320f     rrcf	0xf, 0x1, 0         	RRCF	r0x0f, F
001842   0f01     addlw	0x1                	ADDLW	0x01
001844   e3fa     bnc	0x183a               	BNC	_00265_DS_
                                           _00264_DS_:
001846   500f     movf	0xf, 0, 0           	MOVF	r0x0f, W
001848   1010     iorwf	0x10, 0, 0         	IORWF	r0x10, W
00184a   e00b     bz	0x1862                	BZ	_00236_DS_
                                           ;	.line	240; glcd.c	lcd_plotpixel(x + n * FONT_WIDTH, y + line * FONT_HEIGHT);
00184c   5003     movf	0x3, 0, 0           	MOVF	r0x03, W
00184e   240b     addwf	0xb, 0, 0          	ADDWF	r0x0b, W
001850   6e0c     movwf	0xc, 0             	MOVWF	r0x0c
001852   500c     movf	0xc, 0, 0           	MOVF	r0x0c, W
001854   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
001856   500a     movf	0xa, 0, 0           	MOVF	r0x0a, W
001858   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
00185a   ec6b     call	0x22d6, 0           	CALL	_lcd_plotpixel
00185c   f011
00185e   0e02     movlw	0x2                	MOVLW	0x02
001860   26e1     addwf	0xe1, 0x1, 0       	ADDWF	FSR1L, F
                                           _00236_DS_:
                                           ;	.line	238; glcd.c	for (y = 0; y < FONT_HEIGHT; y++) {
001862   2a0b     incf	0xb, 0x1, 0         	INCF	r0x0b, F
001864   d7ad     bra	0x17c0               	BRA	_00234_DS_
                                           _00240_DS_:
                                           ;	.line	237; glcd.c	for (x = 0; x < FONT_WIDTH; x++) {
001866   2a09     incf	0x9, 0x1, 0         	INCF	r0x09, F
001868   d7a3     bra	0x17b0               	BRA	_00238_DS_
                                           _00244_DS_:
                                           ;	.line	236; glcd.c	for (n = 0; n < strlen(s); n++) {
00186a   0e06     movlw	0x6                	MOVLW	0x06
00186c   2605     addwf	0x5, 0x1, 0        	ADDWF	r0x05, F
00186e   2a04     incf	0x4, 0x1, 0         	INCF	r0x04, F
001870   d77a     bra	0x1766               	BRA	_00242_DS_
                                           _00246_DS_:
001872   cfe4     movff	0xfe4, 0x10        	MOVFF	PREINC1, r0x10
001874   f010
001876   cfe4     movff	0xfe4, 0xf         	MOVFF	PREINC1, r0x0f
001878   f00f
00187a   cfe4     movff	0xfe4, 0xe         	MOVFF	PREINC1, r0x0e
00187c   f00e
00187e   cfe4     movff	0xfe4, 0xd         	MOVFF	PREINC1, r0x0d
001880   f00d
001882   cfe4     movff	0xfe4, 0xc         	MOVFF	PREINC1, r0x0c
001884   f00c
001886   cfe4     movff	0xfe4, 0xb         	MOVFF	PREINC1, r0x0b
001888   f00b
00188a   cfe4     movff	0xfe4, 0xa         	MOVFF	PREINC1, r0x0a
00188c   f00a
00188e   cfe4     movff	0xfe4, 0x9         	MOVFF	PREINC1, r0x09
001890   f009
001892   cfe4     movff	0xfe4, 0x8         	MOVFF	PREINC1, r0x08
001894   f008
001896   cfe4     movff	0xfe4, 0x7         	MOVFF	PREINC1, r0x07
001898   f007
00189a   cfe4     movff	0xfe4, 0x6         	MOVFF	PREINC1, r0x06
00189c   f006
00189e   cfe4     movff	0xfe4, 0x5         	MOVFF	PREINC1, r0x05
0018a0   f005
0018a2   cfe4     movff	0xfe4, 0x4         	MOVFF	PREINC1, r0x04
0018a4   f004
0018a6   cfe4     movff	0xfe4, 0x3         	MOVFF	PREINC1, r0x03
0018a8   f003
0018aa   cfe4     movff	0xfe4, 0x2         	MOVFF	PREINC1, r0x02
0018ac   f002
0018ae   cfe4     movff	0xfe4, 0x1         	MOVFF	PREINC1, r0x01
0018b0   f001
0018b2   cfe4     movff	0xfe4, 0           	MOVFF	PREINC1, r0x00
0018b4   f000
0018b6   cfe4     movff	0xfe4, 0xfd9       	MOVFF	PREINC1, FSR2L
0018b8   ffd9
0018ba   0012     return	0                 	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_glcd__lcd_plotpixel	code
                                           _lcd_plotpixel:
                                           ;	.line	209; glcd.c	void lcd_plotpixel(unsigned char rx, unsigned char ry) {
0022d6   cfd9     movff	0xfd9, 0xfe5       	MOVFF	FSR2L, POSTDEC1
0022d8   ffe5
0022da   cfe1     movff	0xfe1, 0xfd9       	MOVFF	FSR1L, FSR2L
0022dc   ffd9
0022de   c000     movff	0, 0xfe5           	MOVFF	r0x00, POSTDEC1
0022e0   ffe5
0022e2   c001     movff	0x1, 0xfe5         	MOVFF	r0x01, POSTDEC1
0022e4   ffe5
0022e6   c002     movff	0x2, 0xfe5         	MOVFF	r0x02, POSTDEC1
0022e8   ffe5
0022ea   0e02     movlw	0x2                	MOVLW	0x02
0022ec   cfdb     movff	0xfdb, 0           	MOVFF	PLUSW2, r0x00
0022ee   f000
0022f0   0e03     movlw	0x3                	MOVLW	0x03
0022f2   cfdb     movff	0xfdb, 0x1         	MOVFF	PLUSW2, r0x01
0022f4   f001
                                           ;	.line	215; glcd.c	if (rx & 64) {
0022f6   ac00     btfss	0, 0x6, 0          	BTFSS	r0x00, 6
0022f8   d006     bra	0x2306               	BRA	_00218_DS_
                                           ;	.line	216; glcd.c	lcd_selectside(RIGHT);
0022fa   0e02     movlw	0x2                	MOVLW	0x02
0022fc   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
0022fe   ec86     call	0x270c, 0           	CALL	_lcd_selectside
002300   f013
002302   2ae1     incf	0xe1, 0x1, 0        	INCF	FSR1L, F
002304   d005     bra	0x2310               	BRA	_00219_DS_
                                           _00218_DS_:
                                           ;	.line	219; glcd.c	lcd_selectside(LEFT);
002306   0e01     movlw	0x1                	MOVLW	0x01
002308   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
00230a   ec86     call	0x270c, 0           	CALL	_lcd_selectside
00230c   f013
00230e   2ae1     incf	0xe1, 0x1, 0        	INCF	FSR1L, F
                                           _00219_DS_:
                                           ;	.line	222; glcd.c	lcd_setpage( ry >> 3);
002310   3801     swapf	0x1, 0, 0          	SWAPF	r0x01, W
002312   44e8     rlncf	0xe8, 0, 0         	RLNCF	WREG, W
002314   0b1f     andlw	0x1f               	ANDLW	0x1f
002316   6e02     movwf	0x2, 0             	MOVWF	r0x02
002318   5002     movf	0x2, 0, 0           	MOVF	r0x02, W
00231a   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
00231c   ecb5     call	0x276a, 0           	CALL	_lcd_setpage
00231e   f013
002320   2ae1     incf	0xe1, 0x1, 0        	INCF	FSR1L, F
                                           ;	.line	223; glcd.c	lcd_setyaddr( rx & 0b00111111);
002322   0e3f     movlw	0x3f               	MOVLW	0x3f
002324   1600     andwf	0, 0x1, 0          	ANDWF	r0x00, F
002326   5000     movf	0, 0, 0             	MOVF	r0x00, W
002328   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
00232a   ec3b     call	0x2676, 0           	CALL	_lcd_setyaddr
00232c   f013
00232e   2ae1     incf	0xe1, 0x1, 0        	INCF	FSR1L, F
                                           ;	.line	224; glcd.c	d = lcd_read(); // dummy read needed here
002330   ecf9     call	0x27f2, 0           	CALL	_lcd_read
002332   f013
                                           ;	.line	225; glcd.c	d = lcd_read();
002334   ecf9     call	0x27f2, 0           	CALL	_lcd_read
002336   f013
002338   6e02     movwf	0x2, 0             	MOVWF	r0x02
                                           ;	.line	226; glcd.c	lcd_setyaddr( rx & 0b00111111); 
00233a   5000     movf	0, 0, 0             	MOVF	r0x00, W
00233c   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
00233e   ec3b     call	0x2676, 0           	CALL	_lcd_setyaddr
002340   f013
002342   2ae1     incf	0xe1, 0x1, 0        	INCF	FSR1L, F
                                           ;	.line	227; glcd.c	lcd_write (d | (1 << (ry & 0b111)));
002344   0e07     movlw	0x7                	MOVLW	0x07
002346   1601     andwf	0x1, 0x1, 0        	ANDWF	r0x01, F
002348   0e01     movlw	0x1                	MOVLW	0x01
00234a   6e00     movwf	0, 0               	MOVWF	r0x00
00234c   5001     movf	0x1, 0, 0           	MOVF	r0x01, W
00234e   e005     bz	0x235a                	BZ	_00226_DS_
002350   6ce8     negf	0xe8, 0             	NEGF	WREG
002352   90d8     bcf	0xd8, 0, 0           	BCF	STATUS, 0
                                           _00227_DS_:
002354   3600     rlcf	0, 0x1, 0           	RLCF	r0x00, F
002356   0f01     addlw	0x1                	ADDLW	0x01
002358   e3fd     bnc	0x2354               	BNC	_00227_DS_
                                           _00226_DS_:
00235a   5000     movf	0, 0, 0             	MOVF	r0x00, W
00235c   1202     iorwf	0x2, 0x1, 0        	IORWF	r0x02, F
00235e   5002     movf	0x2, 0, 0           	MOVF	r0x02, W
002360   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
002362   ec9e     call	0x273c, 0           	CALL	_lcd_write
002364   f013
002366   2ae1     incf	0xe1, 0x1, 0        	INCF	FSR1L, F
002368   cfe4     movff	0xfe4, 0x2         	MOVFF	PREINC1, r0x02
00236a   f002
00236c   cfe4     movff	0xfe4, 0x1         	MOVFF	PREINC1, r0x01
00236e   f001
002370   cfe4     movff	0xfe4, 0           	MOVFF	PREINC1, r0x00
002372   f000
002374   cfe4     movff	0xfe4, 0xfd9       	MOVFF	PREINC1, FSR2L
002376   ffd9
002378   0012     return	0                 	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_glcd__lcd_read	code
                                           _lcd_read:
                                           ;	.line	194; glcd.c	unsigned char lcd_read (void) {
0027f2   cfd9     movff	0xfd9, 0xfe5       	MOVFF	FSR2L, POSTDEC1
0027f4   ffe5
0027f6   cfe1     movff	0xfe1, 0xfd9       	MOVFF	FSR1L, FSR2L
0027f8   ffd9
0027fa   c000     movff	0, 0xfe5           	MOVFF	r0x00, POSTDEC1
0027fc   ffe5
                                           ;	.line	197; glcd.c	LCD_TRIS = 0xFF;
0027fe   0eff     movlw	0xff               	MOVLW	0xff
002800   6e95     movwf	0x95, 0            	MOVWF	_TRISD
                                           ;	.line	198; glcd.c	RW = 1;	// read
002802   8284     bsf	0x84, 0x1, 0         	BSF	_PORTEbits, 1
                                           ;	.line	199; glcd.c	DI = 1;	// data
002804   8084     bsf	0x84, 0, 0           	BSF	_PORTEbits, 0
                                           ;	.line	201; glcd.c	lcd_enable();
002806   ec8a     call	0x2914, 0           	CALL	_lcd_enable
002808   f014
                                           ;	.line	202; glcd.c	d = LCD_DATA;
00280a   cf83     movff	0xf83, 0           	MOVFF	_PORTD, r0x00
00280c   f000
                                           ;	.line	203; glcd.c	LCD_TRIS = 0x00;
00280e   6a95     clrf	0x95, 0             	CLRF	_TRISD
                                           ;	.line	205; glcd.c	return d;
002810   5000     movf	0, 0, 0             	MOVF	r0x00, W
002812   cfe4     movff	0xfe4, 0           	MOVFF	PREINC1, r0x00
002814   f000
002816   cfe4     movff	0xfe4, 0xfd9       	MOVFF	PREINC1, FSR2L
002818   ffd9
00281a   0012     return	0                 	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_glcd__lcd_selectside	code
                                           _lcd_selectside:
                                           ;	.line	176; glcd.c	void lcd_selectside(unsigned char sides) {
00270c   cfd9     movff	0xfd9, 0xfe5       	MOVFF	FSR2L, POSTDEC1
00270e   ffe5
002710   cfe1     movff	0xfe1, 0xfd9       	MOVFF	FSR1L, FSR2L
002712   ffd9
002714   c000     movff	0, 0xfe5           	MOVFF	r0x00, POSTDEC1
002716   ffe5
002718   0e02     movlw	0x2                	MOVLW	0x02
00271a   cfdb     movff	0xfdb, 0           	MOVFF	PLUSW2, r0x00
00271c   f000
                                           ;	.line	178; glcd.c	if (sides & LEFT) {
00271e   a000     btfss	0, 0, 0            	BTFSS	r0x00, 0
002720   d002     bra	0x2726               	BRA	_00197_DS_
                                           ;	.line	179; glcd.c	CS1 = 0;
002722   9082     bcf	0x82, 0, 0           	BCF	_PORTCbits, 0
002724   d001     bra	0x2728               	BRA	_00198_DS_
                                           _00197_DS_:
                                           ;	.line	182; glcd.c	CS1 = 1;
002726   8082     bsf	0x82, 0, 0           	BSF	_PORTCbits, 0
                                           _00198_DS_:
                                           ;	.line	185; glcd.c	if (sides & RIGHT) {
002728   a200     btfss	0, 0x1, 0          	BTFSS	r0x00, 1
00272a   d002     bra	0x2730               	BRA	_00200_DS_
                                           ;	.line	186; glcd.c	CS2 = 0;
00272c   9282     bcf	0x82, 0x1, 0         	BCF	_PORTCbits, 1
00272e   d001     bra	0x2732               	BRA	_00202_DS_
                                           _00200_DS_:
                                           ;	.line	189; glcd.c	CS2 = 1;
002730   8282     bsf	0x82, 0x1, 0         	BSF	_PORTCbits, 1
                                           _00202_DS_:
002732   cfe4     movff	0xfe4, 0           	MOVFF	PREINC1, r0x00
002734   f000
002736   cfe4     movff	0xfe4, 0xfd9       	MOVFF	PREINC1, FSR2L
002738   ffd9
00273a   0012     return	0                 	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_glcd__lcd_write	code
                                           _lcd_write:
                                           ;	.line	166; glcd.c	void lcd_write (unsigned char d) {
00273c   cfd9     movff	0xfd9, 0xfe5       	MOVFF	FSR2L, POSTDEC1
00273e   ffe5
002740   cfe1     movff	0xfe1, 0xfd9       	MOVFF	FSR1L, FSR2L
002742   ffd9
002744   c000     movff	0, 0xfe5           	MOVFF	r0x00, POSTDEC1
002746   ffe5
002748   0e02     movlw	0x2                	MOVLW	0x02
00274a   cfdb     movff	0xfdb, 0           	MOVFF	PLUSW2, r0x00
00274c   f000
                                           ;	.line	167; glcd.c	lcd_waitbusy();
00274e   ec35     call	0x286a, 0           	CALL	_lcd_waitbusy
002750   f014
                                           ;	.line	168; glcd.c	DI = 1;	// data
002752   8084     bsf	0x84, 0, 0           	BSF	_PORTEbits, 0
                                           ;	.line	169; glcd.c	RW = 0;	// write
002754   9284     bcf	0x84, 0x1, 0         	BCF	_PORTEbits, 1
                                           ;	.line	170; glcd.c	LCD_TRIS = 0; 
002756   6a95     clrf	0x95, 0             	CLRF	_TRISD
                                           ;	.line	171; glcd.c	LCD_DATA = d;
002758   c000     movff	0, 0xf83           	MOVFF	r0x00, _PORTD
00275a   ff83
                                           ;	.line	172; glcd.c	lcd_enable();
00275c   ec8a     call	0x2914, 0           	CALL	_lcd_enable
00275e   f014
002760   cfe4     movff	0xfe4, 0           	MOVFF	PREINC1, r0x00
002762   f000
002764   cfe4     movff	0xfe4, 0xfd9       	MOVFF	PREINC1, FSR2L
002766   ffd9
002768   0012     return	0                 	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_glcd__lcd_waitbusy	code
                                           _lcd_waitbusy:
                                           ;	.line	159; glcd.c	void lcd_waitbusy(void) {
00286a   cfd9     movff	0xfd9, 0xfe5       	MOVFF	FSR2L, POSTDEC1
00286c   ffe5
00286e   cfe1     movff	0xfe1, 0xfd9       	MOVFF	FSR1L, FSR2L
002870   ffd9
002872   c000     movff	0, 0xfe5           	MOVFF	r0x00, POSTDEC1
002874   ffe5
                                           _00179_DS_:
                                           ;	.line	160; glcd.c	while (lcd_status() & 0b10000000) {
002876   ecea     call	0x25d4, 0           	CALL	_lcd_status
002878   f012
00287a   6e00     movwf	0, 0               	MOVWF	r0x00
00287c   ae00     btfss	0, 0x7, 0          	BTFSS	r0x00, 7
00287e   d003     bra	0x2886               	BRA	_00182_DS_
                                           ;	.line	161; glcd.c	delay_500us();
002880   ec21     call	0xe42, 0            	CALL	_delay_500us
002882   f007
002884   d7f8     bra	0x2876               	BRA	_00179_DS_
                                           _00182_DS_:
002886   cfe4     movff	0xfe4, 0           	MOVFF	PREINC1, r0x00
002888   f000
00288a   cfe4     movff	0xfe4, 0xfd9       	MOVFF	PREINC1, FSR2L
00288c   ffd9
00288e   0012     return	0                 	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_glcd__lcd_setyaddr	code
                                           _lcd_setyaddr:
                                           ;	.line	151; glcd.c	void lcd_setyaddr(unsigned char y) {
002676   cfd9     movff	0xfd9, 0xfe5       	MOVFF	FSR2L, POSTDEC1
002678   ffe5
00267a   cfe1     movff	0xfe1, 0xfd9       	MOVFF	FSR1L, FSR2L
00267c   ffd9
00267e   c000     movff	0, 0xfe5           	MOVFF	r0x00, POSTDEC1
002680   ffe5
002682   0e02     movlw	0x2                	MOVLW	0x02
002684   cfdb     movff	0xfdb, 0           	MOVFF	PLUSW2, r0x00
002686   f000
                                           ;	.line	152; glcd.c	lcd_waitbusy();
002688   ec35     call	0x286a, 0           	CALL	_lcd_waitbusy
00268a   f014
                                           ;	.line	153; glcd.c	DI = 0; RW = 0;
00268c   9084     bcf	0x84, 0, 0           	BCF	_PORTEbits, 0
00268e   9284     bcf	0x84, 0x1, 0         	BCF	_PORTEbits, 1
                                           ;	.line	154; glcd.c	LCD_DATA = 0b01000000 | (y & 0b00111111);
002690   0e3f     movlw	0x3f               	MOVLW	0x3f
002692   1600     andwf	0, 0x1, 0          	ANDWF	r0x00, F
002694   0e40     movlw	0x40               	MOVLW	0x40
002696   1000     iorwf	0, 0, 0            	IORWF	r0x00, W
002698   6e83     movwf	0x83, 0            	MOVWF	_PORTD
                                           ;	.line	155; glcd.c	lcd_enable();
00269a   ec8a     call	0x2914, 0           	CALL	_lcd_enable
00269c   f014
00269e   cfe4     movff	0xfe4, 0           	MOVFF	PREINC1, r0x00
0026a0   f000
0026a2   cfe4     movff	0xfe4, 0xfd9       	MOVFF	PREINC1, FSR2L
0026a4   ffd9
0026a6   0012     return	0                 	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_glcd__lcd_setpage	code
                                           _lcd_setpage:
                                           ;	.line	142; glcd.c	void lcd_setpage(unsigned char page) {
00276a   cfd9     movff	0xfd9, 0xfe5       	MOVFF	FSR2L, POSTDEC1
00276c   ffe5
00276e   cfe1     movff	0xfe1, 0xfd9       	MOVFF	FSR1L, FSR2L
002770   ffd9
002772   c000     movff	0, 0xfe5           	MOVFF	r0x00, POSTDEC1
002774   ffe5
002776   0e02     movlw	0x2                	MOVLW	0x02
002778   cfdb     movff	0xfdb, 0           	MOVFF	PLUSW2, r0x00
00277a   f000
                                           ;	.line	143; glcd.c	lcd_waitbusy();
00277c   ec35     call	0x286a, 0           	CALL	_lcd_waitbusy
00277e   f014
                                           ;	.line	144; glcd.c	DI = 0; RW = 0; 
002780   9084     bcf	0x84, 0, 0           	BCF	_PORTEbits, 0
002782   9284     bcf	0x84, 0x1, 0         	BCF	_PORTEbits, 1
                                           ;	.line	145; glcd.c	LCD_DATA = 0b10111000 | page;
002784   0eb8     movlw	0xb8               	MOVLW	0xb8
002786   1000     iorwf	0, 0, 0            	IORWF	r0x00, W
002788   6e83     movwf	0x83, 0            	MOVWF	_PORTD
                                           ;	.line	146; glcd.c	lcd_enable();
00278a   ec8a     call	0x2914, 0           	CALL	_lcd_enable
00278c   f014
00278e   cfe4     movff	0xfe4, 0           	MOVFF	PREINC1, r0x00
002790   f000
002792   cfe4     movff	0xfe4, 0xfd9       	MOVFF	PREINC1, FSR2L
002794   ffd9
002796   0012     return	0                 	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_glcd__lcd_cls	code
                                           _lcd_cls:
                                           ;	.line	95; glcd.c	void lcd_cls(void) {
00222c   cfd9     movff	0xfd9, 0xfe5       	MOVFF	FSR2L, POSTDEC1
00222e   ffe5
002230   cfe1     movff	0xfe1, 0xfd9       	MOVFF	FSR1L, FSR2L
002232   ffd9
002234   c000     movff	0, 0xfe5           	MOVFF	r0x00, POSTDEC1
002236   ffe5
002238   c001     movff	0x1, 0xfe5         	MOVFF	r0x01, POSTDEC1
00223a   ffe5
                                           ;	.line	99; glcd.c	lcd_selectside(LEFT);
00223c   0e01     movlw	0x1                	MOVLW	0x01
00223e   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
002240   ec86     call	0x270c, 0           	CALL	_lcd_selectside
002242   f013
002244   2ae1     incf	0xe1, 0x1, 0        	INCF	FSR1L, F
                                           ;	.line	100; glcd.c	for (x=0; x<8; x++) {
002246   6a00     clrf	0, 0                	CLRF	r0x00
                                           _00140_DS_:
002248   0e08     movlw	0x8                	MOVLW	0x08
00224a   5c00     subwf	0, 0, 0            	SUBWF	r0x00, W
00224c   e218     bc	0x227e                	BC	_00143_DS_
                                           ;	.line	102; glcd.c	lcd_setpage(x);
00224e   5000     movf	0, 0, 0             	MOVF	r0x00, W
002250   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
002252   ecb5     call	0x276a, 0           	CALL	_lcd_setpage
002254   f013
002256   2ae1     incf	0xe1, 0x1, 0        	INCF	FSR1L, F
                                           ;	.line	105; glcd.c	lcd_setyaddr(0);
002258   0e00     movlw	0                  	MOVLW	0x00
00225a   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
00225c   ec3b     call	0x2676, 0           	CALL	_lcd_setyaddr
00225e   f013
002260   2ae1     incf	0xe1, 0x1, 0        	INCF	FSR1L, F
                                           ;	.line	108; glcd.c	LCD_DATA = 0; RW = 0; DI = 1;
002262   6a83     clrf	0x83, 0             	CLRF	_PORTD
002264   9284     bcf	0x84, 0x1, 0         	BCF	_PORTEbits, 1
002266   8084     bsf	0x84, 0, 0           	BSF	_PORTEbits, 0
                                           ;	.line	111; glcd.c	for (y=0; y<64; y++) {
002268   0e40     movlw	0x40               	MOVLW	0x40
00226a   6e01     movwf	0x1, 0             	MOVWF	r0x01
                                           _00139_DS_:
                                           ;	.line	112; glcd.c	lcd_enable(); 
00226c   ec8a     call	0x2914, 0           	CALL	_lcd_enable
00226e   f014
                                           ;	.line	113; glcd.c	delay_20us();
002270   ec5a     call	0x28b4, 0           	CALL	_delay_20us
002272   f014
002274   0601     decf	0x1, 0x1, 0         	DECF	r0x01, F
                                           ;	.line	111; glcd.c	for (y=0; y<64; y++) {
002276   5001     movf	0x1, 0, 0           	MOVF	r0x01, W
002278   e1f9     bnz	0x226c               	BNZ	_00139_DS_
                                           ;	.line	100; glcd.c	for (x=0; x<8; x++) {
00227a   2a00     incf	0, 0x1, 0           	INCF	r0x00, F
00227c   d7e5     bra	0x2248               	BRA	_00140_DS_
                                           _00143_DS_:
                                           ;	.line	118; glcd.c	lcd_selectside(RIGHT);
00227e   0e02     movlw	0x2                	MOVLW	0x02
002280   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
002282   ec86     call	0x270c, 0           	CALL	_lcd_selectside
002284   f013
002286   2ae1     incf	0xe1, 0x1, 0        	INCF	FSR1L, F
                                           ;	.line	119; glcd.c	for (x=0; x<8; x++) {
002288   6a00     clrf	0, 0                	CLRF	r0x00
                                           _00147_DS_:
00228a   0e08     movlw	0x8                	MOVLW	0x08
00228c   5c00     subwf	0, 0, 0            	SUBWF	r0x00, W
00228e   e217     bc	0x22be                	BC	_00150_DS_
                                           ;	.line	121; glcd.c	lcd_setpage(x);
002290   5000     movf	0, 0, 0             	MOVF	r0x00, W
002292   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
002294   ecb5     call	0x276a, 0           	CALL	_lcd_setpage
002296   f013
002298   2ae1     incf	0xe1, 0x1, 0        	INCF	FSR1L, F
                                           ;	.line	124; glcd.c	lcd_setyaddr(0);
00229a   0e00     movlw	0                  	MOVLW	0x00
00229c   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
00229e   ec3b     call	0x2676, 0           	CALL	_lcd_setyaddr
0022a0   f013
0022a2   2ae1     incf	0xe1, 0x1, 0        	INCF	FSR1L, F
                                           ;	.line	127; glcd.c	LCD_DATA = 0; RW = 0; DI = 1;
0022a4   6a83     clrf	0x83, 0             	CLRF	_PORTD
0022a6   9284     bcf	0x84, 0x1, 0         	BCF	_PORTEbits, 1
0022a8   8084     bsf	0x84, 0, 0           	BSF	_PORTEbits, 0
                                           ;	.line	130; glcd.c	for (y=0; y<64; y++) {
0022aa   0e40     movlw	0x40               	MOVLW	0x40
0022ac   6e01     movwf	0x1, 0             	MOVWF	r0x01
                                           _00146_DS_:
                                           ;	.line	131; glcd.c	lcd_enable(); 
0022ae   ec8a     call	0x2914, 0           	CALL	_lcd_enable
0022b0   f014
                                           ;	.line	132; glcd.c	delay_20us();
0022b2   ec5a     call	0x28b4, 0           	CALL	_delay_20us
0022b4   f014
0022b6   2e01     decfsz	0x1, 0x1, 0       	DECFSZ	r0x01, F
0022b8   d7fa     bra	0x22ae               	BRA	_00146_DS_
                                           ;	.line	119; glcd.c	for (x=0; x<8; x++) {
0022ba   2a00     incf	0, 0x1, 0           	INCF	r0x00, F
0022bc   d7e6     bra	0x228a               	BRA	_00147_DS_
                                           _00150_DS_:
                                           ;	.line	137; glcd.c	lcd_selectside(LEFT);
0022be   0e01     movlw	0x1                	MOVLW	0x01
0022c0   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
0022c2   ec86     call	0x270c, 0           	CALL	_lcd_selectside
0022c4   f013
0022c6   2ae1     incf	0xe1, 0x1, 0        	INCF	FSR1L, F
0022c8   cfe4     movff	0xfe4, 0x1         	MOVFF	PREINC1, r0x01
0022ca   f001
0022cc   cfe4     movff	0xfe4, 0           	MOVFF	PREINC1, r0x00
0022ce   f000
0022d0   cfe4     movff	0xfe4, 0xfd9       	MOVFF	PREINC1, FSR2L
0022d2   ffd9
0022d4   0012     return	0                 	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_glcd__lcd_screenon	code
                                           _lcd_screenon:
                                           ;	.line	83; glcd.c	void lcd_screenon(unsigned char on) {
002642   cfd9     movff	0xfd9, 0xfe5       	MOVFF	FSR2L, POSTDEC1
002644   ffe5
002646   cfe1     movff	0xfe1, 0xfd9       	MOVFF	FSR1L, FSR2L
002648   ffd9
00264a   c000     movff	0, 0xfe5           	MOVFF	r0x00, POSTDEC1
00264c   ffe5
00264e   0e02     movlw	0x2                	MOVLW	0x02
002650   cfdb     movff	0xfdb, 0           	MOVFF	PLUSW2, r0x00
002652   f000
                                           ;	.line	85; glcd.c	CS1 = 0;
002654   9082     bcf	0x82, 0, 0           	BCF	_PORTCbits, 0
                                           ;	.line	86; glcd.c	CS2 = 0;
002656   9282     bcf	0x82, 0x1, 0         	BCF	_PORTCbits, 1
                                           ;	.line	87; glcd.c	RW = 0;
002658   9284     bcf	0x84, 0x1, 0         	BCF	_PORTEbits, 1
                                           ;	.line	88; glcd.c	DI = 0;
00265a   9084     bcf	0x84, 0, 0           	BCF	_PORTEbits, 0
                                           ;	.line	89; glcd.c	LCD_TRIS = 0;	// all outputs	
00265c   6a95     clrf	0x95, 0             	CLRF	_TRISD
                                           ;	.line	90; glcd.c	LATD = 0b00111110 | (on & 0b00000001);	// main screen turn on!
00265e   0e01     movlw	0x1                	MOVLW	0x01
002660   1600     andwf	0, 0x1, 0          	ANDWF	r0x00, F
002662   0e3e     movlw	0x3e               	MOVLW	0x3e
002664   1000     iorwf	0, 0, 0            	IORWF	r0x00, W
002666   6e8c     movwf	0x8c, 0            	MOVWF	_LATD
                                           ;	.line	91; glcd.c	lcd_enable();
002668   ec8a     call	0x2914, 0           	CALL	_lcd_enable
00266a   f014
00266c   cfe4     movff	0xfe4, 0           	MOVFF	PREINC1, r0x00
00266e   f000
002670   cfe4     movff	0xfe4, 0xfd9       	MOVFF	PREINC1, FSR2L
002672   ffd9
002674   0012     return	0                 	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_glcd__lcd_reset	code
                                           _lcd_reset:
                                           ;	.line	64; glcd.c	void lcd_reset(void) {
0026a8   cfd9     movff	0xfd9, 0xfe5       	MOVFF	FSR2L, POSTDEC1
0026aa   ffe5
0026ac   cfe1     movff	0xfe1, 0xfd9       	MOVFF	FSR1L, FSR2L
0026ae   ffd9
0026b0   c000     movff	0, 0xfe5           	MOVFF	r0x00, POSTDEC1
0026b2   ffe5
                                           ;	.line	71; glcd.c	delay_500us();	
0026b4   ec21     call	0xe42, 0            	CALL	_delay_500us
0026b6   f007
                                           ;	.line	72; glcd.c	RESET = 1;
0026b8   8a82     bsf	0x82, 0x5, 0         	BSF	_PORTCbits, 5
                                           ;	.line	73; glcd.c	delay_500us();
0026ba   ec21     call	0xe42, 0            	CALL	_delay_500us
0026bc   f007
                                           ;	.line	74; glcd.c	RESET = 0;
0026be   9a82     bcf	0x82, 0x5, 0         	BCF	_PORTCbits, 5
                                           _00120_DS_:
                                           ;	.line	77; glcd.c	while (lcd_status() & 0b00010000) {
0026c0   ecea     call	0x25d4, 0           	CALL	_lcd_status
0026c2   f012
0026c4   6e00     movwf	0, 0               	MOVWF	r0x00
0026c6   a800     btfss	0, 0x4, 0          	BTFSS	r0x00, 4
0026c8   d003     bra	0x26d0               	BRA	_00123_DS_
                                           ;	.line	78; glcd.c	delay_500us();
0026ca   ec21     call	0xe42, 0            	CALL	_delay_500us
0026cc   f007
0026ce   d7f8     bra	0x26c0               	BRA	_00120_DS_
                                           _00123_DS_:
0026d0   cfe4     movff	0xfe4, 0           	MOVFF	PREINC1, r0x00
0026d2   f000
0026d4   cfe4     movff	0xfe4, 0xfd9       	MOVFF	PREINC1, FSR2L
0026d6   ffd9
0026d8   0012     return	0                 	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_glcd__lcd_status	code
                                           _lcd_status:
                                           ;	.line	41; glcd.c	unsigned char lcd_status(void) {
0025d4   cfd9     movff	0xfd9, 0xfe5       	MOVFF	FSR2L, POSTDEC1
0025d6   ffe5
0025d8   cfe1     movff	0xfe1, 0xfd9       	MOVFF	FSR1L, FSR2L
0025da   ffd9
0025dc   c000     movff	0, 0xfe5           	MOVFF	r0x00, POSTDEC1
0025de   ffe5
0025e0   c001     movff	0x1, 0xfe5         	MOVFF	r0x01, POSTDEC1
0025e2   ffe5
                                           ;	.line	48; glcd.c	_lcd_tris = LCD_TRIS;
0025e4   cf95     movff	0xf95, 0           	MOVFF	_TRISD, r0x00
0025e6   f000
                                           ;	.line	51; glcd.c	LCD_TRIS = 0xFF;	// all inputs
0025e8   0eff     movlw	0xff               	MOVLW	0xff
0025ea   6e95     movwf	0x95, 0            	MOVWF	_TRISD
                                           ;	.line	52; glcd.c	DI = 0; RW = 1;		// command/read
0025ec   9084     bcf	0x84, 0, 0           	BCF	_PORTEbits, 0
0025ee   8284     bsf	0x84, 0x1, 0         	BSF	_PORTEbits, 1
                                           ;	.line	54; glcd.c	lcd_enable();
0025f0   ec8a     call	0x2914, 0           	CALL	_lcd_enable
0025f2   f014
                                           ;	.line	55; glcd.c	_status = LCD_DATA;
0025f4   cf83     movff	0xf83, 0x1         	MOVFF	_PORTD, r0x01
0025f6   f001
                                           ;	.line	58; glcd.c	LCD_TRIS = _lcd_tris;
0025f8   c000     movff	0, 0xf95           	MOVFF	r0x00, _TRISD
0025fa   ff95
                                           ;	.line	60; glcd.c	return _status;
0025fc   5001     movf	0x1, 0, 0           	MOVF	r0x01, W
0025fe   cfe4     movff	0xfe4, 0x1         	MOVFF	PREINC1, r0x01
002600   f001
002602   cfe4     movff	0xfe4, 0           	MOVFF	PREINC1, r0x00
002604   f000
002606   cfe4     movff	0xfe4, 0xfd9       	MOVFF	PREINC1, FSR2L
002608   ffd9
00260a   0012     return	0                 	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_glcd__lcd_enable	code
                                           _lcd_enable:
                                           ;	.line	33; glcd.c	void lcd_enable(void) {
002914   cfd9     movff	0xfd9, 0xfe5       	MOVFF	FSR2L, POSTDEC1
002916   ffe5
002918   cfe1     movff	0xfe1, 0xfd9       	MOVFF	FSR1L, FSR2L
00291a   ffd9
                                           ;	.line	34; glcd.c	ENABLE = 1;
00291c   8484     bsf	0x84, 0x2, 0         	BSF	_PORTEbits, 2
                                           ;	.line	35; glcd.c	delay_20us();
00291e   ec5a     call	0x28b4, 0           	CALL	_delay_20us
002920   f014
                                           ;	.line	36; glcd.c	ENABLE = 0;
002922   9484     bcf	0x84, 0x2, 0         	BCF	_PORTEbits, 2
                                           ;	.line	37; glcd.c	delay_20us();
002924   ec5a     call	0x28b4, 0           	CALL	_delay_20us
002926   f014
002928   cfe4     movff	0xfe4, 0xfd9       	MOVFF	PREINC1, FSR2L
00292a   ffd9
00292c   0012     return	0                 	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_glcd__lcd_init	code
                                           _lcd_init:
                                           ;	.line	16; glcd.c	void lcd_init(void) {
0026da   cfd9     movff	0xfd9, 0xfe5       	MOVFF	FSR2L, POSTDEC1
0026dc   ffe5
0026de   cfe1     movff	0xfe1, 0xfd9       	MOVFF	FSR1L, FSR2L
0026e0   ffd9
                                           ;	.line	17; glcd.c	LCD_TRIS = 0x00;
0026e2   6a95     clrf	0x95, 0             	CLRF	_TRISD
                                           ;	.line	18; glcd.c	ENABLE_TRIS = 0;
0026e4   9496     bcf	0x96, 0x2, 0         	BCF	_TRISEbits, 2
                                           ;	.line	19; glcd.c	RW_TRIS	= 0;
0026e6   9296     bcf	0x96, 0x1, 0         	BCF	_TRISEbits, 1
                                           ;	.line	20; glcd.c	DI_TRIS = 0;
0026e8   9096     bcf	0x96, 0, 0           	BCF	_TRISEbits, 0
                                           ;	.line	21; glcd.c	RESET_TRIS = 0;
0026ea   9a94     bcf	0x94, 0x5, 0         	BCF	_TRISCbits, 5
                                           ;	.line	22; glcd.c	CS1_TRIS = 0;
0026ec   9094     bcf	0x94, 0, 0           	BCF	_TRISCbits, 0
                                           ;	.line	23; glcd.c	CS2_TRIS = 0;
0026ee   9294     bcf	0x94, 0x1, 0         	BCF	_TRISCbits, 1
                                           ;	.line	25; glcd.c	CS1 = 1;
0026f0   8082     bsf	0x82, 0, 0           	BSF	_PORTCbits, 0
                                           ;	.line	26; glcd.c	CS2 = 1;
0026f2   8282     bsf	0x82, 0x1, 0         	BSF	_PORTCbits, 1
                                           ;	.line	28; glcd.c	lcd_reset();
0026f4   ec54     call	0x26a8, 0           	CALL	_lcd_reset
0026f6   f013
                                           ;	.line	29; glcd.c	lcd_screenon(1);
0026f8   0e01     movlw	0x1                	MOVLW	0x01
0026fa   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
0026fc   ec21     call	0x2642, 0           	CALL	_lcd_screenon
0026fe   f013
002700   2ae1     incf	0xe1, 0x1, 0        	INCF	FSR1L, F
                                           ;	.line	30; glcd.c	lcd_cls();
002702   ec16     call	0x222c, 0           	CALL	_lcd_cls
002704   f011
002706   cfe4     movff	0xfe4, 0xfd9       	MOVFF	PREINC1, FSR2L
002708   ffd9
00270a   0012     return	0                 	RETURN	
                                           
                                           ; ; Starting pCode block for Ival
                                           	code
                                           _font8x5:
000842   0000     nop                      	DB	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x64, 0x18, 0x04, 0x64, 0x18
000844   0000     nop                      
000846   0000     nop                      
000848   6400     cpfsgt	0, 0              
00084a   0418     decf	0x18, 0, 0          
00084c   1864     xorwf	0x64, 0, 0         
00084e   3c00     incfsz	0, 0, 0           	DB	0x00, 0x3c, 0x40, 0x40, 0x20, 0x7c, 0x00, 0x0c, 0x30, 0x40, 0x30, 0x0c
000850   4040     rrncf	0x40, 0, 0         
000852   7c20     btg	0x20, 0x6, 0         
000854   0c00     retlw	0                  
000856   4030     rrncf	0x30, 0, 0         
000858   0c30     retlw	0x30               
00085a   3c00     incfsz	0, 0, 0           	DB	0x00, 0x3c, 0x40, 0x30, 0x40, 0x3c, 0x00, 0x00, 0x3e, 0x1c, 0x08, 0x00
00085c   3040     rrcf	0x40, 0, 0          
00085e   3c40     incfsz	0x40, 0, 0        
000860   0000     nop                      
000862   1c3e     comf	0x3e, 0, 0          
000864   0008     tblrd	*                  
000866   0400     decf	0, 0, 0             	DB	0x00, 0x04, 0x1e, 0x1f, 0x1e, 0x04, 0x00, 0x10, 0x3c, 0x7c, 0x3c, 0x10
000868   1f1e     comf	0x1e, 0x1, 0x1      
00086a   041e     decf	0x1e, 0, 0          
00086c   1000     iorwf	0, 0, 0            
00086e   7c3c     btg	0x3c, 0x6, 0         
000870   103c     iorwf	0x3c, 0, 0         
000872   2000     addwfc	0, 0, 0           	DB	0x00, 0x20, 0x40, 0x3e, 0x01, 0x02, 0x00, 0x22, 0x14, 0x08, 0x14, 0x22
000874   3e40     incfsz	0x40, 0x1, 0      
000876   0201     mulwf	0x1, 0             
000878   2200     addwfc	0, 0x1, 0         
00087a   0814     sublw	0x14               
00087c   2214     addwfc	0x14, 0x1, 0      
00087e   0000     nop                      	DB	0x00, 0x00, 0x38, 0x28, 0x38, 0x00, 0x00, 0x00, 0x10, 0x38, 0x10, 0x00
000880   2838     incf	0x38, 0, 0          
000882   0038     dw	0x38  ;unknown opcode 
000884   0000     nop                      
000886   3810     swapf	0x10, 0, 0         
000888   0010     retfie	0                 
00088a   0000     nop                      	DB	0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x08, 0x78, 0x08, 0x00, 0x00
00088c   1000     iorwf	0, 0, 0            
00088e   0000     nop                      
000890   0800     sublw	0                  
000892   0878     sublw	0x78               
000894   0000     nop                      
000896   0000     nop                      	DB	0x00, 0x00, 0x15, 0x15, 0x0a, 0x00, 0x00, 0x7f, 0x7f, 0x09, 0x09, 0x01
000898   1515     andwf	0x15, 0, 0x1       
00089a   000a     tblrd	*-                 
00089c   7f00     btg	0, 0x7, 0x1          
00089e   097f     iorlw	0x7f               
0008a0   0109     movlb	0x9                
0008a2   1000     iorwf	0, 0, 0            	DB	0x00, 0x10, 0x20, 0x7f, 0x01, 0x01, 0x00, 0x04, 0x04, 0x00, 0x01, 0x1f
0008a4   7f20     btg	0x20, 0x7, 0x1       
0008a6   0101     movlb	0x1                
0008a8   0400     decf	0, 0, 0             
0008aa   0004     clrwdt                   
0008ac   1f01     comf	0x1, 0x1, 0x1       
0008ae   0000     nop                      	DB	0x00, 0x00, 0x19, 0x15, 0x12, 0x00, 0x00, 0x40, 0x60, 0x50, 0x48, 0x44
0008b0   1519     andwf	0x19, 0, 0x1       
0008b2   0012     return	0                 
0008b4   4000     rrncf	0, 0, 0            
0008b6   5060     movf	0x60, 0, 0          
0008b8   4448     rlncf	0x48, 0, 0         
0008ba   0600     decf	0, 0x1, 0           	DB	0x00, 0x06, 0x09, 0x09, 0x06, 0x00, 0x00, 0x0f, 0x02, 0x01, 0x01, 0x00
0008bc   0909     iorlw	0x9                
0008be   0006     pop                      
0008c0   0f00     addlw	0                  
0008c2   0102     movlb	0x2                
0008c4   0001     dw	0x1  ;unknown opcode  
0008c6   0000     nop                      	DB	0x00, 0x00, 0x01, 0x1f, 0x01, 0x00, 0x00, 0x44, 0x44, 0x4a, 0x4a, 0x51
0008c8   1f01     comf	0x1, 0x1, 0x1       
0008ca   0001     dw	0x1  ;unknown opcode  
0008cc   4400     rlncf	0, 0, 0            
0008ce   4a44     infsnz	0x44, 0x1, 0      
0008d0   514a     movf	0x4a, 0, 0x1        
0008d2   1400     andwf	0, 0, 0            	DB	0x00, 0x14, 0x74, 0x1c, 0x17, 0x14, 0x00, 0x51, 0x4a, 0x4a, 0x44, 0x44
0008d4   1c74     comf	0x74, 0, 0          
0008d6   1417     andwf	0x17, 0, 0         
0008d8   5100     movf	0, 0, 0x1           
0008da   4a4a     infsnz	0x4a, 0x1, 0      
0008dc   4444     rlncf	0x44, 0, 0         
0008de   0000     nop                      	DB	0x00, 0x00, 0x00, 0x04, 0x04, 0x04, 0x00, 0x00, 0x7c, 0x54, 0x54, 0x44
0008e0   0400     decf	0, 0, 0             
0008e2   0404     decf	0x4, 0, 0           
0008e4   0000     nop                      
0008e6   547c     subfwb	0x7c, 0, 0        
0008e8   4454     rlncf	0x54, 0, 0         
0008ea   0800     sublw	0                  	DB	0x00, 0x08, 0x08, 0x2a, 0x1c, 0x08, 0x00, 0x7c, 0x00, 0x7c, 0x44, 0x7c
0008ec   2a08     incf	0x8, 0x1, 0         
0008ee   081c     sublw	0x1c               
0008f0   7c00     btg	0, 0x6, 0            
0008f2   7c00     btg	0, 0x6, 0            
0008f4   7c44     btg	0x44, 0x6, 0         
0008f6   0400     decf	0, 0, 0             	DB	0x00, 0x04, 0x02, 0x7f, 0x02, 0x04, 0x00, 0x10, 0x20, 0x7f, 0x20, 0x10
0008f8   7f02     btg	0x2, 0x7, 0x1        
0008fa   0402     decf	0x2, 0, 0           
0008fc   1000     iorwf	0, 0, 0            
0008fe   7f20     btg	0x20, 0x7, 0x1       
000900   1020     iorwf	0x20, 0, 0         
000902   0000     nop                      	DB	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x6f, 0x00, 0x00
000904   0000     nop                      
000906   0000     nop                      
000908   0000     nop                      
00090a   6f00     movwf	0, 0x1             
00090c   0000     nop                      
00090e   0000     nop                      	DB	0x00, 0x00, 0x07, 0x00, 0x07, 0x00, 0x00, 0x14, 0x7f, 0x14, 0x7f, 0x14
000910   0007     daw                      
000912   0007     daw                      
000914   1400     andwf	0, 0, 0            
000916   147f     andwf	0x7f, 0, 0         
000918   147f     andwf	0x7f, 0, 0         
00091a   0000     nop                      	DB	0x00, 0x00, 0x07, 0x04, 0x1e, 0x00, 0x00, 0x23, 0x13, 0x08, 0x64, 0x62
00091c   0407     decf	0x7, 0, 0           
00091e   001e     dw	0x1e  ;unknown opcode 
000920   2300     addwfc	0, 0x1, 0x1       
000922   0813     sublw	0x13               
000924   6264     cpfseq	0x64, 0           
000926   3600     rlcf	0, 0x1, 0           	DB	0x00, 0x36, 0x49, 0x56, 0x20, 0x50, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00
000928   5649     subfwb	0x49, 0x1, 0      
00092a   5020     movf	0x20, 0, 0          
00092c   0000     nop                      
00092e   0700     decf	0, 0x1, 0x1         
000930   0000     nop                      
000932   0000     nop                      	DB	0x00, 0x00, 0x1c, 0x22, 0x41, 0x00, 0x00, 0x00, 0x41, 0x22, 0x1c, 0x00
000934   221c     addwfc	0x1c, 0x1, 0      
000936   0041     dw	0x41  ;unknown opcode 
000938   0000     nop                      
00093a   2241     addwfc	0x41, 0x1, 0      
00093c   001c     dw	0x1c  ;unknown opcode 
00093e   1400     andwf	0, 0, 0            	DB	0x00, 0x14, 0x08, 0x3e, 0x08, 0x14, 0x00, 0x08, 0x08, 0x3e, 0x08, 0x08
000940   3e08     incfsz	0x8, 0x1, 0       
000942   1408     andwf	0x8, 0, 0          
000944   0800     sublw	0                  
000946   3e08     incfsz	0x8, 0x1, 0       
000948   0808     sublw	0x8                
00094a   0000     nop                      	DB	0x00, 0x00, 0x50, 0x30, 0x00, 0x00, 0x00, 0x08, 0x08, 0x08, 0x08, 0x08
00094c   3050     rrcf	0x50, 0, 0          
00094e   0000     nop                      
000950   0800     sublw	0                  
000952   0808     sublw	0x8                
000954   0808     sublw	0x8                
000956   0000     nop                      	DB	0x00, 0x00, 0x60, 0x60, 0x00, 0x00, 0x00, 0x20, 0x10, 0x08, 0x04, 0x02
000958   6060     cpfslt	0x60, 0           
00095a   0000     nop                      
00095c   2000     addwfc	0, 0, 0           
00095e   0810     sublw	0x10               
000960   0204     mulwf	0x4, 0             
000962   3e00     incfsz	0, 0x1, 0         	DB	0x00, 0x3e, 0x51, 0x49, 0x45, 0x3e, 0x00, 0x00, 0x42, 0x7f, 0x40, 0x00
000964   4951     infsnz	0x51, 0, 0x1      
000966   3e45     incfsz	0x45, 0x1, 0      
000968   0000     nop                      
00096a   7f42     btg	0x42, 0x7, 0x1       
00096c   0040     dw	0x40  ;unknown opcode 
00096e   4200     rrncf	0, 0x1, 0          	DB	0x00, 0x42, 0x61, 0x51, 0x49, 0x46, 0x00, 0x21, 0x41, 0x45, 0x4b, 0x31
000970   5161     movf	0x61, 0, 0x1        
000972   4649     rlncf	0x49, 0x1, 0       
000974   2100     addwfc	0, 0, 0x1         
000976   4541     rlncf	0x41, 0, 0x1       
000978   314b     rrcf	0x4b, 0, 0x1        
00097a   1800     xorwf	0, 0, 0            	DB	0x00, 0x18, 0x14, 0x12, 0x7f, 0x10, 0x00, 0x27, 0x45, 0x45, 0x45, 0x39
00097c   1214     iorwf	0x14, 0x1, 0       
00097e   107f     iorwf	0x7f, 0, 0         
000980   2700     addwf	0, 0x1, 0x1        
000982   4545     rlncf	0x45, 0, 0x1       
000984   3945     swapf	0x45, 0, 0x1       
000986   3c00     incfsz	0, 0, 0           	DB	0x00, 0x3c, 0x4a, 0x49, 0x49, 0x30, 0x00, 0x01, 0x71, 0x09, 0x05, 0x03
000988   494a     infsnz	0x4a, 0, 0x1      
00098a   3049     rrcf	0x49, 0, 0          
00098c   0100     movlb	0                  
00098e   0971     iorlw	0x71               
000990   0305     mulwf	0x5, 0x1           
000992   3600     rlcf	0, 0x1, 0           	DB	0x00, 0x36, 0x49, 0x49, 0x49, 0x36, 0x00, 0x06, 0x49, 0x49, 0x29, 0x1e
000994   4949     infsnz	0x49, 0, 0x1      
000996   3649     rlcf	0x49, 0x1, 0        
000998   0600     decf	0, 0x1, 0           
00099a   4949     infsnz	0x49, 0, 0x1      
00099c   1e29     comf	0x29, 0x1, 0        
00099e   0000     nop                      	DB	0x00, 0x00, 0x36, 0x36, 0x00, 0x00, 0x00, 0x00, 0x56, 0x36, 0x00, 0x00
0009a0   3636     rlcf	0x36, 0x1, 0        
0009a2   0000     nop                      
0009a4   0000     nop                      
0009a6   3656     rlcf	0x56, 0x1, 0        
0009a8   0000     nop                      
0009aa   0800     sublw	0                  	DB	0x00, 0x08, 0x14, 0x22, 0x41, 0x00, 0x00, 0x14, 0x14, 0x14, 0x14, 0x14
0009ac   2214     addwfc	0x14, 0x1, 0      
0009ae   0041     dw	0x41  ;unknown opcode 
0009b0   1400     andwf	0, 0, 0            
0009b2   1414     andwf	0x14, 0, 0         
0009b4   1414     andwf	0x14, 0, 0         
0009b6   0000     nop                      	DB	0x00, 0x00, 0x41, 0x22, 0x14, 0x08, 0x00, 0x02, 0x01, 0x51, 0x09, 0x06
0009b8   2241     addwfc	0x41, 0x1, 0      
0009ba   0814     sublw	0x14               
0009bc   0200     mulwf	0, 0               
0009be   5101     movf	0x1, 0, 0x1         
0009c0   0609     decf	0x9, 0x1, 0         
0009c2   3e00     incfsz	0, 0x1, 0         	DB	0x00, 0x3e, 0x41, 0x5d, 0x49, 0x4e, 0x00, 0x7e, 0x09, 0x09, 0x09, 0x7e
0009c4   5d41     subwf	0x41, 0, 0x1       
0009c6   4e49     dcfsnz	0x49, 0x1, 0      
0009c8   7e00     btg	0, 0x7, 0            
0009ca   0909     iorlw	0x9                
0009cc   7e09     btg	0x9, 0x7, 0          
0009ce   7f00     btg	0, 0x7, 0x1          	DB	0x00, 0x7f, 0x49, 0x49, 0x49, 0x36, 0x00, 0x3e, 0x41, 0x41, 0x41, 0x22
0009d0   4949     infsnz	0x49, 0, 0x1      
0009d2   3649     rlcf	0x49, 0x1, 0        
0009d4   3e00     incfsz	0, 0x1, 0         
0009d6   4141     rrncf	0x41, 0, 0x1       
0009d8   2241     addwfc	0x41, 0x1, 0      
0009da   7f00     btg	0, 0x7, 0x1          	DB	0x00, 0x7f, 0x41, 0x41, 0x41, 0x3e, 0x00, 0x7f, 0x49, 0x49, 0x49, 0x41
0009dc   4141     rrncf	0x41, 0, 0x1       
0009de   3e41     incfsz	0x41, 0x1, 0      
0009e0   7f00     btg	0, 0x7, 0x1          
0009e2   4949     infsnz	0x49, 0, 0x1      
0009e4   4149     rrncf	0x49, 0, 0x1       
0009e6   7f00     btg	0, 0x7, 0x1          	DB	0x00, 0x7f, 0x09, 0x09, 0x09, 0x01, 0x00, 0x3e, 0x41, 0x49, 0x49, 0x7a
0009e8   0909     iorlw	0x9                
0009ea   0109     movlb	0x9                
0009ec   3e00     incfsz	0, 0x1, 0         
0009ee   4941     infsnz	0x41, 0, 0x1      
0009f0   7a49     btg	0x49, 0x5, 0         
0009f2   7f00     btg	0, 0x7, 0x1          	DB	0x00, 0x7f, 0x08, 0x08, 0x08, 0x7f, 0x00, 0x00, 0x41, 0x7f, 0x41, 0x00
0009f4   0808     sublw	0x8                
0009f6   7f08     btg	0x8, 0x7, 0x1        
0009f8   0000     nop                      
0009fa   7f41     btg	0x41, 0x7, 0x1       
0009fc   0041     dw	0x41  ;unknown opcode 
0009fe   2000     addwfc	0, 0, 0           	DB	0x00, 0x20, 0x40, 0x41, 0x3f, 0x01, 0x00, 0x7f, 0x08, 0x14, 0x22, 0x41
000a00   4140     rrncf	0x40, 0, 0x1       
000a02   013f     movlb	0x3f               
000a04   7f00     btg	0, 0x7, 0x1          
000a06   1408     andwf	0x8, 0, 0          
000a08   4122     rrncf	0x22, 0, 0x1       
000a0a   7f00     btg	0, 0x7, 0x1          	DB	0x00, 0x7f, 0x40, 0x40, 0x40, 0x40, 0x00, 0x7f, 0x02, 0x0c, 0x02, 0x7f
000a0c   4040     rrncf	0x40, 0, 0         
000a0e   4040     rrncf	0x40, 0, 0         
000a10   7f00     btg	0, 0x7, 0x1          
000a12   0c02     retlw	0x2                
000a14   7f02     btg	0x2, 0x7, 0x1        
000a16   7f00     btg	0, 0x7, 0x1          	DB	0x00, 0x7f, 0x04, 0x08, 0x10, 0x7f, 0x00, 0x3e, 0x41, 0x41, 0x41, 0x3e
000a18   0804     sublw	0x4                
000a1a   7f10     btg	0x10, 0x7, 0x1       
000a1c   3e00     incfsz	0, 0x1, 0         
000a1e   4141     rrncf	0x41, 0, 0x1       
000a20   3e41     incfsz	0x41, 0x1, 0      
000a22   7f00     btg	0, 0x7, 0x1          	DB	0x00, 0x7f, 0x09, 0x09, 0x09, 0x06, 0x00, 0x3e, 0x41, 0x51, 0x21, 0x5e
000a24   0909     iorlw	0x9                
000a26   0609     decf	0x9, 0x1, 0         
000a28   3e00     incfsz	0, 0x1, 0         
000a2a   5141     movf	0x41, 0, 0x1        
000a2c   5e21     subwf	0x21, 0x1, 0       
000a2e   7f00     btg	0, 0x7, 0x1          	DB	0x00, 0x7f, 0x09, 0x19, 0x29, 0x46, 0x00, 0x46, 0x49, 0x49, 0x49, 0x31
000a30   1909     xorwf	0x9, 0, 0x1        
000a32   4629     rlncf	0x29, 0x1, 0       
000a34   4600     rlncf	0, 0x1, 0          
000a36   4949     infsnz	0x49, 0, 0x1      
000a38   3149     rrcf	0x49, 0, 0x1        
000a3a   0100     movlb	0                  	DB	0x00, 0x01, 0x01, 0x7f, 0x01, 0x01, 0x00, 0x3f, 0x40, 0x40, 0x40, 0x3f
000a3c   7f01     btg	0x1, 0x7, 0x1        
000a3e   0101     movlb	0x1                
000a40   3f00     incfsz	0, 0x1, 0x1       
000a42   4040     rrncf	0x40, 0, 0         
000a44   3f40     incfsz	0x40, 0x1, 0x1    
000a46   0f00     addlw	0                  	DB	0x00, 0x0f, 0x30, 0x40, 0x30, 0x0f, 0x00, 0x3f, 0x40, 0x30, 0x40, 0x3f
000a48   4030     rrncf	0x30, 0, 0         
000a4a   0f30     addlw	0x30               
000a4c   3f00     incfsz	0, 0x1, 0x1       
000a4e   3040     rrcf	0x40, 0, 0          
000a50   3f40     incfsz	0x40, 0x1, 0x1    
000a52   6300     cpfseq	0, 0x1            	DB	0x00, 0x63, 0x14, 0x08, 0x14, 0x63, 0x00, 0x07, 0x08, 0x70, 0x08, 0x07
000a54   0814     sublw	0x14               
000a56   6314     cpfseq	0x14, 0x1         
000a58   0700     decf	0, 0x1, 0x1         
000a5a   7008     btg	0x8, 0, 0            
000a5c   0708     decf	0x8, 0x1, 0x1       
000a5e   6100     cpfslt	0, 0x1            	DB	0x00, 0x61, 0x51, 0x49, 0x45, 0x43, 0x00, 0x3c, 0x4a, 0x49, 0x29, 0x1e
000a60   4951     infsnz	0x51, 0, 0x1      
000a62   4345     rrncf	0x45, 0x1, 0x1     
000a64   3c00     incfsz	0, 0, 0           
000a66   494a     infsnz	0x4a, 0, 0x1      
000a68   1e29     comf	0x29, 0x1, 0        
000a6a   0200     mulwf	0, 0               	DB	0x00, 0x02, 0x04, 0x08, 0x10, 0x20, 0x00, 0x00, 0x41, 0x7f, 0x00, 0x00
000a6c   0804     sublw	0x4                
000a6e   2010     addwfc	0x10, 0, 0        
000a70   0000     nop                      
000a72   7f41     btg	0x41, 0x7, 0x1       
000a74   0000     nop                      
000a76   0400     decf	0, 0, 0             	DB	0x00, 0x04, 0x02, 0x01, 0x02, 0x04, 0x00, 0x40, 0x40, 0x40, 0x40, 0x40
000a78   0102     movlb	0x2                
000a7a   0402     decf	0x2, 0, 0           
000a7c   4000     rrncf	0, 0, 0            
000a7e   4040     rrncf	0x40, 0, 0         
000a80   4040     rrncf	0x40, 0, 0         
000a82   0000     nop                      	DB	0x00, 0x00, 0x00, 0x03, 0x04, 0x00, 0x00, 0x20, 0x54, 0x54, 0x54, 0x78
000a84   0300     mulwf	0, 0x1             
000a86   0004     clrwdt                   
000a88   2000     addwfc	0, 0, 0           
000a8a   5454     subfwb	0x54, 0, 0        
000a8c   7854     btg	0x54, 0x4, 0         
000a8e   7f00     btg	0, 0x7, 0x1          	DB	0x00, 0x7f, 0x48, 0x44, 0x44, 0x38, 0x00, 0x38, 0x44, 0x44, 0x44, 0x20
000a90   4448     rlncf	0x48, 0, 0         
000a92   3844     swapf	0x44, 0, 0         
000a94   3800     swapf	0, 0, 0            
000a96   4444     rlncf	0x44, 0, 0         
000a98   2044     addwfc	0x44, 0, 0        
000a9a   3800     swapf	0, 0, 0            	DB	0x00, 0x38, 0x44, 0x44, 0x48, 0x7f, 0x00, 0x38, 0x54, 0x54, 0x54, 0x18
000a9c   4444     rlncf	0x44, 0, 0         
000a9e   7f48     btg	0x48, 0x7, 0x1       
000aa0   3800     swapf	0, 0, 0            
000aa2   5454     subfwb	0x54, 0, 0        
000aa4   1854     xorwf	0x54, 0, 0         
000aa6   0800     sublw	0                  	DB	0x00, 0x08, 0x7e, 0x09, 0x01, 0x02, 0x00, 0x0c, 0x52, 0x52, 0x52, 0x3e
000aa8   097e     iorlw	0x7e               
000aaa   0201     mulwf	0x1, 0             
000aac   0c00     retlw	0                  
000aae   5252     movf	0x52, 0x1, 0        
000ab0   3e52     incfsz	0x52, 0x1, 0      
000ab2   7f00     btg	0, 0x7, 0x1          	DB	0x00, 0x7f, 0x08, 0x04, 0x04, 0x78, 0x00, 0x00, 0x44, 0x7d, 0x40, 0x00
000ab4   0408     decf	0x8, 0, 0           
000ab6   7804     btg	0x4, 0x4, 0          
000ab8   0000     nop                      
000aba   7d44     btg	0x44, 0x6, 0x1       
000abc   0040     dw	0x40  ;unknown opcode 
000abe   2000     addwfc	0, 0, 0           	DB	0x00, 0x20, 0x40, 0x44, 0x3d, 0x00, 0x00, 0x00, 0x7f, 0x10, 0x28, 0x44
000ac0   4440     rlncf	0x40, 0, 0         
000ac2   003d     dw	0x3d  ;unknown opcode 
000ac4   0000     nop                      
000ac6   107f     iorwf	0x7f, 0, 0         
000ac8   4428     rlncf	0x28, 0, 0         
000aca   0000     nop                      	DB	0x00, 0x00, 0x41, 0x7f, 0x40, 0x00, 0x00, 0x7c, 0x04, 0x18, 0x04, 0x78
000acc   7f41     btg	0x41, 0x7, 0x1       
000ace   0040     dw	0x40  ;unknown opcode 
000ad0   7c00     btg	0, 0x6, 0            
000ad2   1804     xorwf	0x4, 0, 0          
000ad4   7804     btg	0x4, 0x4, 0          
000ad6   7c00     btg	0, 0x6, 0            	DB	0x00, 0x7c, 0x08, 0x04, 0x04, 0x78, 0x00, 0x38, 0x44, 0x44, 0x44, 0x38
000ad8   0408     decf	0x8, 0, 0           
000ada   7804     btg	0x4, 0x4, 0          
000adc   3800     swapf	0, 0, 0            
000ade   4444     rlncf	0x44, 0, 0         
000ae0   3844     swapf	0x44, 0, 0         
000ae2   7c00     btg	0, 0x6, 0            	DB	0x00, 0x7c, 0x14, 0x14, 0x14, 0x08, 0x00, 0x08, 0x14, 0x14, 0x18, 0x7c
000ae4   1414     andwf	0x14, 0, 0         
000ae6   0814     sublw	0x14               
000ae8   0800     sublw	0                  
000aea   1414     andwf	0x14, 0, 0         
000aec   7c18     btg	0x18, 0x6, 0         
000aee   7c00     btg	0, 0x6, 0            	DB	0x00, 0x7c, 0x08, 0x04, 0x04, 0x08, 0x00, 0x48, 0x54, 0x54, 0x54, 0x20
000af0   0408     decf	0x8, 0, 0           
000af2   0804     sublw	0x4                
000af4   4800     infsnz	0, 0, 0           
000af6   5454     subfwb	0x54, 0, 0        
000af8   2054     addwfc	0x54, 0, 0        
000afa   0400     decf	0, 0, 0             	DB	0x00, 0x04, 0x3f, 0x44, 0x40, 0x20, 0x00, 0x3c, 0x40, 0x40, 0x20, 0x7c
000afc   443f     rlncf	0x3f, 0, 0         
000afe   2040     addwfc	0x40, 0, 0        
000b00   3c00     incfsz	0, 0, 0           
000b02   4040     rrncf	0x40, 0, 0         
000b04   7c20     btg	0x20, 0x6, 0         
000b06   1c00     comf	0, 0, 0             	DB	0x00, 0x1c, 0x20, 0x40, 0x20, 0x1c, 0x00, 0x3c, 0x40, 0x30, 0x40, 0x3c
000b08   4020     rrncf	0x20, 0, 0         
000b0a   1c20     comf	0x20, 0, 0          
000b0c   3c00     incfsz	0, 0, 0           
000b0e   3040     rrcf	0x40, 0, 0          
000b10   3c40     incfsz	0x40, 0, 0        
000b12   4400     rlncf	0, 0, 0            	DB	0x00, 0x44, 0x28, 0x10, 0x28, 0x44, 0x00, 0x0c, 0x50, 0x50, 0x50, 0x3c
000b14   1028     iorwf	0x28, 0, 0         
000b16   4428     rlncf	0x28, 0, 0         
000b18   0c00     retlw	0                  
000b1a   5050     movf	0x50, 0, 0          
000b1c   3c50     incfsz	0x50, 0, 0        
000b1e   4400     rlncf	0, 0, 0            	DB	0x00, 0x44, 0x64, 0x54, 0x4c, 0x44, 0x00, 0x00, 0x08, 0x36, 0x41, 0x41
000b20   5464     subfwb	0x64, 0, 0        
000b22   444c     rlncf	0x4c, 0, 0         
000b24   0000     nop                      
000b26   3608     rlcf	0x8, 0x1, 0         
000b28   4141     rrncf	0x41, 0, 0x1       
000b2a   0000     nop                      	DB	0x00, 0x00, 0x00, 0x7f, 0x00, 0x00, 0x00, 0x41, 0x41, 0x36, 0x08, 0x00
000b2c   7f00     btg	0, 0x7, 0x1          
000b2e   0000     nop                      
000b30   4100     rrncf	0, 0, 0x1          
000b32   3641     rlcf	0x41, 0x1, 0        
000b34   0008     tblrd	*                  
000b36   0400     decf	0, 0, 0             	DB	0x00, 0x04, 0x02, 0x04, 0x08, 0x04, 0x00, 0x7f, 0x6b, 0x6b, 0x6b, 0x7f
000b38   0402     decf	0x2, 0, 0           
000b3a   0408     decf	0x8, 0, 0           
000b3c   7f00     btg	0, 0x7, 0x1          
000b3e   6b6b     clrf	0x6b, 0x1           
000b40   7f6b     btg	0x6b, 0x7, 0x1       
000b42   0000     nop                      	DB	0x00, 0x00, 0x7c, 0x44, 0x7c, 0x00, 0x00, 0x00, 0x08, 0x7c, 0x00, 0x00
000b44   447c     rlncf	0x7c, 0, 0         
000b46   007c     dw	0x7c  ;unknown opcode 
000b48   0000     nop                      
000b4a   7c08     btg	0x8, 0x6, 0          
000b4c   0000     nop                      
000b4e   0000     nop                      	DB	0x00, 0x00, 0x64, 0x54, 0x48, 0x00, 0x00, 0x00, 0x44, 0x54, 0x28, 0x00
000b50   5464     subfwb	0x64, 0, 0        
000b52   0048     dw	0x48  ;unknown opcode 
000b54   0000     nop                      
000b56   5444     subfwb	0x44, 0, 0        
000b58   0028     dw	0x28  ;unknown opcode 
000b5a   0000     nop                      	DB	0x00, 0x00, 0x1c, 0x10, 0x78, 0x00, 0x00, 0x00, 0x5c, 0x54, 0x24, 0x00
000b5c   101c     iorwf	0x1c, 0, 0         
000b5e   0078     dw	0x78  ;unknown opcode 
000b60   0000     nop                      
000b62   545c     subfwb	0x5c, 0, 0        
000b64   0024     dw	0x24  ;unknown opcode 
000b66   0000     nop                      	DB	0x00, 0x00, 0x78, 0x54, 0x74, 0x00, 0x00, 0x00, 0x64, 0x14, 0x0c, 0x00
000b68   5478     subfwb	0x78, 0, 0        
000b6a   0074     dw	0x74  ;unknown opcode 
000b6c   0000     nop                      
000b6e   1464     andwf	0x64, 0, 0         
000b70   000c     tblwt	*                  
000b72   0000     nop                      	DB	0x00, 0x00, 0x7c, 0x54, 0x7c, 0x00, 0x00, 0x00, 0x5c, 0x54, 0x3c, 0x00
000b74   547c     subfwb	0x7c, 0, 0        
000b76   007c     dw	0x7c  ;unknown opcode 
000b78   0000     nop                      
000b7a   545c     subfwb	0x5c, 0, 0        
000b7c   003c     dw	0x3c  ;unknown opcode 
000b7e   7800     btg	0, 0x4, 0            	DB	0x00, 0x78, 0x24, 0x26, 0x25, 0x78, 0x00, 0x78, 0x25, 0x26, 0x24, 0x78
000b80   2624     addwf	0x24, 0x1, 0       
000b82   7825     btg	0x25, 0x4, 0         
000b84   7800     btg	0, 0x4, 0            
000b86   2625     addwf	0x25, 0x1, 0       
000b88   7824     btg	0x24, 0x4, 0         
000b8a   7000     btg	0, 0, 0              	DB	0x00, 0x70, 0x2a, 0x29, 0x2a, 0x70, 0x00, 0x78, 0x25, 0x24, 0x25, 0x78
000b8c   292a     incf	0x2a, 0, 0x1        
000b8e   702a     btg	0x2a, 0, 0           
000b90   7800     btg	0, 0x4, 0            
000b92   2425     addwf	0x25, 0, 0         
000b94   7825     btg	0x25, 0x4, 0         
000b96   2000     addwfc	0, 0, 0           	DB	0x00, 0x20, 0x54, 0x56, 0x55, 0x78, 0x00, 0x20, 0x55, 0x56, 0x54, 0x78
000b98   5654     subfwb	0x54, 0x1, 0      
000b9a   7855     btg	0x55, 0x4, 0         
000b9c   2000     addwfc	0, 0, 0           
000b9e   5655     subfwb	0x55, 0x1, 0      
000ba0   7854     btg	0x54, 0x4, 0         
000ba2   2000     addwfc	0, 0, 0           	DB	0x00, 0x20, 0x56, 0x55, 0x56, 0x78, 0x00, 0x20, 0x55, 0x54, 0x55, 0x78
000ba4   5556     subfwb	0x56, 0, 0x1      
000ba6   7856     btg	0x56, 0x4, 0         
000ba8   2000     addwfc	0, 0, 0           
000baa   5455     subfwb	0x55, 0, 0        
000bac   7855     btg	0x55, 0x4, 0         
000bae   7c00     btg	0, 0x6, 0            	DB	0x00, 0x7c, 0x54, 0x56, 0x55, 0x44, 0x00, 0x7c, 0x55, 0x56, 0x54, 0x44
000bb0   5654     subfwb	0x54, 0x1, 0      
000bb2   4455     rlncf	0x55, 0, 0         
000bb4   7c00     btg	0, 0x6, 0            
000bb6   5655     subfwb	0x55, 0x1, 0      
000bb8   4454     rlncf	0x54, 0, 0         
000bba   7c00     btg	0, 0x6, 0            	DB	0x00, 0x7c, 0x56, 0x55, 0x56, 0x44, 0x00, 0x7c, 0x55, 0x54, 0x55, 0x44
000bbc   5556     subfwb	0x56, 0, 0x1      
000bbe   4456     rlncf	0x56, 0, 0         
000bc0   7c00     btg	0, 0x6, 0            
000bc2   5455     subfwb	0x55, 0, 0        
000bc4   4455     rlncf	0x55, 0, 0         
000bc6   3800     swapf	0, 0, 0            	DB	0x00, 0x38, 0x54, 0x56, 0x55, 0x18, 0x00, 0x38, 0x55, 0x56, 0x54, 0x18
000bc8   5654     subfwb	0x54, 0x1, 0      
000bca   1855     xorwf	0x55, 0, 0         
000bcc   3800     swapf	0, 0, 0            
000bce   5655     subfwb	0x55, 0x1, 0      
000bd0   1854     xorwf	0x54, 0, 0         
000bd2   3800     swapf	0, 0, 0            	DB	0x00, 0x38, 0x56, 0x55, 0x56, 0x18, 0x00, 0x38, 0x55, 0x54, 0x55, 0x18
000bd4   5556     subfwb	0x56, 0, 0x1      
000bd6   1856     xorwf	0x56, 0, 0         
000bd8   3800     swapf	0, 0, 0            
000bda   5455     subfwb	0x55, 0, 0        
000bdc   1855     xorwf	0x55, 0, 0         
000bde   0000     nop                      	DB	0x00, 0x00, 0x44, 0x7e, 0x45, 0x00, 0x00, 0x00, 0x45, 0x7e, 0x44, 0x00
000be0   7e44     btg	0x44, 0x7, 0         
000be2   0045     dw	0x45  ;unknown opcode 
000be4   0000     nop                      
000be6   7e45     btg	0x45, 0x7, 0         
000be8   0044     dw	0x44  ;unknown opcode 
000bea   0000     nop                      	DB	0x00, 0x00, 0x46, 0x7d, 0x46, 0x00, 0x00, 0x00, 0x45, 0x7c, 0x45, 0x00
000bec   7d46     btg	0x46, 0x6, 0x1       
000bee   0046     dw	0x46  ;unknown opcode 
000bf0   0000     nop                      
000bf2   7c45     btg	0x45, 0x6, 0         
000bf4   0045     dw	0x45  ;unknown opcode 
000bf6   0000     nop                      	DB	0x00, 0x00, 0x48, 0x7a, 0x41, 0x00, 0x00, 0x00, 0x49, 0x7a, 0x40, 0x00
000bf8   7a48     btg	0x48, 0x5, 0         
000bfa   0041     dw	0x41  ;unknown opcode 
000bfc   0000     nop                      
000bfe   7a49     btg	0x49, 0x5, 0         
000c00   0040     dw	0x40  ;unknown opcode 
000c02   0000     nop                      	DB	0x00, 0x00, 0x4a, 0x79, 0x42, 0x00, 0x00, 0x00, 0x49, 0x78, 0x41, 0x00
000c04   794a     btg	0x4a, 0x4, 0x1       
000c06   0042     dw	0x42  ;unknown opcode 
000c08   0000     nop                      
000c0a   7849     btg	0x49, 0x4, 0         
000c0c   0041     dw	0x41  ;unknown opcode 
000c0e   3800     swapf	0, 0, 0            	DB	0x00, 0x38, 0x44, 0x46, 0x45, 0x38, 0x00, 0x38, 0x45, 0x46, 0x44, 0x38
000c10   4644     rlncf	0x44, 0x1, 0       
000c12   3845     swapf	0x45, 0, 0         
000c14   3800     swapf	0, 0, 0            
000c16   4645     rlncf	0x45, 0x1, 0       
000c18   3844     swapf	0x44, 0, 0         
000c1a   3800     swapf	0, 0, 0            	DB	0x00, 0x38, 0x46, 0x45, 0x46, 0x38, 0x00, 0x38, 0x45, 0x44, 0x45, 0x38
000c1c   4546     rlncf	0x46, 0, 0x1       
000c1e   3846     swapf	0x46, 0, 0         
000c20   3800     swapf	0, 0, 0            
000c22   4445     rlncf	0x45, 0, 0         
000c24   3845     swapf	0x45, 0, 0         
000c26   3000     rrcf	0, 0, 0             	DB	0x00, 0x30, 0x48, 0x4a, 0x49, 0x30, 0x00, 0x30, 0x49, 0x4a, 0x48, 0x30
000c28   4a48     infsnz	0x48, 0x1, 0      
000c2a   3049     rrcf	0x49, 0, 0          
000c2c   3000     rrcf	0, 0, 0             
000c2e   4a49     infsnz	0x49, 0x1, 0      
000c30   3048     rrcf	0x48, 0, 0          
000c32   3000     rrcf	0, 0, 0             	DB	0x00, 0x30, 0x4a, 0x49, 0x4a, 0x30, 0x00, 0x30, 0x49, 0x48, 0x49, 0x30
000c34   494a     infsnz	0x4a, 0, 0x1      
000c36   304a     rrcf	0x4a, 0, 0          
000c38   3000     rrcf	0, 0, 0             
000c3a   4849     infsnz	0x49, 0, 0        
000c3c   3049     rrcf	0x49, 0, 0          
000c3e   3c00     incfsz	0, 0, 0           	DB	0x00, 0x3c, 0x40, 0x42, 0x41, 0x3c, 0x00, 0x3c, 0x41, 0x42, 0x40, 0x3c
000c40   4240     rrncf	0x40, 0x1, 0       
000c42   3c41     incfsz	0x41, 0, 0        
000c44   3c00     incfsz	0, 0, 0           
000c46   4241     rrncf	0x41, 0x1, 0       
000c48   3c40     incfsz	0x40, 0, 0        
000c4a   3c00     incfsz	0, 0, 0           	DB	0x00, 0x3c, 0x42, 0x41, 0x42, 0x3c, 0x00, 0x3c, 0x41, 0x40, 0x41, 0x3c
000c4c   4142     rrncf	0x42, 0, 0x1       
000c4e   3c42     incfsz	0x42, 0, 0        
000c50   3c00     incfsz	0, 0, 0           
000c52   4041     rrncf	0x41, 0, 0         
000c54   3c41     incfsz	0x41, 0, 0        
000c56   3c00     incfsz	0, 0, 0           	DB	0x00, 0x3c, 0x40, 0x42, 0x21, 0x7c, 0x00, 0x3c, 0x41, 0x42, 0x20, 0x7c
000c58   4240     rrncf	0x40, 0x1, 0       
000c5a   7c21     btg	0x21, 0x6, 0         
000c5c   3c00     incfsz	0, 0, 0           
000c5e   4241     rrncf	0x41, 0x1, 0       
000c60   7c20     btg	0x20, 0x6, 0         
000c62   3800     swapf	0, 0, 0            	DB	0x00, 0x38, 0x42, 0x41, 0x22, 0x78, 0x00, 0x3c, 0x41, 0x40, 0x21, 0x7c
000c64   4142     rrncf	0x42, 0, 0x1       
000c66   7822     btg	0x22, 0x4, 0         
000c68   3c00     incfsz	0, 0, 0           
000c6a   4041     rrncf	0x41, 0, 0         
000c6c   7c21     btg	0x21, 0x6, 0         
000c6e   4e00     dcfsnz	0, 0x1, 0         	DB	0x00, 0x4e, 0x51, 0x71, 0x11, 0x0a, 0x00, 0x58, 0x64, 0x64, 0x24, 0x10
000c70   7151     btg	0x51, 0, 0x1         
000c72   0a11     xorlw	0x11               
000c74   5800     subwfb	0, 0, 0           
000c76   6464     cpfsgt	0x64, 0           
000c78   1024     iorwf	0x24, 0, 0         
000c7a   7c00     btg	0, 0x6, 0            	DB	0x00, 0x7c, 0x0a, 0x11, 0x22, 0x7d, 0x00, 0x78, 0x12, 0x09, 0x0a, 0x71
000c7c   110a     iorwf	0xa, 0, 0x1        
000c7e   7d22     btg	0x22, 0x6, 0x1       
000c80   7800     btg	0, 0x4, 0            
000c82   0912     iorlw	0x12               
000c84   710a     btg	0xa, 0, 0x1          
000c86   0000     nop                      	DB	0x00, 0x00, 0x00, 0x04, 0x02, 0x01, 0x00, 0x01, 0x02, 0x04, 0x00, 0x00
000c88   0400     decf	0, 0, 0             
000c8a   0102     movlb	0x2                
000c8c   0100     movlb	0                  
000c8e   0402     decf	0x2, 0, 0           
000c90   0000     nop                      
000c92   0000     nop                      	DB	0x00, 0x00, 0x02, 0x00, 0x02, 0x00, 0x00, 0x30, 0x48, 0x45, 0x40, 0x20
000c94   0002     dw	0x2  ;unknown opcode  
000c96   0002     dw	0x2  ;unknown opcode  
000c98   3000     rrcf	0, 0, 0             
000c9a   4548     rlncf	0x48, 0, 0x1       
000c9c   2040     addwfc	0x40, 0, 0        
000c9e   0000     nop                      	DB	0x00, 0x00, 0x00, 0x7b, 0x00, 0x00, 0x00, 0x38, 0x44, 0x44, 0x38, 0x44
000ca0   7b00     btg	0, 0x5, 0x1          
000ca2   0000     nop                      
000ca4   3800     swapf	0, 0, 0            
000ca6   4444     rlncf	0x44, 0, 0         
000ca8   4438     rlncf	0x38, 0, 0         
000caa   4000     rrncf	0, 0, 0            	DB	0x00, 0x40, 0x3e, 0x49, 0x49, 0x36, 0x00, 0x08, 0x04, 0x08, 0x70, 0x0c
000cac   493e     infsnz	0x3e, 0, 0x1      
000cae   3649     rlcf	0x49, 0x1, 0        
000cb0   0800     sublw	0                  
000cb2   0804     sublw	0x4                
000cb4   0c70     retlw	0x70               
000cb6   6000     cpfslt	0, 0              	DB	0x00, 0x60, 0x50, 0x48, 0x50, 0x60, 0x00, 0x20, 0x52, 0x55, 0x59, 0x30
000cb8   4850     infsnz	0x50, 0, 0        
000cba   6050     cpfslt	0x50, 0           
000cbc   2000     addwfc	0, 0, 0           
000cbe   5552     subfwb	0x52, 0, 0x1      
000cc0   3059     rrcf	0x59, 0, 0          
000cc2   3800     swapf	0, 0, 0            	DB	0x00, 0x38, 0x54, 0x54, 0x54, 0x00, 0x00, 0x00, 0x00, 0x7f, 0x41, 0x00
000cc4   5454     subfwb	0x54, 0, 0        
000cc6   0054     dw	0x54  ;unknown opcode 
000cc8   0000     nop                      
000cca   7f00     btg	0, 0x7, 0x1          
000ccc   0041     dw	0x41  ;unknown opcode 
000cce   4000     rrncf	0, 0, 0            	DB	0x00, 0x40, 0x22, 0x14, 0x18, 0x60, 0x00, 0x7c, 0x20, 0x20, 0x1c, 0x20
000cd0   1422     andwf	0x22, 0, 0         
000cd2   6018     cpfslt	0x18, 0           
000cd4   7c00     btg	0, 0x6, 0            
000cd6   2020     addwfc	0x20, 0, 0        
000cd8   201c     addwfc	0x1c, 0, 0        
000cda   4400     rlncf	0, 0, 0            	DB	0x00, 0x44, 0x3c, 0x04, 0x7c, 0x44, 0x00, 0x40, 0x3c, 0x12, 0x12, 0x0c
000cdc   043c     decf	0x3c, 0, 0          
000cde   447c     rlncf	0x7c, 0, 0         
000ce0   4000     rrncf	0, 0, 0            
000ce2   123c     iorwf	0x3c, 0x1, 0       
000ce4   0c12     retlw	0x12               
000ce6   4100     rrncf	0, 0, 0x1          	DB	0x00, 0x41, 0x63, 0x55, 0x49, 0x41, 0x00, 0x38, 0x44, 0x44, 0x3c, 0x04
000ce8   5563     subfwb	0x63, 0, 0x1      
000cea   4149     rrncf	0x49, 0, 0x1       
000cec   3800     swapf	0, 0, 0            
000cee   4444     rlncf	0x44, 0, 0         
000cf0   043c     decf	0x3c, 0, 0          
000cf2   0800     sublw	0                  	DB	0x00, 0x08, 0x04, 0x3c, 0x44, 0x24, 0x00, 0x08, 0x14, 0x7f, 0x14, 0x08
000cf4   3c04     incfsz	0x4, 0, 0         
000cf6   2444     addwf	0x44, 0, 0         
000cf8   0800     sublw	0                  
000cfa   7f14     btg	0x14, 0x7, 0x1       
000cfc   0814     sublw	0x14               
000cfe   4e00     dcfsnz	0, 0x1, 0         	DB	0x00, 0x4e, 0x71, 0x01, 0x71, 0x4e, 0x00, 0x45, 0x29, 0x11, 0x29, 0x45
000d00   0171     movlb	0x71               
000d02   4e71     dcfsnz	0x71, 0x1, 0      
000d04   4500     rlncf	0, 0, 0x1          
000d06   1129     iorwf	0x29, 0, 0x1       
000d08   4529     rlncf	0x29, 0, 0x1       
000d0a   0d00     mullw	0                  	DB	0x00, 0x0d, 0x51, 0x51, 0x51, 0x3d, 0x00, 0x00, 0x00, 0x05, 0x02, 0x05
000d0c   5151     movf	0x51, 0, 0x1        
000d0e   3d51     incfsz	0x51, 0, 0x1      
000d10   0000     nop                      
000d12   0500     decf	0, 0, 0x1           
000d14   0502     decf	0x2, 0, 0x1         
000d16   4000     rrncf	0, 0, 0            	DB	0x00, 0x40, 0x00, 0x40, 0x00, 0x40, 0x00, 0x00, 0x08, 0x1c, 0x3e, 0x00
000d18   4000     rrncf	0, 0, 0            
000d1a   4000     rrncf	0, 0, 0            
000d1c   0000     nop                      
000d1e   1c08     comf	0x8, 0, 0           
000d20   003e     dw	0x3e  ;unknown opcode 
000d22   1c00     comf	0, 0, 0             	DB	0x00, 0x1c, 0x1c, 0x1c, 0x00, 0x00, 0x00, 0x00, 0x70, 0x08, 0x07, 0x00
000d24   1c1c     comf	0x1c, 0, 0          
000d26   0000     nop                      
000d28   0000     nop                      
000d2a   0870     sublw	0x70               
000d2c   0007     daw                      
000d2e   0000     nop                      	DB	0x00, 0x00, 0x08, 0x08, 0x08, 0x00, 0x00, 0x00, 0x1d, 0x15, 0x17, 0x00
000d30   0808     sublw	0x8                
000d32   0008     tblrd	*                  
000d34   0000     nop                      
000d36   151d     andwf	0x1d, 0, 0x1       
000d38   0017     dw	0x17  ;unknown opcode 
000d3a   0000     nop                      	DB	0x00, 0x00, 0x07, 0x05, 0x07, 0x00, 0x00, 0x00, 0x11, 0x15, 0x0a, 0x00
000d3c   0507     decf	0x7, 0, 0x1         
000d3e   0007     daw                      
000d40   0000     nop                      
000d42   1511     andwf	0x11, 0, 0x1       
000d44   000a     tblrd	*-                 
000d46   0000     nop                      	DB	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x3c, 0x41, 0x20, 0x00
000d48   0000     nop                      
000d4a   0000     nop                      
000d4c   0400     decf	0, 0, 0             
000d4e   413c     rrncf	0x3c, 0, 0x1       
000d50   0020     dw	0x20  ;unknown opcode 
000d52   7c00     btg	0, 0x6, 0            	DB	0x00, 0x7c, 0x16, 0x15, 0x16, 0x08, 0x00, 0x21, 0x16, 0x08, 0x34, 0x42
000d54   1516     andwf	0x16, 0, 0x1       
000d56   0816     sublw	0x16               
000d58   2100     addwfc	0, 0, 0x1         
000d5a   0816     sublw	0x16               
000d5c   4234     rrncf	0x34, 0x1, 0       
000d5e   7f00     btg	0, 0x7, 0x1          	DB	0x00, 0x7f, 0x09, 0x1d, 0x01, 0x03, 0x00, 0x38, 0x54, 0x54, 0x14, 0x08
000d60   1d09     comf	0x9, 0, 0x1         
000d62   0301     mulwf	0x1, 0x1           
000d64   3800     swapf	0, 0, 0            
000d66   5454     subfwb	0x54, 0, 0        
000d68   0814     sublw	0x14               
000d6a   0000     nop                      	DB	0x00, 0x00, 0x00, 0x7c, 0x40, 0x40, 0x00, 0x7f, 0x0e, 0x1c, 0x38, 0x7f
000d6c   7c00     btg	0, 0x6, 0            
000d6e   4040     rrncf	0x40, 0, 0         
000d70   7f00     btg	0, 0x7, 0x1          
000d72   1c0e     comf	0xe, 0, 0           
000d74   7f38     btg	0x38, 0x7, 0x1       
000d76   4100     rrncf	0, 0, 0x1          	DB	0x00, 0x41, 0x22, 0x5d, 0x22, 0x1c, 0x00, 0x1c, 0x3e, 0x1c, 0x08, 0x00
000d78   5d22     subwf	0x22, 0, 0x1       
000d7a   1c22     comf	0x22, 0, 0          
000d7c   1c00     comf	0, 0, 0             
000d7e   1c3e     comf	0x3e, 0, 0          
000d80   0008     tblrd	*                  
000d82   7f00     btg	0, 0x7, 0x1          	DB	0x00, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x00, 0x77, 0x7b, 0x01, 0x7b, 0x77
000d84   7f7f     btg	0x7f, 0x7, 0x1       
000d86   7f7f     btg	0x7f, 0x7, 0x1       
000d88   7700     btg	0, 0x3, 0x1          
000d8a   017b     movlb	0x7b               
000d8c   777b     btg	0x7b, 0x3, 0x1       
000d8e   7f00     btg	0, 0x7, 0x1          	DB	0x00, 0x7f, 0x43, 0x75, 0x43, 0x7f, 0x00, 0x7f, 0x6f, 0x55, 0x43, 0x7f
000d90   7543     btg	0x43, 0x2, 0x1       
000d92   7f43     btg	0x43, 0x7, 0x1       
000d94   7f00     btg	0, 0x7, 0x1          
000d96   556f     subfwb	0x6f, 0, 0x1      
000d98   7f43     btg	0x43, 0x7, 0x1       
000d9a   4000     rrncf	0, 0, 0            	DB	0x00, 0x40, 0x40, 0x40, 0x40, 0x40, 0x00, 0x44, 0x42, 0x5f, 0x42, 0x44
000d9c   4040     rrncf	0x40, 0, 0         
000d9e   4040     rrncf	0x40, 0, 0         
000da0   4400     rlncf	0, 0, 0            
000da2   5f42     subwf	0x42, 0x1, 0x1     
000da4   4442     rlncf	0x42, 0, 0         
000da6   4000     rrncf	0, 0, 0            	DB	0x00, 0x40, 0x5e, 0x45, 0x5e, 0x40, 0x00, 0x40, 0x48, 0x55, 0x5e, 0x40
000da8   455e     rlncf	0x5e, 0, 0x1       
000daa   405e     rrncf	0x5e, 0, 0         
000dac   4000     rrncf	0, 0, 0            
000dae   5548     subfwb	0x48, 0, 0x1      
000db0   405e     rrncf	0x5e, 0, 0         
000db2   0000     nop                      	DB	0x00, 0x00, 0x04, 0x08, 0x10, 0x20, 0x00, 0x03, 0x07, 0x0e, 0x1c, 0x38
000db4   0804     sublw	0x4                
000db6   2010     addwfc	0x10, 0, 0        
000db8   0300     mulwf	0, 0x1             
000dba   0e07     movlw	0x7                
000dbc   381c     swapf	0x1c, 0, 0         
000dbe   0100     movlb	0                  	DB	0x00, 0x01, 0x03, 0x07, 0x0f, 0x1f, 0x00, 0x7c, 0x78, 0x70, 0x60, 0x40
000dc0   0703     decf	0x3, 0x1, 0x1       
000dc2   1f0f     comf	0xf, 0x1, 0x1       
000dc4   7c00     btg	0, 0x6, 0            
000dc6   7078     btg	0x78, 0, 0           
000dc8   4060     rrncf	0x60, 0, 0         
000dca   0800     sublw	0                  	DB	0x00, 0x08, 0x08, 0x1c, 0x22, 0x1c, 0x00, 0x00, 0x1c, 0x22, 0x1c, 0x00
000dcc   1c08     comf	0x8, 0, 0           
000dce   1c22     comf	0x22, 0, 0          
000dd0   0000     nop                      
000dd2   221c     addwfc	0x1c, 0x1, 0      
000dd4   001c     dw	0x1c  ;unknown opcode 
000dd6   0200     mulwf	0, 0               	DB	0x00, 0x02, 0x00, 0x08, 0x00, 0x20, 0x00, 0x04, 0x3e, 0x3f, 0x3e, 0x04
000dd8   0800     sublw	0                  
000dda   2000     addwfc	0, 0, 0           
000ddc   0400     decf	0, 0, 0             
000dde   3f3e     incfsz	0x3e, 0x1, 0x1    
000de0   043e     decf	0x3e, 0, 0          
000de2   1000     iorwf	0, 0, 0            	DB	0x00, 0x10, 0x3e, 0x7e, 0x3e, 0x10, 0x00, 0x55, 0x2a, 0x55, 0x2a, 0x55
000de4   7e3e     btg	0x3e, 0x7, 0         
000de6   103e     iorwf	0x3e, 0, 0         
000de8   5500     subfwb	0, 0, 0x1         
000dea   552a     subfwb	0x2a, 0, 0x1      
000dec   552a     subfwb	0x2a, 0, 0x1      
000dee   2400     addwf	0, 0, 0            	DB	0x00, 0x24, 0x2a, 0x7f, 0x2a, 0x12, 0x00, 0x04, 0x1e, 0x1f, 0x1e, 0x04
000df0   7f2a     btg	0x2a, 0x7, 0x1       
000df2   122a     iorwf	0x2a, 0x1, 0       
000df4   0400     decf	0, 0, 0             
000df6   1f1e     comf	0x1e, 0x1, 0x1      
000df8   041e     decf	0x1e, 0, 0          
000dfa   0000     nop                      	DB	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
000dfc   0000     nop                      
000dfe   0000     nop                      
000e00   0000     nop                      
000e02   0000     nop                      
000e04   0000     nop                      
000e06   0000     nop                      	DB	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
000e08   0000     nop                      
000e0a   0000     nop                      
000e0c   0000     nop                      
000e0e   0000     nop                      
000e10   0000     nop                      
000e12   0000     nop                      	DB	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
000e14   0000     nop                      
000e16   0000     nop                      
000e18   0000     nop                      
000e1a   0000     nop                      
000e1c   0000     nop                      
000e1e   0000     nop                      	DB	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
000e20   0000     nop                      
000e22   0000     nop                      
000e24   0000     nop                      
000e26   0000     nop                      
000e28   0000     nop                      
000e2a   0000     nop                      	DB	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
000e2c   0000     nop                      
000e2e   0000     nop                      
000e30   0000     nop                      
000e32   0000     nop                      
000e34   0000     nop                      
000e36   0000     nop                      	DB	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
000e38   0000     nop                      
000e3a   0000     nop                      
000e3c   0000     nop                      
000e3e   0000     nop                      
000e40   0000     nop                      
                                           
                                           
                                           ; Statistics:
                                           ; code size:	 2582 (0x0a16) bytes ( 1.97%)
                                           ;           	 1291 (0x050b) words
                                           ; udata size:	    0 (0x0000) bytes ( 0.00%)
                                           ; access size:	   17 (0x0011) bytes
                                           
                                           
                                           	end
